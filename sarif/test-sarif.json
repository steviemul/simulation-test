{
  "version" : "2.1.0",
  "$schema" : "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "umbrella",
        "organization" : "Fraunhofer",
        "informationUri" : "https://www.contrastsecurity.com"
      }
    },
    "properties" : {
      "scannedData" : {
        "scannedBodyClasses" : [ "org.owasp.webgoat.xss.stored.CrossSiteScriptingStored", "org.owasp.webgoat.users.WebGoatUser", "org.owasp.webgoat.sql_injection.mitigation.Servers$Server", "org.owasp.webgoat.assignments.AssignmentEndpoint", "org.owasp.webgoat.xss.CrossSiteScriptingLesson1", "org.owasp.webgoat.xss.CrossSiteScriptingLesson4", "org.owasp.webgoat.xss.CrossSiteScriptingLesson3", "org.owasp.webgoat.xxe.BlindSendFileAssignment", "org.owasp.webgoat.idor.IDOREditOtherProfiile", "org.owasp.webgoat.deserialization.InsecureDeserializationTask", "org.owasp.webgoat.assignments.AssignmentPath", "org.owasp.webgoat.service.LessonMenuService", "org.owasp.webgoat.jwt.votes.Views$UserView", "org.owasp.webgoat.crypto.SecureDefaultsAssignment", "org.owasp.webgoat.missing_ac.MissingFunctionACUsers", "org.owasp.webgoat.xss.Comment", "org.owasp.webgoat.crypto.HashingAssignment", "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a", "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b", "org.owasp.webgoat.session.LabelDebugger", "org.owasp.webgoat.challenges.challenge7.Challenge7", "org.springframework.lang.NonNullFields", "org.owasp.webgoat.auth_bypass.AccountVerificationHelper", "org.owasp.webgoat.users.Scoreboard$Ranking", "org.owasp.webgoat.asciidoc.WebWolfMacro", "org.owasp.webgoat.password_reset.SecurityQuestionAssignment", "org.owasp.webgoat.webwolf_introduction.WebWolfIntroduction", "org.owasp.webgoat.crypto.CryptoUtil", "org.owasp.webgoat.assignments.AttackResult", "org.owasp.webgoat.challenges.Flag", "org.owasp.webgoat.client_side_filtering.ShopEndpoint", "org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz", "org.owasp.webgoat.challenges.challenge5.Assignment5", "org.springframework.lang.NonNullApi", "org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions", "org.owasp.webgoat.WebGoat", "org.owasp.webgoat.challenges.challenge7.MD5$MD5State", "org.owasp.webgoat.AsciiDoctorTemplateResolver", "org.owasp.webgoat.users.UserForm", "org.owasp.webgoat.HammerHead", "com.martiansoftware.nailgun.builtins.NGServerStats", "org.owasp.webgoat.idor.IDORViewOwnProfile", "org.owasp.webgoat.xxe.CommentsEndpoint", "org.owasp.webgoat.http_proxies.HttpProxies", "org.owasp.webgoat.session.Course", "org.owasp.webgoat.vulnerable_components.ContactConverter", "com.martiansoftware.nailgun.ThreadLocalInputStream", "org.owasp.webgoat.path_traversal.ProfileUpload", "org.owasp.webgoat.challenges.Email", "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval", "org.owasp.webgoat.jwt.votes.Vote", "org.owasp.webgoat.csrf.CSRFFeedback", "org.owasp.webgoat.challenges.challenge8.Challenge8", "org.owasp.webgoat.challenges.challenge1.Assignment1", "org.owasp.webgoat.missing_ac.Users$4", "org.owasp.webgoat.missing_ac.Users$5", "org.owasp.webgoat.missing_ac.Users$2", "org.owasp.webgoat.missing_ac.Users$3", "org.owasp.webgoat.missing_ac.Users$1", "org.owasp.webgoat.missing_ac.Users$6", "org.owasp.webgoat.missing_ac.MissingFunctionAC", "org.owasp.webgoat.password_reset.ResetLinkAssignment", "org.owasp.webgoat.service.ReportCardService$LessonStatistics", "org.owasp.webgoat.path_traversal.ProfileUploadFix", "org.owasp.webgoat.jwt.JWTSecretKeyEndpoint", "org.owasp.webgoat.xss.CrossSiteScriptingLesson6a", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin", "org.owasp.webgoat.html_tampering.HtmlTamperingTask", "org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl", "org.owasp.webgoat.idor.IDORDiffAttributes", "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13", "org.owasp.webgoat.assignments.AttackResult$AttackResultBuilder", "org.owasp.webgoat.missing_ac.DisplayUser", "org.owasp.webgoat.auth_bypass.VerifyAccount", "org.owasp.webgoat.csrf.CSRF", "org.dummy.insecure.framework.VulnerableTaskHolder", "org.owasp.webgoat.xss.stored.StoredXssComments", "org.owasp.webgoat.idor.IDORLogin", "org.owasp.webgoat.path_traversal.ProfileUploadBase", "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b$JavaObjectFromString", "org.owasp.webgoat.deserialization.InsecureDeserialization", "org.owasp.webgoat.lessons.Hint", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge", "org.owasp.webgoat.sql_injection.mitigation.Servers", "org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCode", "org.springframework.lang.UsesJava7", "org.owasp.webgoat.service.HintService", "org.springframework.lang.UsesJava8", "org.owasp.webgoat.controller.Welcome", "org.owasp.webgoat.challenges.challenge8.Assignment8", "org.owasp.webgoat.deserialization.SerializationHelper", "org.owasp.webgoat.xss.CrossSiteScriptingLesson5a", "org.owasp.webgoat.i18n.Language", "org.owasp.webgoat.lessons.CourseConfiguration", "org.owasp.webgoat.crypto.EncodingAssignment", "org.owasp.webgoat.challenges.challenge1.Challenge1", "org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput", "org.owasp.webgoat.lessons.Category", "org.owasp.webgoat.template.LessonTemplate", "org.owasp.webgoat.vulnerable_components.VulnerableComponents", "org.springframework.lang.UsesSunHttpServer", "org.owasp.webgoat.xxe.Comment", "org.owasp.webgoat.LessonTemplateResolver", "org.owasp.webgoat.jwt.JWTVotesEndpoint", "org.owasp.webgoat.asciidoc.WebGoatTmpDirMacro", "com.martiansoftware.nailgun.Alias", "org.owasp.webgoat.secure_password.SecurePasswords", "org.owasp.webgoat.asciidoc.WebGoatVersionMacro", "org.owasp.webgoat.xxe.XXE", "org.owasp.webgoat.xss.DOMCrossSiteScripting", "org.owasp.webgoat.secure_password.SecurePasswordsAssignment", "org.owasp.webgoat.http_basics.HttpBasics", "org.owasp.webgoat.service.LessonTitleService", "org.owasp.webgoat.ssrf.SSRF", "org.owasp.webgoat.xxe.User", "org.owasp.webgoat.xss.CrossSiteScripting", "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords", "org.owasp.webgoat.asciidoc.OperatingSystemMacro", "com.martiansoftware.nailgun.NGSecurityManager", "org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes", "org.owasp.webgoat.csrf.CSRFLogin", "org.owasp.webgoat.csrf.ForgedReviews", "org.owasp.webgoat.idor.IDORViewOtherProfile", "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionMitigations", "org.owasp.webgoat.session.WebSession", "org.owasp.webgoat.vulnerable_components.Contact", "org.owasp.webgoat.users.UserSession", "com.martiansoftware.nailgun.NGExitException", "org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier", "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation", "org.owasp.webgoat.idor.IDOR", "org.owasp.webgoat.i18n.Messages", "org.owasp.webgoat.WebSecurityConfig", "org.owasp.webgoat.i18n.PluginMessages", "org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment", "org.owasp.webgoat.crypto.XOREncodingAssignment", "org.owasp.webgoat.missing_ac.MissingFunctionACYourHash", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a", "org.owasp.webgoat.lessons.LessonMenuItem", "org.owasp.webgoat.challenges.challenge7.Assignment7", "org.owasp.webgoat.service.LabelDebugService", "org.owasp.webgoat.lessons.LessonMenuItemType", "org.springframework.lang.NonNull", "org.owasp.webgoat.password_reset.PasswordResetEmail", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b", "org.owasp.webgoat.password_reset.QuestionsAssignment", "org.owasp.webgoat.webwolf_introduction.Email", "org.owasp.webgoat.bypass_restrictions.BypassRestrictions", "org.owasp.webgoat.service.ReportCardService", "org.owasp.webgoat.webwolf_introduction.LandingAssignment", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10", "org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest", "org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier", "org.owasp.webgoat.webwolf_introduction.Email$EmailBuilder", "org.owasp.webgoat.service.ReportCardService$ReportCard", "com.martiansoftware.nailgun.builtins.DefaultNail", "org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation", "org.owasp.webgoat.assignments.AssignmentHints", "com.martiansoftware.nailgun.ThreadLocalPrintStream", "org.owasp.webgoat.template.SampleAttack$Item", "org.owasp.webgoat.insecure_login.InsecureLogin", "org.owasp.webgoat.http_basics.HttpBasicsLesson", "org.owasp.webgoat.jwt.votes.Views$GuestView", "org.owasp.webgoat.users.UserRepository", "org.owasp.webgoat.StartWebGoat", "org.owasp.webgoat.users.UserValidator", "org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus", "org.owasp.webgoat.xxe.Ping", "org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword", "org.owasp.webgoat.controller.StartLesson", "org.owasp.webgoat.lessons.Lesson", "org.owasp.webgoat.service.LabelService", "module-info", "org.owasp.webgoat.challenges.Email$EmailBuilder", "org.owasp.webgoat.lessons.LessonInfoModel", "org.owasp.webgoat.idor.UserProfile", "org.owasp.webgoat.introduction.WebGoatIntroduction", "org.owasp.webgoat.ssrf.SSRFTask1", "org.owasp.webgoat.password_reset.PasswordReset", "org.owasp.webgoat.ssrf.SSRFTask2", "org.owasp.webgoat.challenges.challenge7.MD5", "org.owasp.webgoat.jwt.JWTFinalEndpoint", "org.owasp.webgoat.challenges.Flag$FlagPosted", "org.owasp.webgoat.client_side_filtering.Salaries", "org.owasp.webgoat.MvcConfiguration", "org.owasp.webgoat.sql_injection.advanced.SqlInjectionAdvanced", "org.owasp.webgoat.xxe.SimpleXXE", "org.owasp.webgoat.password_reset.PasswordResetEmail$PasswordResetEmailBuilder", "org.owasp.webgoat.service.LessonProgressService", "org.owasp.webgoat.AjaxAuthenticationEntryPoint", "org.owasp.webgoat.jwt.votes.Views", "org.owasp.webgoat.jwt.JWTFinalEndpoint$1", "org.owasp.webgoat.insecure_login.InsecureLoginTask", "org.owasp.webgoat.lessons.Assignment", "org.owasp.webgoat.xss.CrossSiteScriptingQuiz", "org.owasp.webgoat.xxe.ContentTypeAssignment", "org.owasp.webgoat.service.SessionService", "org.owasp.webgoat.webwolf_introduction.MailAssignment", "org.owasp.webgoat.vulnerable_components.CatchAllConverter", "org.springframework.lang.UsesSunMisc", "org.owasp.webgoat.chrome_dev_tools.ChromeDevTools", "org.owasp.webgoat.xss.mitigation.CrossSiteScriptingMitigation", "org.owasp.webgoat.jwt.JWTRefreshEndpoint", "org.owasp.webgoat.csrf.Review", "org.owasp.webgoat.DatabaseInitialization", "org.owasp.webgoat.service.LessonInfoService", "org.owasp.webgoat.HSQLDBDatabaseConfig", "org.owasp.webgoat.csrf.CSRFGetFlag", "org.owasp.webgoat.assignments.LessonTrackerInterceptor", "org.owasp.webgoat.xxe.Comments", "org.owasp.webgoat.missing_ac.Users", "org.owasp.webgoat.cia.CIA", "com.martiansoftware.nailgun.builtins.NGStop", "org.owasp.webgoat.users.RegistrationController", "org.owasp.webgoat.users.UserTracker", "org.owasp.webgoat.users.UserTrackerRepository", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9", "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8", "org.owasp.webgoat.password_reset.SimpleMailAssignment", "org.owasp.webgoat.users.Scoreboard", "org.owasp.webgoat.chrome_dev_tools.NetworkDummy", "org.owasp.webgoat.users.UserService", "org.owasp.webgoat.client_side_filtering.ClientSideFiltering", "org.springframework.lang.Nullable", "org.owasp.webgoat.challenges.SolutionConstants", "org.owasp.webgoat.challenges.challenge1.ImageServlet", "org.owasp.webgoat.asciidoc.WebWolfRootMacro", "org.owasp.webgoat.http_basics.HttpBasicsQuiz", "com.martiansoftware.nailgun.builtins.NGAlias", "org.owasp.webgoat.password_reset.TriedQuestions", "org.owasp.webgoat.challenges.challenge7.PasswordResetLink", "org.owasp.webgoat.crypto.Crypto", "org.owasp.webgoat.service.LessonProgressService$LessonOverview", "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson", "org.owasp.webgoat.path_traversal.PathTraversal", "org.owasp.webgoat.crypto.SigningAssignment", "org.owasp.webgoat.service.RestartLessonService", "com.martiansoftware.nailgun.builtins.NGVersion", "org.owasp.webgoat.auth_bypass.AuthBypass", "org.owasp.webgoat.chrome_dev_tools.NetworkLesson", "org.owasp.webgoat.sql_injection.introduction.SqlInjection", "org.owasp.webgoat.users.LessonTracker", "org.owasp.webgoat.asciidoc.EnvironmentExposure", "org.owasp.webgoat.challenges.ChallengeIntro", "org.owasp.webgoat.challenges.challenge5.Challenge5", "org.owasp.webgoat.template.SampleAttack", "org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm", "org.owasp.webgoat.cia.CIAQuiz", "org.owasp.webgoat.html_tampering.HtmlTampering", "org.owasp.webgoat.jwt.JWT", "org.owasp.webgoat.csrf.CSRFConfirmFlag1", "org.owasp.webgoat.session.UserSessionData", "org.owasp.webgoat.users.UserTracker$$$_umbrella_deLambda1", "org.owasp.webgoat.jwt.JWTVotesEndpoint$$$_umbrella_deLambda1", "org.owasp.webgoat.session.Course$$$_umbrella_deLambda1", "org.owasp.webgoat.jwt.JWTVotesEndpoint$$$_umbrella_deLambda2", "org.owasp.webgoat.jwt.JWTVotesEndpoint$$$_umbrella_deLambda3", "org.owasp.webgoat.session.Course$$$_umbrella_deLambda3", "org.owasp.webgoat.session.Course$$$_umbrella_deLambda2", "org.owasp.webgoat.challenges.challenge8.Assignment8$$$_umbrella_deLambda5", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda2", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda1", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda4", "org.owasp.webgoat.challenges.challenge8.Assignment8$$$_umbrella_deLambda1", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda3", "org.owasp.webgoat.challenges.challenge8.Assignment8$$$_umbrella_deLambda2", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda6", "org.owasp.webgoat.challenges.challenge8.Assignment8$$$_umbrella_deLambda3", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda5", "org.owasp.webgoat.challenges.challenge8.Assignment8$$$_umbrella_deLambda4", "org.owasp.webgoat.users.UserTracker$$$_umbrella_deLambda2", "org.owasp.webgoat.users.UserTracker$$$_umbrella_deLambda3", "org.owasp.webgoat.users.LessonTracker$$$_umbrella_deLambda7", "org.owasp.webgoat.xxe.Comments$$$_umbrella_deLambda1", "org.owasp.webgoat.service.LessonMenuService$$$_umbrella_deLambda2", "org.owasp.webgoat.service.LessonMenuService$$$_umbrella_deLambda1", "org.owasp.webgoat.service.HintService$$$_umbrella_deLambda2", "org.owasp.webgoat.service.HintService$$$_umbrella_deLambda3", "org.owasp.webgoat.service.HintService$$$_umbrella_deLambda1", "org.owasp.webgoat.client_side_filtering.ShopEndpoint$CheckoutCodes$$$_umbrella_deLambda1", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda6", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda5", "org.owasp.webgoat.xxe.ContentTypeAssignment$$$_umbrella_deLambda1", "org.owasp.webgoat.controller.StartLesson$$$_umbrella_deLambda1", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda7", "org.owasp.webgoat.session.Course$$$_umbrella_deLambda4", "org.owasp.webgoat.lessons.CourseConfiguration$$$_umbrella_deLambda4", "org.owasp.webgoat.lessons.CourseConfiguration$$$_umbrella_deLambda3", "org.owasp.webgoat.lessons.CourseConfiguration$$$_umbrella_deLambda2", "org.owasp.webgoat.lessons.CourseConfiguration$$$_umbrella_deLambda1", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda2", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda1", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda4", "org.owasp.webgoat.asciidoc.WebWolfMacro$$$_umbrella_deLambda1", "org.owasp.webgoat.challenges.Flag$$$_umbrella_deLambda1", "org.owasp.webgoat.users.Scoreboard$$$_umbrella_deLambda3" ],
        "nonScannedBodyClasses" : [ "com.beust.jcommander.internal.Maps", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonBooleanFormatVisitor", "com.fasterxml.jackson.databind.MappingIterator", "com.fasterxml.jackson.databind.deser.BeanDeserializerModifier", "org.jruby.ir.instructions.CallBase", "org.jruby.runtime.profile.builtin.ProfileOutput", "sun.awt.datatransfer.DataTransferer", "javax.servlet.Registration$Dynamic", "javax.swing.border.Border", "com.fasterxml.jackson.annotation.JsonFormat$Features", "java.lang.Runtime$Version", "com.fasterxml.jackson.databind.cfg.MapperConfigBase", "javax.xml.bind.ValidationEventHandler", "com.nulabinc.zxcvbn.Matching", "javax.servlet.Filter", "org.hsqldb.lib.HsqlByteArrayOutputStream", "org.jruby.runtime.backtrace.RubyStackTraceElement", "org.springframework.web.context.support.WebApplicationObjectSupport", "org.jruby.ast.MultipleAsgnNode", "java.lang.CharSequence", "java.awt.dnd.DropTargetDragEvent", "javax.tools.Tool", "com.fasterxml.jackson.databind.type.TypeBase", "org.jruby.Ruby$RecursiveFunctionEx", "org.springframework.security.core.session.SessionRegistry", "com.fasterxml.jackson.databind.node.TextNode", "org.joda.time.DateMidnight$Property", "java.awt.Scrollbar", "org.jsoup.Jsoup", "org.jruby.javasupport.JavaClass", "org.jruby.ir.instructions.boxing.BoxFixnumInstr", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonAnyFormatVisitor", "java.util.Currency", "java.util.LinkedHashMap", "java.nio.channels.InterruptibleChannel", "org.springframework.stereotype.Service", "org.springframework.boot.BeanDefinitionLoader", "org.springframework.security.web.header.writers.XXssProtectionHeaderWriter", "org.springframework.expression.TypedValue", "org.jruby.runtime.JavaSites$ObjectSites", "org.jruby.ast.PostExeNode", "org.jruby.ast.OrNode", "java.util.function.ToIntFunction", "java.util.Base64$Encoder", "org.jruby.RubyThread$Status", "java.lang.Module", "org.jruby.runtime.profile.ProfilingServiceLookup", "org.jruby.ast.DefinedNode", "org.jcodings.util.CaseInsensitiveBytesHash$CaseInsensitiveBytesHashEntry", "jnr.ffi.Struct$EnumField", "org.jruby.lexer.LexerSource", "java.lang.Throwable$PrintStreamOrWriter", "com.fasterxml.jackson.databind.util.Converter", "org.thymeleaf.templateresource.ITemplateResource", "org.jruby.org.objectweb.asm.Attribute", "com.fasterxml.jackson.core.SerializableString", "javax.servlet.http.HttpServletRequestWrapper", "com.fasterxml.jackson.core.Versioned", "io.jsonwebtoken.JwtParser", "org.springframework.security.web.DefaultSecurityFilterChain", "java.nio.channels.AsynchronousChannel", "java.lang.System$Logger$Level", "sun.font.CoreMetrics", "java.awt.Window$Type", "org.jruby.ir.operands.Regexp", "java.lang.annotation.Documented", "org.joni.OptMapInfo", "java.util.concurrent.ThreadFactory", "org.jruby.RubyHash$Mismatch", "org.jruby.ast.MethodDefNode", "org.flywaydb.core.internal.sqlscript.SqlScriptExecutor", "org.springframework.http.HttpHeaders", "org.springframework.security.config.annotation.authentication.configurers.userdetails.DaoAuthenticationConfigurer", "org.hsqldb.PeriodDefinition", "org.flywaydb.core.api.callback.Event", "org.jruby.ast.VAliasNode", "org.jruby.RubyIO$1", "org.jruby.ir.operands.ScopeModule", "io.jsonwebtoken.SigningKeyResolver", "java.lang.module.ModuleDescriptor$Exports", "org.springframework.security.web.server.csrf.CsrfToken", "org.springframework.data.jpa.repository.JpaRepository", "java.awt.event.InputEvent", "org.joda.time.base.AbstractPartial", "org.springframework.security.web.context.HttpRequestResponseHolder", "org.jruby.ast.HashNode", "org.asciidoctor.log.LogHandler", "com.fasterxml.jackson.databind.ser.ContextualSerializer", "org.hsqldb.Token", "jnr.constants.platform.Errno", "org.springframework.security.web.header.writers.ReferrerPolicyHeaderWriter$ReferrerPolicy", "org.jruby.ir.instructions.OneOperandResultBaseInstr", "java.lang.AbstractStringBuilder", "org.jcodings.CaseFoldCodeItem", "java.lang.ref.WeakReference", "org.springframework.web.util.UriBuilder", "org.springframework.core.annotation.AliasFor", "org.springframework.security.config.annotation.web.builders.WebSecurity", "java.nio.file.attribute.BasicFileAttributes", "org.thymeleaf.dialect.IExecutionAttributeDialect", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor", "java.util.BitSet", "org.springframework.http.server.reactive.ServerHttpResponse", "org.springframework.http.server.reactive.SslInfo", "com.fasterxml.jackson.databind.ser.BeanSerializer", "java.nio.file.attribute.FileTime", "sun.util.calendar.CalendarSystem", "java.awt.geom.Rectangle2D$Float", "org.jruby.ast.ListNode", "org.thymeleaf.engine.XMLElementName", "java.util.regex.Pattern$BmpCharProperty", "org.jruby.ast.LocalAsgnNode", "org.springframework.security.core.userdetails.UserDetailsPasswordService", "javax.xml.xpath.XPathFunction", "sun.font.FontStrikeDesc", "org.jruby.ir.operands.LocalVariable", "org.jruby.ir.instructions.SearchModuleForConstInstr", "org.jruby.ir.instructions.MatchInstr", "org.asciidoctor.extension.IncludeProcessor", "org.springframework.core.convert.converter.ConverterRegistry", "java.util.concurrent.CompletableFuture$UniExceptionally", "org.jsoup.parser.Tag", "org.springframework.security.config.annotation.SecurityBuilder", "javax.xml.xpath.XPathVariableResolver", "javax.swing.AbstractButton$Handler", "javax.xml.bind.JAXBIntrospector", "javax.xml.bind.DatatypeConverter", "java.security.SignatureSpi", "java.time.format.FormatStyle", "com.fasterxml.jackson.databind.deser.DefaultDeserializationContext", "org.springframework.expression.ParserContext", "java.lang.Error", "org.jruby.util.io.OpenFile$1", "org.asciidoctor.log.Severity", "org.springframework.security.web.authentication.preauth.PreAuthenticatedGrantedAuthoritiesWebAuthenticationDetails", "sun.security.x509.AVA", "org.jruby.lexer.yacc.ISourcePosition", "sun.awt.EventQueueItem", "java.util.stream.DoubleStream$Builder", "java.net.PasswordAuthentication", "java.util.ResourceBundle", "org.flywaydb.core.internal.schemahistory.AppliedMigration", "sun.reflect.generics.tree.TypeVariableSignature", "org.hsqldb.ExpressionColumn", "org.jruby.ir.instructions.PushMethodBindingInstr", "java.util.Properties", "java.util.stream.LongStream", "java.util.concurrent.Executor", "java.lang.Deprecated", "java.nio.channels.SelectionKey", "java.io.StringWriter", "org.jruby.runtime.Signature", "org.flywaydb.core.internal.jdbc.Result", "org.springframework.ui.context.Theme", "org.jruby.ir.operands.Self", "java.awt.VKCollection", "java.lang.invoke.MemberName$Factory", "java.time.temporal.ChronoUnit", "org.springframework.boot.SpringBootConfiguration", "java.nio.LongBuffer", "jdk.internal.vm.annotation.Contended", "java.sql.Time", "org.jruby.runtime.CallSite", "java.sql.SQLXML", "org.springframework.security.config.annotation.ObjectPostProcessor", "java.nio.file.WatchKey", "org.springframework.web.accept.MappingMediaTypeFileExtensionResolver", "com.fasterxml.jackson.core.JsonParseException", "java.awt.event.MouseListener", "sun.util.calendar.AbstractCalendar", "org.jruby.RubyModule$ConstantEntry", "org.jruby.ast.GlobalVarNode", "java.util.function.Predicate", "java.nio.file.attribute.FileAttributeView", "org.joni.NameEntry", "java.lang.ThreadLocal$ThreadLocalMap", "sun.reflect.generics.visitor.TypeTreeVisitor", "java.awt.Dimension", "org.jruby.ir.instructions.BNilInstr", "java.security.cert.Certificate", "org.jruby.ir.instructions.PushBlockBindingInstr", "org.jruby.org.objectweb.asm.ModuleVisitor", "sun.util.calendar.BaseCalendar", "org.apache.commons.lang3.RandomStringUtils", "java.util.SortedMap", "sun.reflect.generics.tree.BooleanSignature", "org.jruby.runtime.marshal.UnmarshalStream", "org.jruby.ast.InstVarNode", "java.awt.PageAttributes$PrintQualityType", "java.util.concurrent.atomic.AtomicReference", "java.awt.image.ImageProducer", "org.jruby.util.DefinedMessage", "org.hsqldb.StatementCompound", "org.springframework.http.converter.json.MappingJacksonValue", "java.awt.JobAttributes$SidesType", "org.flywaydb.core.api.callback.Error", "javax.xml.stream.events.StartElement", "org.hsqldb.lib.Notified", "org.jruby.ir.instructions.ReturnInstr", "java.io.OutputStream", "java.security.SecureClassLoader", "org.springframework.security.web.savedrequest.SavedRequest", "org.springframework.security.authentication.ProviderManager", "org.joda.time.field.AbstractReadableInstantFieldProperty", "java.awt.List", "com.fasterxml.jackson.databind.cfg.HandlerInstantiator", "org.jruby.runtime.JavaSites$RationalSites", "java.awt.event.PaintEvent", "com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer", "org.jruby.ast.AliasNode", "java.net.HttpURLConnection", "jnr.posix.Group", "org.jruby.ir.transformations.inlining.CloneInfo", "java.nio.channels.DatagramChannel", "java.util.regex.Pattern$BitClass", "java.awt.Panel", "sun.security.x509.X500Name", "org.springframework.http.ContentDisposition$1", "org.jruby.exceptions.JumpException", "org.hsqldb.types.BlobDataID", "java.util.EnumSet", "org.jruby.ext.ffi.MemoryIO", "org.flywaydb.core.internal.database.base.Database", "com.fasterxml.jackson.databind.util.Named", "org.springframework.boot.builder.SpringApplicationBuilder", "java.awt.datatransfer.FlavorMap", "com.fasterxml.jackson.annotation.OptBoolean", "java.awt.event.WindowAdapter", "java.util.EventListener", "org.jruby.runtime.marshal.CoreObjectType", "java.awt.peer.TaskbarPeer", "com.thoughtworks.xstream.converters.ConverterLookup", "org.springframework.security.config.annotation.web.builders.WebSecurity$1", "java.awt.PageAttributes$OrientationRequestedType", "org.hsqldb.Table", "org.apache.commons.lang3.RandomUtils", "java.io.FilenameFilter", "java.util.Hashtable$Entry", "javax.xml.xpath.XPath", "org.springframework.boot.ApplicationArguments", "org.jruby.ast.DefsNode", "org.jruby.RubyThread$Task", "org.springframework.core.env.ConfigurablePropertyResolver", "javax.swing.Action", "org.jruby.ast.LocalVarNode", "org.springframework.security.core.CredentialsContainer", "java.lang.StackTraceElement", "org.springframework.http.server.PathContainer$Options", "org.hsqldb.Routine", "org.springframework.boot.autoconfigure.EnableAutoConfiguration", "org.springframework.security.web.session.InvalidSessionStrategy", "org.asciidoctor.extension.InlineMacroProcessor", "org.jruby.java.invokers.MethodInvoker", "java.lang.annotation.Target", "java.lang.invoke.ClassSpecializer$SpeciesData", "org.springframework.context.annotation.ComponentScan", "java.awt.event.MouseEvent", "org.slf4j.event.SubstituteLoggingEvent", "org.hsqldb.StatementSimple", "org.thymeleaf.engine.IGatheringModelProcessable", "java.io.ObjectInputStream$FieldValues", "org.springframework.security.config.annotation.AbstractSecurityBuilder", "java.awt.datatransfer.MimeTypeParameterList", "org.springframework.http.converter.GenericHttpMessageConverter", "com.thoughtworks.xstream.io.HierarchicalStreamWriter", "org.jruby.ast.ClassNode", "java.sql.Connection", "java.nio.file.FileTreeWalker$Event", "org.jruby.Ruby", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$UserInfoEndpointConfig", "org.jruby.ast.Node", "org.springframework.util.MimeType", "org.jruby.CompatVersion", "org.w3c.dom.DOMStringList", "org.springframework.web.bind.annotation.PutMapping", "javax.swing.plaf.ToolTipUI", "java.beans.VetoableChangeListener", "javax.xml.validation.TypeInfoProvider", "org.jruby.ast.DotNode", "sun.reflect.generics.tree.ClassSignature", "com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder", "java.lang.invoke.MethodHandle$PolymorphicSignature", "org.springframework.format.FormatterRegistry", "org.joda.time.base.AbstractPeriod", "javax.accessibility.AccessibleContext", "java.util.UUID", "org.jruby.ast.InstAsgnNode", "org.hsqldb.types.DTIType", "org.springframework.core.env.PropertySources", "org.jruby.ast.CaseNode", "java.util.spi.LocaleServiceProvider", "org.jruby.ast.DSymbolNode", "com.fasterxml.jackson.core.io.CharacterEscapes", "org.hsqldb.RangeVariable", "java.time.format.DateTimeFormatterBuilder$DateTimePrinterParser", "org.flywaydb.core.internal.sqlscript.SqlScriptExecutorFactory", "org.joda.time.TimeOfDay$Property", "java.awt.Robot", "org.jsoup.nodes.Document$OutputSettings", "org.w3c.dom.Node", "jnr.posix.SignalHandler", "org.joni.CaptureTreeNode", "org.w3c.dom.TypeInfo", "org.jruby.ast.LiteralNode", "org.jruby.util.RubyDateFormatter", "java.lang.invoke.DirectMethodHandle", "com.fasterxml.jackson.core.JsonParser", "org.springframework.security.config.Customizer", "sun.reflect.generics.tree.ClassTypeSignature", "javax.security.auth.Subject", "org.springframework.context.EnvironmentAware", "org.jruby.ext.coverage.CoverageData", "jnr.constants.platform.Signal", "java.lang.annotation.RetentionPolicy", "org.jruby.internal.runtime.methods.NativeCallMethod", "org.flywaydb.core.api.migration.JavaMigration", "org.jruby.ir.instructions.BuildCompoundStringInstr", "org.springframework.format.AnnotationFormatterFactory", "org.jruby.management.RuntimeMBean", "org.springframework.jdbc.support.SQLExceptionTranslator", "sun.awt.RequestFocusController", "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$ConcurrencyControlConfigurer", "org.jruby.util.collections.ClassValue", "org.springframework.web.client.ResponseErrorHandler", "java.io.PrintWriter", "javax.swing.event.ChangeEvent", "org.jsoup.parser.Token", "java.io.ObjectInputValidation", "sun.reflect.generics.tree.Wildcard", "java.awt.Component", "jnr.ffi.Variable", "org.w3c.dom.DocumentFragment", "org.jruby.util.Random", "org.springframework.security.web.authentication.logout.LogoutSuccessHandler", "com.fasterxml.jackson.databind.node.JsonNodeFactory", "org.springframework.beans.factory.DisposableBean", "org.jruby.ast.ClassVarAsgnNode", "java.security.Guard", "com.fasterxml.jackson.databind.cfg.MapperConfig", "javax.xml.namespace.QName", "org.jruby.runtime.profile.builtin.ProfileData", "org.jruby.ast.NumericNode", "org.springframework.boot.web.servlet.ServletComponentScan", "java.awt.EventFilter", "org.jruby.RubyArray$ArgumentVisitor", "org.springframework.http.server.ServerHttpAsyncRequestControl", "java.io.ObjectInputFilter$FilterInfo", "org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration", "org.jruby.ast.types.ILiteralNode", "java.lang.module.ModuleReader", "javax.xml.validation.Schema", "java.io.BufferedOutputStream", "java.awt.event.InvocationEvent", "org.hsqldb.navigator.RowSetNavigatorDataChange", "javax.servlet.http.HttpServletRequest", "org.jruby.ir.IRClosure", "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry", "org.springframework.web.servlet.HandlerInterceptor", "java.text.CalendarBuilder", "org.jruby.runtime.load.BasicLibraryService", "org.hsqldb.lib.IntIndex", "jnr.posix.LibC", "org.thymeleaf.model.IAttribute", "org.springframework.context.ResourceLoaderAware", "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$1", "org.springframework.security.core.session.SessionInformation", "com.fasterxml.jackson.core.util.TextBuffer", "org.springframework.web.servlet.config.annotation.ViewControllerRegistration", "javax.xml.stream.EventFilter", "org.jruby.internal.runtime.methods.Framing", "org.joda.time.ReadableDateTime", "org.springframework.security.config.annotation.web.configuration.EnableWebSecurity", "org.springframework.context.EmbeddedValueResolverAware", "org.flywaydb.core.Flyway", "java.nio.file.attribute.FileStoreAttributeView", "org.asciidoctor.ast.ContentPart", "org.springframework.web.util.UriComponents", "org.jsoup.select.NodeVisitor", "org.jruby.ir.operands.Reference", "org.hsqldb.HsqlNameManager", "org.springframework.jdbc.datasource.AbstractDataSource", "org.jruby.ir.instructions.LexicalSearchConstInstr", "com.fasterxml.jackson.databind.SerializationConfig", "java.lang.AutoCloseable", "java.nio.ByteBuffer", "java.awt.Button", "org.jruby.ast.StrNode", "com.fasterxml.jackson.databind.ser.std.BeanSerializerBase", "com.fasterxml.jackson.annotation.JsonInclude$Value", "org.thymeleaf.engine.TemplateFlowController", "org.springframework.expression.OperatorOverloader", "java.util.stream.IntStream$Builder", "java.awt.peer.TextFieldPeer", "javax.swing.event.AncestorEvent", "com.fasterxml.jackson.databind.ser.FilterProvider", "org.springframework.web.context.WebApplicationContext", "jnr.posix.NativeTimes", "javax.persistence.Column", "org.jruby.internal.runtime.GlobalVariable$Scope", "org.jruby.ParseResult", "java.util.concurrent.CompletableFuture$BiRun", "jdk.internal.reflect.CallerSensitive", "org.springframework.security.config.annotation.web.HttpSecurityBuilder", "org.springframework.context.annotation.Conditional", "org.jruby.ir.operands.Splat", "org.springframework.jdbc.core.PreparedStatementSetter", "java.awt.GraphicsDevice", "java.util.concurrent.ForkJoinPool$WorkQueue", "org.jruby.util.io.STDIO", "java.util.function.DoubleBinaryOperator", "com.fasterxml.jackson.databind.ser.impl.WritableObjectId", "java.awt.peer.ChoicePeer", "com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization", "javax.xml.bind.attachment.AttachmentMarshaller", "org.springframework.http.client.ClientHttpResponse", "org.asciidoctor.OptionsBuilder", "sun.util.resources.OpenListResourceBundle", "javax.accessibility.AccessibleAction", "org.jruby.RubyHash$Visitor", "java.awt.font.NumericShaper", "org.jruby.ast.SplatNode", "org.jruby.ir.instructions.PutGlobalVarInstr", "org.jruby.util.io.SelectorPool", "javax.swing.event.MenuDragMouseListener", "sun.font.FontLineMetrics", "org.jsoup.nodes.Attribute", "org.thymeleaf.cache.ICacheEntryValidity", "java.io.FileDescriptor", "org.jruby.ast.StarNode", "org.flywaydb.core.internal.jdbc.Results", "org.asciidoctor.extension.MacroProcessor", "org.flywaydb.core.internal.clazz.ClassProvider", "java.security.spec.EncodedKeySpec", "org.springframework.web.servlet.config.annotation.InterceptorRegistration", "org.springframework.ui.Model", "sun.font.AttributeValues", "org.thymeleaf.engine.TextAttributeName", "java.util.Spliterator$OfLong", "org.jruby.ir.instructions.DefineClassMethodInstr", "java.time.zone.ZoneOffsetTransitionRule", "com.fasterxml.jackson.databind.util.LinkedNode", "org.springframework.format.Parser", "javax.xml.bind.Binder", "javax.swing.SingleSelectionModel", "org.jruby.ir.instructions.NoOperandInstr", "org.asciidoctor.SafeMode", "org.jruby.ir.instructions.CheckArgsArrayArityInstr", "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder$IntPair", "org.springframework.beans.factory.support.BeanNameGenerator", "com.thoughtworks.xstream.io.xml.XmlFriendlyNameCoder", "org.jruby.runtime.ObjectSpace$WeakReferenceListNode", "org.jruby.ir.interpreter.FullInterpreterContext", "org.thymeleaf.engine.TextAttributeDefinition", "org.jruby.ast.WhenNode", "javax.servlet.descriptor.JspConfigDescriptor", "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor$Serialization", "org.joda.time.Duration", "org.joni.Regex", "org.jruby.internal.runtime.methods.Scoping", "org.springframework.format.Printer", "io.jsonwebtoken.Claims", "org.springframework.context.support.ReloadableResourceBundleMessageSource$PropertiesHolder", "com.fasterxml.jackson.databind.util.Annotations", "java.nio.file.attribute.UserPrincipal", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable", "org.jruby.RubyLocalJumpError$Reason", "org.hsqldb.types.ArrayType", "java.util.stream.Collector$Characteristics", "com.fasterxml.jackson.databind.introspect.AnnotatedClass$Creators", "org.springframework.beans.factory.ObjectFactory", "java.awt.font.FontRenderContext", "java.io.StringReader", "java.security.Provider$Service", "org.springframework.beans.factory.BeanFactory", "com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping", "org.flywaydb.core.internal.database.base.Table", "javax.validation.constraints.Pattern$Flag", "org.jruby.parser.ParserConfiguration", "org.thymeleaf.context.IExpressionContext", "org.springframework.web.servlet.view.AbstractCachingViewResolver$CacheFilter", "org.jruby.runtime.builtin.InstanceVariables", "org.jruby.javasupport.proxy.JavaProxyReflectionObject", "org.jruby.util.ShellLauncher$POpenProcess", "org.jruby.ir.instructions.UpdateBlockExecutionStateInstr", "org.jruby.parser.StaticScope", "org.joda.time.DateTime$Property", "sun.java2d.pipe.SpanIterator", "org.springframework.web.util.UriTemplateHandler", "java.lang.SecurityException", "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping", "javax.persistence.Version", "sun.security.x509.RDN", "javax.servlet.http.HttpSession", "org.asciidoctor.Options", "org.jruby.RubyFixnum", "org.asciidoctor.ast.Author", "org.jruby.ir.instructions.specialized.OneOperandArgNoBlockCallInstr", "org.jruby.internal.runtime.GlobalVariable", "java.time.chrono.Era", "java.security.Key", "java.awt.PageAttributes", "org.springframework.web.servlet.view.AbstractUrlBasedView", "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap", "org.jruby.internal.runtime.ThreadService$Event$Type", "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator", "org.springframework.web.accept.AbstractMappingContentNegotiationStrategy", "java.util.Currency$CurrencyProperty", "java.time.temporal.TemporalUnit", "java.util.Spliterator$OfDouble", "org.springframework.beans.factory.config.Scope", "org.flywaydb.core.Flyway$Command", "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$PasswordCompareConfigurer", "org.jruby.ir.instructions.GetGlobalVariableInstr", "org.jruby.ast.AndNode", "sun.reflect.generics.repository.MethodRepository", "org.jruby.parser.ReOptions", "java.util.stream.Stream$Builder", "javax.swing.TransferHandler", "java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory", "java.awt.LayoutManager", "org.jruby.ir.instructions.ClosureAcceptingInstr", "sun.reflect.generics.tree.ArrayTypeSignature", "javax.persistence.Id", "com.fasterxml.jackson.databind.ser.std.StdSerializer", "java.time.Period", "org.jruby.ast.RetryNode", "javax.servlet.ServletRequest", "java.lang.ref.Cleaner$Cleanable", "java.awt.event.FocusEvent$Cause", "jnr.ffi.Struct$Address", "com.thoughtworks.xstream.mapper.Mapper$ImplicitCollectionMapping", "sun.java2d.pipe.Region", "org.jruby.ir.dataflow.analyses.StoreLocalVarPlacementProblem", "org.springframework.http.ReactiveHttpInputMessage", "sun.reflect.generics.tree.ShortSignature", "org.jsoup.parser.Token$Comment", "java.awt.Taskbar$State", "java.lang.reflect.GenericArrayType", "io.jsonwebtoken.CompressionCodecResolver", "org.springframework.util.StringValueResolver", "java.lang.invoke.LambdaForm", "org.springframework.jdbc.core.JdbcOperations", "org.asciidoctor.Asciidoctor$Factory", "javax.lang.model.element.Modifier", "org.jruby.util.io.ModeFlags", "org.jruby.anno.JRubyClass", "org.springframework.jdbc.core.SqlParameter", "org.hsqldb.ColumnBase", "org.jruby.runtime.ObjectMarshal", "com.fasterxml.jackson.databind.ser.DefaultSerializerProvider", "org.jruby.util.FileResource", "java.awt.FileDialog", "org.springframework.security.web.header.HeaderWriter", "sun.reflect.generics.visitor.Visitor", "sun.security.util.ObjectIdentifier", "com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder", "java.time.chrono.ChronoLocalDateTime", "org.springframework.util.CollectionUtils", "org.jsoup.select.Elements", "org.springframework.beans.factory.config.NamedBeanHolder", "java.util.concurrent.CompletableFuture$BiCompletion", "sun.reflect.generics.repository.GenericDeclRepository", "com.fasterxml.jackson.databind.introspect.AnnotationMap", "java.awt.peer.ListPeer", "javax.swing.TransferHandler$DropLocation", "org.hsqldb.ParserBase", "com.fasterxml.jackson.databind.ser.Serializers", "org.jruby.ir.IRVisitor", "org.hsqldb.index.Index$IndexUse", "javax.xml.stream.util.XMLEventConsumer", "sun.reflect.generics.repository.FieldRepository", "org.springframework.core.env.ConfigurableEnvironment", "org.jruby.ast.OpAsgnNode", "java.awt.font.GlyphMetrics", "com.fasterxml.jackson.annotation.JsonProperty$Access", "java.awt.ActiveEvent", "com.fasterxml.jackson.annotation.JsonAutoDetect$Value", "java.awt.desktop.OpenFilesHandler", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor", "java.awt.image.TileObserver", "sun.reflect.generics.tree.CharSignature", "org.jruby.ir.instructions.AliasInstr", "com.fasterxml.jackson.databind.introspect.Annotated", "org.jruby.runtime.EventHook", "org.jruby.org.objectweb.asm.Item", "org.jruby.ir.instructions.ReceiveOptArgInstr", "org.springframework.jdbc.support.KeyHolder", "org.springframework.beans.factory.support.BeanDefinitionRegistry", "org.springframework.beans.factory.config.ConfigurableListableBeanFactory", "org.jruby.ext.fiber.ThreadFiber$FiberData", "javax.xml.stream.events.XMLEvent", "org.jruby.javasupport.JavaSupport$ProxyClassKey", "javax.tools.DiagnosticCollector", "org.springframework.http.server.reactive.ServerHttpRequest", "sun.reflect.annotation.AnnotationType", "java.awt.Font", "org.jruby.runtime.marshal.MarshalStream", "org.joda.time.base.BaseSingleFieldPeriod", "org.springframework.data.domain.Example", "sun.security.util.BitArray", "java.util.AbstractSequentialList", "java.security.MessageDigestSpi", "java.awt.JobAttributes$DefaultSelectionType", "javax.annotation.PostConstruct", "org.jruby.ir.instructions.ReceivePostReqdArgInstr", "java.util.concurrent.CompletableFuture$AltResult", "org.jruby.ir.instructions.RaiseArgumentErrorInstr", "org.jruby.RubyThread$BlockingTask", "org.springframework.web.util.DefaultUriBuilderFactory$EncodingMode", "com.fasterxml.jackson.annotation.JsonTypeInfo$As", "javax.servlet.ServletInputStream", "java.text.ParsePosition", "org.jruby.ir.dataflow.DataFlowProblem", "java.util.Deque", "org.springframework.web.servlet.support.BindStatus", "java.awt.AWTEvent", "com.fasterxml.jackson.core.JsonParser$Feature", "java.text.spi.DateFormatProvider", "jnr.posix.BaseNativePOSIX", "com.fasterxml.jackson.annotation.PropertyAccessor", "org.jruby.util.MRIRecursionGuard$ExecRecursiveParams", "org.jruby.parser.Parser", "org.hsqldb.SchemaObject", "org.springframework.security.provisioning.UserDetailsManager", "javax.swing.JPopupMenu", "org.jruby.ast.DXStrNode", "org.joni.constants.AnchorType", "java.text.spi.NumberFormatProvider", "java.text.DateFormatSymbols", "org.thymeleaf.context.IEngineContextFactory", "java.util.logging.Logger$LoggerBundle", "org.jsoup.nodes.Document$QuirksMode", "java.lang.IndexOutOfBoundsException", "java.security.interfaces.RSAKey", "java.time.ZonedDateTime", "org.springframework.web.WebApplicationInitializer", "org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource", "org.jruby.ir.instructions.DefineClassInstr", "org.hsqldb.persist.DataFileDefrag", "com.fasterxml.jackson.core.json.JsonReadFeature", "org.jruby.ast.BlockPassNode", "org.asciidoctor.extension.ExtensionGroup", "com.fasterxml.jackson.databind.deser.impl.ObjectIdReader", "java.io.ObjectStreamField", "com.thoughtworks.xstream.converters.Converter", "java.awt.Frame", "org.springframework.data.repository.PagingAndSortingRepository", "java.math.MathContext", "org.springframework.web.servlet.mvc.AbstractController", "com.fasterxml.jackson.core.format.InputAccessor$Std", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer$AuthorizationCodeGrantConfigurer", "com.thoughtworks.xstream.converters.reflection.ReflectionProvider$Visitor", "jdk.internal.vm.annotation.DontInline", "java.time.ZoneId", "org.jruby.ir.instructions.RuntimeHelperCall$Methods", "jnr.ffi.Struct$Enum16", "org.jruby.runtime.ThreadContext", "java.security.Permission", "org.springframework.data.domain.ExampleMatcher$StringMatcher", "java.lang.StringBuilder", "javax.servlet.annotation.MultipartConfig", "jdk.internal.org.objectweb.asm.MethodWriter", "org.hsqldb.types.TimestampData", "org.jruby.ir.operands.Operand", "com.thoughtworks.xstream.converters.ConversionException", "org.joda.time.Interval", "java.lang.ProcessHandle", "java.awt.image.Raster", "java.lang.ref.SoftReference", "javax.tools.DocumentationTool$DocumentationTask", "org.springframework.http.HttpMethod", "org.jruby.runtime.backtrace.BacktraceElement", "org.springframework.security.web.access.AccessDeniedHandler", "javax.accessibility.AccessibleTable", "java.awt.ComponentOrientation", "org.springframework.context.ApplicationEvent", "org.hsqldb.navigator.RowSetNavigatorClient", "com.fasterxml.jackson.databind.ser.PropertyWriter", "org.hsqldb.StatementQuery", "org.hsqldb.QueryExpression", "jnr.ffi.StructLayout$Offset", "org.springframework.security.web.header.HeaderWriterFilter", "org.springframework.data.util.MethodInvocationRecorder$InvocationInformation", "com.fasterxml.jackson.databind.deser.impl.PropertyValueBuffer", "com.fasterxml.jackson.databind.Module", "org.jruby.ir.instructions.RaiseRequiredKeywordArgumentError", "org.jruby.runtime.encoding.MarshalEncoding", "java.net.SocketOption", "org.jruby.runtime.Block$Type", "org.jruby.ir.operands.IRException", "javax.xml.stream.XMLStreamReader", "com.fasterxml.jackson.databind.node.BaseJsonNode", "org.jruby.ir.instructions.boxing.UnboxInstr", "org.springframework.web.context.request.RequestAttributes", "org.jruby.runtime.backtrace.BacktraceData", "java.lang.ThreadLocal", "java.awt.Image", "java.security.DomainCombiner", "java.awt.dnd.DragSource", "org.springframework.http.MediaType", "org.hsqldb.SetFunction", "io.jsonwebtoken.ClaimJwtException", "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter", "java.time.Instant", "org.jruby.runtime.Arity", "org.jruby.ir.passes.CompilerPassListener", "jnr.ffi.StructLayout$Field", "org.springframework.data.domain.Sort$NullHandling", "org.springframework.core.convert.Property", "org.jruby.ir.persistence.IRWriterEncoder", "com.fasterxml.jackson.databind.node.ArrayNode", "com.fasterxml.jackson.annotation.JsonTypeInfo$Id", "java.nio.channels.SeekableByteChannel", "org.hsqldb.persist.PersistentStore", "org.springframework.data.domain.ExampleMatcher$MatcherConfigurer", "org.springframework.core.AttributeAccessorSupport", "org.jruby.util.MRIRecursionGuard", "org.joda.time.Minutes", "java.util.jar.JarEntry", "java.net.Proxy$Type", "javax.xml.stream.events.Attribute", "org.jruby.RubyString$EmptyByteListHolder", "org.hsqldb.lib.FileAccess$FileSync", "java.awt.event.HierarchyEvent", "org.thymeleaf.engine.AttributeDefinitions", "org.springframework.context.ApplicationEventPublisherAware", "java.util.concurrent.RunnableFuture", "java.lang.invoke.WrongMethodTypeException", "org.joda.time.ReadableDuration", "org.w3c.dom.NodeList", "com.fasterxml.jackson.databind.introspect.VisibilityChecker", "org.jruby.management.Runtime", "java.lang.module.ModuleDescriptor$Provides", "org.jruby.java.proxies.JavaProxy", "java.lang.Appendable", "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer", "sun.util.locale.provider.LocaleResources", "org.asciidoctor.extension.DocinfoProcessor", "org.springframework.boot.SpringApplicationRunListener", "org.jruby.ir.dataflow.FlowGraphNode", "org.jruby.runtime.PositionAware", "com.fasterxml.jackson.core.JsonStreamContext", "org.springframework.security.web.authentication.rememberme.PersistentTokenRepository", "com.fasterxml.jackson.core.format.MatchStrength", "org.springframework.security.config.annotation.web.WebSecurityConfigurer", "org.jruby.util.ClassProvider", "javax.servlet.http.MappingMatch", "org.aopalliance.intercept.MethodInterceptor", "java.lang.Object", "com.fasterxml.jackson.databind.cfg.MutableConfigOverride", "org.thymeleaf.model.IOpenElementTag", "org.jruby.ir.operands.DynamicSymbol", "java.awt.CompositeContext", "java.util.function.DoublePredicate", "org.springframework.jdbc.core.CallableStatementCallback", "org.jruby.RubyFloat", "java.awt.ImageCapabilities", "javax.accessibility.AccessibleSelection", "org.springframework.core.task.AsyncTaskExecutor", "org.jruby.ext.ffi.Pointer", "java.awt.geom.Rectangle2D", "java.net.URLClassLoader", "org.jruby.ir.instructions.Instr", "org.springframework.web.accept.MediaTypeFileExtensionResolver", "javax.activation.DataContentHandler", "org.jruby.ir.instructions.PrepareNoBlockArgsInstr", "javax.persistence.CascadeType", "org.jruby.ir.instructions.ProcessModuleBodyInstr", "org.joda.time.ReadableInterval", "org.jruby.ast.BreakNode", "org.springframework.security.authentication.AuthenticationTrustResolver", "javax.persistence.GeneratedValue", "javax.servlet.GenericServlet", "org.jsoup.Connection$KeyVal", "org.jruby.ast.executable.Script", "org.thymeleaf.engine.AttributeName", "java.time.format.ResolverStyle", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$HstsConfig", "org.jruby.runtime.ExecutionContext", "org.jruby.ast.Colon3Node", "org.slf4j.helpers.SubstituteLogger", "org.hsqldb.SessionInterface", "javax.xml.transform.Source", "java.util.function.ObjIntConsumer", "org.jruby.runtime.backtrace.TraceType", "javax.swing.plaf.ButtonUI", "org.springframework.web.server.ServerWebExchange", "org.springframework.beans.factory.annotation.Value", "org.springframework.security.config.annotation.AbstractConfiguredSecurityBuilder", "java.lang.VirtualMachineError", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$FeaturePolicyConfig", "org.hsqldb.rights.Right", "org.jruby.IncludedModule", "org.thymeleaf.templateresolver.AbstractTemplateResolver", "sun.reflect.generics.tree.VoidDescriptor", "org.jruby.ir.instructions.ToAryInstr", "org.jruby.internal.runtime.methods.DynamicMethod", "sun.font.Font2D", "jdk.internal.org.objectweb.asm.ModuleVisitor", "java.awt.dnd.DragSourceContext", "java.awt.peer.FileDialogPeer", "org.springframework.security.web.authentication.AuthenticationFailureHandler", "org.jruby.ir.instructions.PrepareFixedBlockArgsInstr", "org.springframework.data.domain.ExampleMatcher$NullHandler", "org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer", "org.jruby.ir.instructions.OneOperandInstr", "java.awt.desktop.PreferencesEvent", "jnr.posix.LibCProvider", "java.net.URL", "java.io.ObjectOutput", "org.slf4j.LoggerFactory", "java.util.regex.MatchResult", "jnr.ffi.Struct$Enum64", "org.jruby.ir.instructions.PushBlockFrameInstr", "org.aopalliance.intercept.MethodInvocation", "java.lang.Enum", "com.fasterxml.jackson.annotation.JsonValue", "java.awt.event.WindowListener", "com.thoughtworks.xstream.converters.DataHolder", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$AuthorizationEndpointConfig", "java.nio.file.PathMatcher", "jnr.posix.POSIX", "java.net.URI", "javax.swing.JMenu", "java.util.NavigableSet", "org.springframework.security.config.annotation.SecurityConfigurerAdapter", "sun.reflect.generics.tree.FieldTypeSignature", "org.hsqldb.persist.DataFileCache", "org.springframework.data.domain.Slice", "org.hsqldb.HsqlNameManager$SimpleName", "javax.swing.event.MenuListener", "java.net.URLStreamHandler", "java.lang.invoke.LambdaFormBuffer", "java.awt.event.HierarchyListener", "org.jruby.ir.operands.Symbol", "jnr.ffi.Struct$NumberField", "java.util.Optional", "java.nio.channels.NetworkChannel", "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToMapConverter", "org.jruby.runtime.profile.builtin.ProfiledMethods", "org.hsqldb.persist.HsqlDatabaseProperties", "org.jruby.ir.operands.OperandType", "com.fasterxml.jackson.databind.deser.AbstractDeserializer", "java.awt.font.TransformAttribute", "org.jruby.ast.EncodingNode", "java.net.ContentHandlerFactory", "org.hsqldb.map.BaseHashMap", "sun.reflect.generics.repository.ConstructorRepository", "java.lang.invoke.Invokers", "jdk.internal.HotSpotIntrinsicCandidate", "javax.swing.TransferHandler$HasGetTransferHandler", "com.fasterxml.jackson.core.JsonToken", "java.util.Hashtable", "org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer", "java.beans.PropertyEditor", "org.jruby.ir.operands.TemporaryLocalVariable", "com.fasterxml.jackson.databind.introspect.AnnotatedField$Serialization", "sun.awt.PeerEvent", "com.fasterxml.jackson.core.JsonGenerator$Feature", "javax.servlet.http.HttpServletResponse", "com.fasterxml.jackson.core.exc.StreamReadException", "jnr.ffi.Struct$Enum32", "org.springframework.context.ApplicationContext", "org.asciidoctor.extension.Processor", "javax.tools.JavaCompiler$CompilationTask", "jdk.internal.org.objectweb.asm.Label", "org.thymeleaf.TemplateEngine", "org.jruby.org.objectweb.asm.Context", "org.joda.time.format.InternalParser", "org.hsqldb.Session", "org.jruby.anno.TypePopulator", "javax.servlet.DispatcherType", "com.fasterxml.jackson.core.json.JsonWriteFeature", "org.springframework.util.StringUtils", "java.awt.Color", "org.jruby.ir.operands.UnexecutableNil", "org.jruby.ast.BackRefNode", "org.jruby.ir.instructions.GetClassVariableInstr", "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator", "org.w3c.dom.Document", "org.joda.time.field.AbstractPartialFieldProperty", "org.jruby.ast.ArgumentNode", "java.sql.SQLType", "java.nio.file.Path", "org.springframework.core.io.Resource", "org.springframework.security.web.access.expression.AbstractVariableEvaluationContextPostProcessor", "org.springframework.web.client.RestClientException", "java.awt.peer.ContainerPeer", "org.springframework.context.support.AbstractResourceBasedMessageSource", "org.jruby.util.ByteListHolder", "java.time.temporal.TemporalField", "java.util.concurrent.BlockingQueue", "org.springframework.http.ResponseCookie$ResponseCookieBuilder", "org.hsqldb.rights.User", "org.springframework.web.bind.annotation.RestControllerAdvice", "org.jruby.ir.operands.WrappedIRClosure", "org.springframework.web.context.annotation.SessionScope", "org.hsqldb.lib.IntKeyHashMap", "java.lang.invoke.MemberName", "java.util.function.ToDoubleFunction", "java.io.ObjectInputStream$GetField", "org.springframework.http.client.support.InterceptingHttpAccessor", "java.security.SecureRandomSpi", "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl", "org.jruby.runtime.IAccessor", "org.hsqldb.lib.Collection", "java.io.ByteArrayOutputStream", "org.springframework.security.web.authentication.RememberMeServices", "jdk.internal.org.objectweb.asm.Context", "org.springframework.context.annotation.Scope", "org.jruby.ir.dataflow.analyses.LiveVariablesProblem", "org.jruby.ir.representations.CFG", "org.jruby.ast.AttrAssignNode", "org.springframework.web.bind.annotation.RequestBody", "io.jsonwebtoken.CompressionCodec", "org.jruby.RubyHash$Found", "java.util.Calendar", "java.text.AttributedCharacterIterator$Attribute", "org.jruby.runtime.RubyEvent", "org.springframework.security.web.authentication.logout.LogoutFilter", "java.awt.Container", "org.springframework.core.convert.ConversionService", "jnr.ffi.ObjectReferenceManager", "org.jruby.ir.instructions.TwoOperandBranchInstr", "com.fasterxml.jackson.databind.type.CollectionLikeType", "org.jruby.util.KCode", "org.hsqldb.navigator.RowSetNavigatorData", "sun.util.logging.PlatformLogger", "java.time.format.TextStyle", "com.fasterxml.jackson.databind.deser.ValueInstantiator", "jnr.ffi.Address", "org.hsqldb.jdbc.JDBCConnection", "org.jruby.RubyFileStat", "java.lang.invoke.LambdaForm$NamedFunction", "io.jsonwebtoken.JwtException", "org.springframework.security.web.authentication.rememberme.AbstractRememberMeServices", "javax.servlet.FilterRegistration$Dynamic", "org.jsoup.parser.Token$1", "java.awt.desktop.PrintFilesEvent", "java.security.cert.X509Certificate", "org.jruby.RubyHash$RubyHashEntry", "org.jruby.ast.RedoNode", "javax.xml.transform.Result", "org.jruby.RubyInstanceConfig", "org.hsqldb.lib.Iterator", "org.springframework.boot.SpringApplication", "sun.awt.AppContext", "org.jruby.ir.instructions.boxing.BoxInstr", "com.fasterxml.jackson.databind.introspect.AnnotatedMember", "org.springframework.web.servlet.view.UrlBasedViewResolver", "jnr.ffi.Type", "java.util.function.LongToDoubleFunction", "javax.servlet.ServletRegistration$Dynamic", "java.awt.JobAttributes$DialogType", "java.awt.peer.DesktopPeer", "org.springframework.boot.ApplicationRunner", "com.fasterxml.jackson.databind.ser.AnyGetterWriter", "jnr.ffi.Struct$UnsignedLong", "sun.nio.ch.Interruptible", "org.springframework.web.util.UriComponents$UriTemplateVariables", "org.jruby.javasupport.proxy.JavaProxyClassFactory$MethodData", "org.jruby.ir.instructions.ReceiveExceptionBase", "java.nio.charset.CharsetEncoder", "org.springframework.security.web.authentication.logout.LogoutHandler", "org.springframework.core.env.MutablePropertySources", "java.io.DataInputStream", "jdk.internal.loader.Resource", "org.asciidoctor.extension.Treeprocessor", "org.springframework.beans.PropertyAccessor", "org.thymeleaf.engine.ThrottledTemplateProcessor", "java.lang.FunctionalInterface", "org.flywaydb.core.api.configuration.Configuration", "com.fasterxml.jackson.databind.MapperFeature", "java.nio.channels.spi.AbstractSelector", "org.springframework.web.bind.annotation.ResponseStatus", "java.util.Locale$Category", "sun.awt.ComponentFactory", "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder", "org.springframework.core.convert.converter.Converter", "java.lang.Package", "java.lang.ref.Cleaner", "java.util.function.Consumer", "java.lang.invoke.LambdaForm$Name", "org.jruby.ir.instructions.LoadFrameClosureInstr", "org.jruby.ir.operands.Fixnum", "jdk.internal.org.objectweb.asm.MethodVisitor", "java.time.format.DateTimeFormatter", "java.util.concurrent.ConcurrentHashMap$CollectionView", "com.fasterxml.jackson.core.io.IOContext", "org.jruby.ast.ConstNode", "org.jruby.runtime.ivars.MethodData", "org.jruby.runtime.load.LoadService", "java.awt.dnd.DropTarget", "java.security.KeyPair", "java.awt.Choice", "com.thoughtworks.xstream.core.DefaultConverterLookup", "org.jruby.ast.XStrNode", "jnr.ffi.types.size_t", "javax.validation.Valid", "java.security.spec.KeySpec", "org.hsqldb.types.BinaryData", "java.sql.ResultSet", "java.nio.file.Watchable", "com.fasterxml.jackson.databind.ser.BeanSerializerModifier", "io.jsonwebtoken.SignatureAlgorithm", "org.springframework.security.web.session.SessionInformationExpiredStrategy", "javax.swing.ButtonModel", "org.w3c.dom.DOMImplementation", "org.jruby.util.io.IOEncodable", "java.lang.Runtime", "java.lang.reflect.AnnotatedType", "java.awt.PageAttributes$OriginType", "org.springframework.boot.SpringBootExceptionHandler", "java.time.chrono.Chronology", "java.awt.geom.RectangularShape", "com.fasterxml.jackson.databind.introspect.TypeResolutionContext", "org.thymeleaf.engine.TemplateManager", "com.fasterxml.jackson.databind.node.BinaryNode", "java.text.spi.DecimalFormatSymbolsProvider", "org.thymeleaf.model.IElementTag", "java.lang.invoke.VarHandle$TypesAndInvokers", "org.springframework.jdbc.datasource.init.DatabasePopulator", "jnr.constants.platform.Fcntl", "org.jruby.ir.operands.Variable", "java.util.function.ToIntBiFunction", "java.lang.reflect.Parameter", "org.jsoup.Connection$Base", "java.util.LinkedHashSet", "org.jruby.ir.instructions.BuildLambdaInstr", "javax.xml.stream.StreamFilter", "java.awt.peer.DialogPeer", "org.springframework.security.access.SecurityMetadataSource", "org.hsqldb.lib.DoubleIntIndex", "jnr.ffi.annotations.In", "org.jruby.util.RubyDateFormatter$Token", "javax.servlet.http.HttpServletMapping", "org.slf4j.Marker", "java.util.concurrent.ForkJoinPool", "org.joda.time.format.PeriodParser", "org.jruby.ir.operands.SValue", "java.lang.ClassNotFoundException", "org.jruby.ir.instructions.ReceiveRubyExceptionInstr", "java.awt.im.InputMethodHighlight", "java.awt.event.ContainerEvent", "com.fasterxml.jackson.databind.JsonMappingException$Reference", "org.jruby.ir.instructions.ConstMissingInstr", "java.lang.PublicMethods$MethodList", "org.springframework.boot.Banner$Mode", "org.jruby.RubyHash", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer", "jnr.posix.util.ProcessMaker$Redirect$Type", "org.springframework.core.env.Profiles", "org.jruby.runtime.load.LoadServiceResource", "jnr.ffi.TypeAlias", "org.jruby.RubyBoolean", "org.flywaydb.core.api.MigrationInfoService", "java.lang.Class$AnnotationData", "org.joda.time.format.DateTimeFormat", "java.time.OffsetTime", "javax.xml.bind.Unmarshaller$Listener", "java.nio.CharBuffer", "javax.accessibility.AccessibleState", "org.springframework.security.core.userdetails.User$UserBuilder", "org.jruby.runtime.JavaSites$FloatSites", "org.jsoup.parser.ParseSettings", "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder", "java.awt.event.ComponentEvent", "org.jruby.RubyThread$Unblocker", "org.flywaydb.core.api.resolver.ResolvedMigration", "org.springframework.core.SerializableTypeWrapper$TypeProvider", "org.jruby.ir.operands.TemporaryBooleanVariable", "org.joda.time.ReadWritableInstant", "jnr.ffi.Struct$Pointer", "com.fasterxml.jackson.core.io.OutputDecorator", "org.jruby.internal.runtime.ThreadService", "org.hsqldb.lib.BaseList", "java.util.AbstractSet", "java.lang.Character$Subset", "org.jruby.ir.instructions.InheritanceSearchConstInstr", "com.fasterxml.jackson.core.io.SerializedString", "com.fasterxml.jackson.databind.deser.DeserializationProblemHandler", "org.springframework.core.convert.TypeDescriptor", "org.springframework.security.core.userdetails.UserDetails", "javax.servlet.http.Cookie", "java.beans.PropertyChangeEvent", "org.springframework.beans.BeanMetadataElement", "java.awt.Container$EventTargetFilter", "org.springframework.beans.factory.NamedBean", "java.awt.Taskbar$Feature", "sun.reflect.generics.tree.TypeTree", "sun.util.locale.BaseLocale", "java.nio.file.WatchService", "org.hsqldb.index.Index", "org.jruby.RubyIO$POpenTuple", "org.jruby.javasupport.JavaAccessibleObject", "java.security.Timestamp", "java.nio.channels.GatheringByteChannel", "org.springframework.security.config.annotation.web.configurers.HttpBasicConfigurer", "java.util.jar.Manifest", "javax.servlet.http.PushBuilder", "org.w3c.dom.Text", "org.jruby.ir.instructions.AttrAssignInstr", "org.thymeleaf.engine.IEngineTemplateEvent", "java.lang.annotation.Inherited", "org.thymeleaf.engine.HTMLElementDefinition", "java.net.ServerSocket", "org.springframework.security.config.annotation.web.configurers.JeeConfigurer", "com.fasterxml.jackson.databind.type.TypeFactory", "java.time.Duration", "java.awt.desktop.AboutEvent", "java.time.ZoneOffset", "org.jruby.org.objectweb.asm.ByteVector", "com.thoughtworks.xstream.converters.ErrorReporter", "java.awt.dnd.DropTargetContext", "javax.tools.SimpleJavaFileObject", "java.awt.font.GlyphJustificationInfo", "java.awt.peer.ComponentPeer", "java.util.GregorianCalendar", "org.jruby.RubyRegexp", "java.lang.module.ModuleDescriptor$Version", "org.jruby.NativeException", "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer$OpaqueTokenConfigurer", "org.flywaydb.core.internal.database.base.Connection", "org.jruby.runtime.profile.builtin.Invocation", "javax.sql.CommonDataSource", "java.awt.Adjustable", "java.nio.channels.Pipe$SourceChannel", "org.springframework.boot.ExitCodeGenerator", "org.springframework.context.ApplicationContextAware", "org.jruby.runtime.BlockBody", "org.jruby.ir.operands.NullBlock", "org.jruby.ir.instructions.ThrowExceptionInstr", "java.nio.channels.Selector", "com.fasterxml.jackson.databind.jsontype.SubtypeResolver", "java.util.function.DoubleFunction", "org.jruby.ir.instructions.ReifyClosureInstr", "java.util.Locale$IsoCountryCode", "org.xml.sax.Locator", "org.springframework.data.repository.NoRepositoryBean", "org.jruby.ir.IRClassBody", "org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer", "java.util.StringTokenizer", "org.jruby.ir.operands.UndefinedValue", "org.aopalliance.aop.Advice", "org.springframework.web.servlet.resource.ResourceResolverChain", "com.fasterxml.jackson.databind.util.ArrayBuilders$FloatBuilder", "org.jruby.runtime.ivars.VariableTableManager", "com.fasterxml.jackson.annotation.ObjectIdResolver", "org.thymeleaf.dialect.IDialect", "javax.xml.bind.ValidationEventLocator", "java.awt.desktop.QuitEvent", "org.aopalliance.intercept.Invocation", "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$MvcMatchersRequiresChannelUrl", "org.jruby.runtime.load.LoadService$SearchState", "java.io.InputStreamReader", "org.joda.time.format.PeriodPrinter", "org.springframework.context.Lifecycle", "java.util.concurrent.atomic.AtomicLong", "org.springframework.web.servlet.View", "javax.servlet.annotation.HttpConstraint", "java.util.function.LongUnaryOperator", "com.fasterxml.jackson.core.util.ByteArrayBuilder", "org.jruby.ir.instructions.LoadImplicitClosureInstr", "java.time.DayOfWeek", "org.springframework.boot.WebApplicationType", "sun.util.resources.TimeZoneNamesBundle", "org.springframework.security.config.annotation.web.configurers.X509Configurer", "org.jruby.runtime.load.LoadService$SuffixType", "org.springframework.security.web.authentication.rememberme.PersistentRememberMeToken", "java.util.ListIterator", "java.util.spi.CalendarNameProvider", "org.springframework.security.core.userdetails.User", "sun.reflect.generics.tree.Signature", "org.jruby.ir.instructions.NonlocalReturnInstr", "org.springframework.security.web.session.SessionInformationExpiredEvent", "com.fasterxml.jackson.annotation.JacksonAnnotation", "javax.swing.ComponentInputMap", "com.fasterxml.jackson.databind.ObjectReader", "org.joda.time.LocalTime$Property", "org.springframework.core.MethodParameter", "java.sql.RowIdLifetime", "org.springframework.data.repository.Repository", "javax.accessibility.AccessibleRelation", "org.springframework.web.servlet.support.RequestContext", "org.jruby.ast.FalseNode", "org.jruby.ir.instructions.MultipleAsgnBase", "com.thoughtworks.xstream.core.BaseException", "org.jruby.common.IRubyWarnings$ID", "org.jruby.parser.StaticScopeFactory", "jdk.internal.org.objectweb.asm.Type", "java.nio.file.FileSystem", "org.flywaydb.core.internal.resource.ResourceProvider", "jdk.internal.module.ModuleTarget", "java.awt.event.WindowEvent", "java.awt.dnd.peer.DropTargetContextPeer", "org.jruby.ir.operands.Float", "jnr.posix.RLimit", "org.jruby.ir.representations.BasicBlock", "java.text.AttributedCharacterIterator", "javax.swing.event.PopupMenuEvent", "java.io.ObjectInput", "org.jruby.javasupport.util.ObjectProxyCache$Segment", "java.util.Spliterator", "org.jruby.runtime.opto.Invalidator", "org.jruby.RubyInstanceConfig$LoadServiceCreator", "java.awt.desktop.PreferencesHandler", "org.joda.time.base.BasePartial", "org.jruby.ir.operands.Stringable", "org.springframework.security.core.authority.SimpleGrantedAuthority", "org.hsqldb.types.TimeData", "java.util.function.DoubleUnaryOperator", "java.util.Stack", "java.util.concurrent.ConcurrentMap", "java.util.logging.Level", "org.flywaydb.core.api.configuration.FluentConfiguration", "java.lang.Thread$UncaughtExceptionHandler", "org.springframework.expression.TypeLocator", "org.jruby.ast.executable.ScriptAndCode", "org.springframework.beans.factory.BeanNameAware", "org.flywaydb.core.internal.resource.Resource", "org.jruby.util.CodeRangeable", "java.time.chrono.ChronoLocalDate", "java.security.spec.PKCS8EncodedKeySpec", "javax.accessibility.AccessibleStateSet", "sun.reflect.generics.tree.LongSignature", "com.fasterxml.jackson.core.JsonProcessingException", "org.jruby.runtime.builtin.InternalVariables", "org.springframework.core.io.buffer.DataBuffer", "org.springframework.web.client.RequestCallback", "java.util.concurrent.locks.Condition", "org.joda.time.Instant", "java.util.Comparator", "com.fasterxml.jackson.core.TokenStreamFactory", "org.jruby.javasupport.JavaArray", "java.awt.BufferCapabilities$FlipContents", "java.util.function.UnaryOperator", "java.util.DoubleSummaryStatistics", "jnr.posix.CmsgHdr", "org.hsqldb.lib.Set", "com.fasterxml.jackson.databind.JsonNode", "org.joni.Region", "java.awt.event.TextListener", "java.awt.Dialog", "org.flywaydb.core.api.MigrationInfo", "org.jruby.util.RubyDateFormat$FieldType", "java.text.CharacterIterator", "java.lang.AssertionStatusDirectives", "java.lang.invoke.LambdaForm$Hidden", "org.jruby.runtime.ivars.VariableAccessor", "java.net.Authenticator$RequestorType", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$FrameOptionsConfig", "java.security.PrivilegedExceptionAction", "org.jruby.ast.MatchNode", "javax.tools.JavaFileObject", "org.jruby.ast.visitor.NodeVisitor", "java.io.ObjectStreamClass$FieldReflector", "org.springframework.core.io.InputStreamSource", "java.awt.datatransfer.MimeType", "org.jruby.ir.instructions.BUndefInstr", "org.jruby.org.objectweb.asm.MethodVisitor", "javax.xml.bind.DatatypeConverterInterface", "com.fasterxml.jackson.databind.util.ObjectBuffer", "sun.security.util.DerEncoder", "org.jruby.runtime.JavaSites$IntegerSites", "org.joda.time.format.DateTimeFormatterBuilder", "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$RequiresChannelUrl", "org.jruby.ast.ArgsNode", "org.joda.time.PeriodType", "java.nio.file.attribute.GroupPrincipal", "org.springframework.security.config.annotation.authentication.configuration.EnableGlobalAuthentication", "java.util.RandomAccess", "org.jruby.ast.SymbolNode", "org.joni.Syntax", "org.jruby.ast.FixnumNode", "org.jruby.ast.RestArgNode", "org.jruby.ast.VCallNode", "org.springframework.jdbc.core.StatementCallback", "org.jruby.ast.RequiredKeywordArgumentValueNode", "org.jruby.util.io.OpenFile$Finalizer", "org.springframework.util.PathMatcher", "org.springframework.beans.factory.config.BeanFactoryPostProcessor", "java.awt.Window", "org.jruby.ir.instructions.DefineInstanceMethodInstr", "java.io.FileOutputStream", "org.jruby.RubyIO", "org.joda.time.MutablePeriod", "java.awt.desktop.AboutHandler", "java.awt.desktop.QuitHandler", "java.io.File", "org.jruby.ast.RationalNode", "com.fasterxml.jackson.core.JsonFactory", "org.jruby.NativeException$1", "java.time.format.DecimalStyle", "com.fasterxml.jackson.databind.deser.impl.BeanPropertyMap", "java.net.SocketImpl", "java.lang.IllegalStateException", "java.security.KeyPairGeneratorSpi", "org.springframework.security.web.authentication.session.SessionAuthenticationStrategy", "org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer", "org.jruby.ir.instructions.PopBlockFrameInstr", "java.lang.Byte", "org.jruby.RubyString", "org.jsoup.Connection$Method", "org.jruby.runtime.GlobalVariable", "org.hsqldb.rights.UserManager", "jdk.internal.org.objectweb.asm.Attribute", "org.springframework.context.ApplicationListener", "org.springframework.http.HttpEntity", "java.time.OffsetDateTime", "org.joda.time.MutableInterval", "org.hsqldb.HsqlException", "org.springframework.security.web.header.writers.frameoptions.AllowFromStrategy", "org.flywaydb.core.api.callback.Callback", "org.springframework.cache.Cache", "java.awt.datatransfer.Transferable", "java.util.HashMap", "java.net.BindException", "org.springframework.data.repository.CrudRepository", "com.fasterxml.jackson.core.JsonFactory$Feature", "org.springframework.security.web.PortMapper", "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty", "org.jruby.org.objectweb.asm.commons.GeneratorAdapter", "org.jruby.ast.DStrNode", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2ClientConfigurer$1", "com.fasterxml.jackson.databind.type.TypeBindings", "org.jruby.ir.instructions.PrepareSingleBlockArgInstr", "com.fasterxml.jackson.databind.SerializerProvider", "javax.xml.bind.JAXBContext", "javax.xml.bind.annotation.adapters.XmlAdapter", "java.security.cert.CertPath", "java.lang.IllegalArgumentException", "org.jruby.ext.ffi.TypeResolver", "java.nio.channels.ServerSocketChannel", "org.springframework.security.config.annotation.web.builders.HttpSecurity$MvcMatchersRequestMatcherConfigurer", "java.awt.image.ColorModel", "org.jruby.internal.runtime.methods.CallConfiguration$1", "java.awt.dnd.DragSourceDragEvent", "java.sql.ShardingKey", "com.fasterxml.jackson.databind.SerializationFeature", "org.jruby.ir.passes.CompilerPass", "java.util.Collections", "java.nio.MappedByteBuffer", "java.util.logging.LogManager$LoggerContext", "org.springframework.validation.Validator", "com.fasterxml.jackson.core.JsonFactoryBuilder", "java.util.concurrent.Future", "com.fasterxml.jackson.databind.introspect.AnnotatedConstructor", "sun.util.calendar.Era", "java.lang.Thread", "javax.lang.model.element.NestingKind", "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer$1", "org.asciidoctor.ast.StructuredDocument", "javax.xml.bind.UnmarshallerHandler", "org.springframework.security.provisioning.GroupManager", "org.jruby.util.TimeOutputFormatter", "javax.servlet.RequestDispatcher", "jnr.ffi.provider.MemoryManager", "java.nio.charset.CharsetDecoder", "java.awt.event.KeyEvent", "org.jruby.RubyModule$AutoloadMethod", "com.thoughtworks.xstream.io.HierarchicalStreamReader", "javax.crypto.SecretKey", "org.flywaydb.core.internal.database.base.Type", "java.awt.geom.GeneralPath", "org.joni.OptAnchorInfo", "org.springframework.web.server.ServerWebExchange$Builder", "jnr.ffi.annotations.Out", "org.springframework.core.Ordered", "java.lang.invoke.MethodHandle", "java.security.KeyFactorySpi", "org.asciidoctor.extension.Reader", "jdk.internal.module.ServicesCatalog$ServiceProvider", "org.jruby.RubyBinding", "com.fasterxml.jackson.annotation.JsonSetter$Value", "java.sql.DatabaseMetaData", "org.thymeleaf.model.IDocType", "java.awt.image.ImageConsumer", "java.time.zone.ZoneRules", "javax.xml.stream.XMLReporter", "org.jruby.runtime.ArgumentType", "java.text.Collator", "com.fasterxml.jackson.core.FormatFeature", "com.fasterxml.jackson.core.TreeNode", "org.hsqldb.types.Charset", "sun.util.calendar.Gregorian", "org.thymeleaf.engine.TemplateModel", "javax.servlet.annotation.WebServlet", "org.jruby.RubyProc", "org.springframework.data.domain.ExampleMatcher$PropertyValueTransformer", "org.jruby.runtime.Binding", "org.jruby.ir.instructions.defined.RestoreErrorInfoInstr", "org.jruby.RubyObject$Data", "jnr.ffi.types.ssize_t", "org.jruby.util.RegexpSupport$ErrorMode", "java.beans.BeanProperty", "com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition", "jdk.internal.reflect.FieldAccessor", "org.jruby.runtime.JavaSites$StringSites", "java.awt.event.ItemListener", "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter", "java.sql.Array", "org.springframework.http.HttpCookie", "com.nulabinc.zxcvbn.Pattern", "com.fasterxml.jackson.core.util.RequestPayload", "java.lang.reflect.Method", "org.jruby.anno.JRubyMethod", "java.lang.Process", "org.springframework.web.client.ResponseExtractor", "org.jruby.ir.operands.UnboxedFloat", "java.util.Locale$LanguageRange", "org.jruby.ir.instructions.BSwitchInstr", "java.util.NavigableMap", "org.jruby.ast.OpAsgnOrNode", "org.springframework.expression.EvaluationContext", "java.util.stream.Collectors$1OptionalBox", "java.awt.peer.MenuItemPeer", "org.jruby.ir.instructions.YieldInstr", "org.jruby.ast.WhileNode", "org.jsoup.nodes.Attributes", "org.jruby.ir.instructions.ReceiveSelfInstr", "org.joda.time.base.AbstractDuration", "org.springframework.beans.factory.config.AutowireCapableBeanFactory", "java.awt.image.BufferedImageOp", "org.apache.commons.lang3.ArrayUtils", "com.fasterxml.jackson.core.TSFBuilder", "org.springframework.security.web.access.intercept.FilterSecurityInterceptor", "java.awt.peer.ScrollPanePeer", "com.fasterxml.jackson.databind.Module$SetupContext", "java.nio.charset.CodingErrorAction", "org.joda.time.TimeOfDay", "org.jruby.ast.SideEffectFree", "org.springframework.http.converter.AbstractHttpMessageConverter", "com.fasterxml.jackson.databind.jsonschema.SchemaAware", "java.nio.DoubleBuffer", "org.joda.time.DateTime", "java.text.DecimalFormat", "java.awt.EventFilter$FilterAction", "org.thymeleaf.dialect.IExpressionObjectDialect", "io.jsonwebtoken.ClaimsMutator", "org.springframework.http.HttpInputMessage", "com.fasterxml.jackson.databind.util.ArrayBuilders", "com.fasterxml.jackson.databind.ser.VirtualBeanPropertyWriter", "org.jruby.org.objectweb.asm.FieldVisitor", "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer", "org.springframework.core.ParameterNameDiscoverer", "org.thymeleaf.context.IContext", "org.springframework.web.bind.annotation.RequestParam", "org.jruby.runtime.Signature$Rest", "sun.util.logging.PlatformLogger$Bridge", "java.nio.channels.FileChannel$MapMode", "org.hsqldb.RangeGroup", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$1", "org.jruby.ir.instructions.CheckArityInstr", "java.sql.ParameterMetaData", "java.awt.Event", "javax.xml.stream.XMLStreamWriter", "com.fasterxml.jackson.databind.introspect.ObjectIdInfo", "com.fasterxml.jackson.annotation.JacksonInject", "org.jruby.ir.transformations.inlining.SimpleCloneInfo", "com.thoughtworks.xstream.XStreamException", "jdk.internal.org.objectweb.asm.FieldVisitor", "java.awt.geom.Path2D$Float", "java.lang.Exception", "java.beans.PropertyChangeListener", "org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisProblem", "java.sql.RowId", "org.springframework.web.util.UriBuilderFactory", "org.jruby.ir.instructions.ReceiveKeywordRestArgInstr", "java.lang.reflect.AnnotatedElement", "java.awt.event.TextEvent", "org.springframework.boot.autoconfigure.AutoConfigurationPackage", "org.jsoup.nodes.TextNode", "java.util.concurrent.ForkJoinWorkerThread", "org.springframework.beans.BeanWrapper", "java.util.concurrent.Callable", "org.thymeleaf.templateresource.StringTemplateResource", "java.util.ArrayList", "org.jruby.ast.NodeType", "com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult", "io.jsonwebtoken.Jwt", "java.text.Format$FieldDelegate", "io.jsonwebtoken.Jws", "java.lang.module.ResolvedModule", "org.jruby.ir.instructions.StoreLocalVarInstr", "com.fasterxml.jackson.databind.ObjectWriter$Prefetch", "org.springframework.format.Formatter", "org.asciidoctor.Asciidoctor", "org.springframework.boot.autoconfigure.SpringBootApplication", "javax.swing.ButtonGroup", "java.awt.font.GlyphVector", "org.jruby.runtime.backtrace.TraceType$Gather", "org.springframework.web.servlet.support.WebContentGenerator", "org.jruby.ir.instructions.ReceiveJRubyExceptionInstr", "java.awt.peer.MenuPeer", "org.springframework.security.config.annotation.web.builders.HttpSecurity$RequestMatcherConfigurer", "org.jruby.RubyIO$ByteListCache", "org.jruby.ir.dataflow.DataFlowProblem$DF_Direction", "javax.activation.DataSource", "jnr.ffi.StructLayout", "javax.swing.JLayeredPane", "org.thymeleaf.engine.XMLElementDefinition", "org.springframework.jdbc.core.BatchPreparedStatementSetter", "org.jruby.org.objectweb.asm.commons.LocalVariablesSorter", "java.awt.image.ImageObserver", "javax.xml.stream.XMLStreamConstants", "jdk.internal.reflect.ConstructorAccessor", "java.lang.invoke.MethodHandleInfo", "com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase", "java.text.DateFormat", "java.time.DateTimeException", "java.lang.module.ModuleDescriptor$Opens", "org.thymeleaf.model.ITemplateEvent", "org.flywaydb.core.api.executor.Context", "org.flywaydb.core.internal.jdbc.JdbcConnectionFactory$ConnectionInitializer", "org.jruby.EvalType", "org.jruby.ir.instructions.PutConstInstr", "jdk.internal.org.objectweb.asm.Frame", "org.springframework.context.annotation.Configuration", "javax.net.SocketFactory", "org.jruby.runtime.backtrace.FrameType", "java.lang.Class$ReflectionData", "org.springframework.core.io.ProtocolResolver", "org.xml.sax.SAXException", "javax.validation.constraints.Pattern", "java.time.chrono.IsoEra", "org.springframework.jdbc.datasource.DriverManagerDataSource", "java.util.regex.Pattern", "sun.util.locale.LocaleExtensions", "org.jruby.ast.ClassVarNode", "org.jruby.javasupport.util.ObjectProxyCache", "javax.swing.TransferHandler$TransferSupport", "java.awt.Rectangle", "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$1", "com.thoughtworks.xstream.annotations.XStreamAlias", "org.jruby.ir.IRModuleBody", "org.jruby.ast.ForNode", "java.io.ObjectStreamClass", "java.awt.font.GraphicAttribute", "com.fasterxml.jackson.databind.cfg.ConfigOverride", "jnr.ffi.types.intptr_t", "org.jruby.runtime.ArgumentDescriptor", "org.asciidoctor.CompatMode", "org.hsqldb.types.IntervalType", "org.hsqldb.RoutineSchema", "org.jruby.runtime.DynamicScope", "org.jruby.ir.instructions.NopInstr", "org.jruby.ir.instructions.BuildDynRegExpInstr$RECache", "sun.reflect.generics.tree.SimpleClassTypeSignature", "java.util.LongSummaryStatistics", "org.springframework.core.annotation.Order", "java.awt.geom.Line2D", "org.thymeleaf.dialect.IProcessorDialect", "jnr.ffi.Struct$Float", "java.awt.Desktop$Action", "org.jruby.ast.OptArgNode", "org.springframework.security.provisioning.JdbcUserDetailsManager", "java.lang.SecurityManager", "org.jruby.ir.listeners.InstructionsListener", "java.awt.desktop.OpenURIHandler", "org.joda.time.LocalDate", "org.springframework.data.repository.query.QueryByExampleExecutor", "java.awt.event.InputMethodEvent", "javax.swing.ArrayTable", "org.springframework.context.support.MessageSourceAccessor", "java.util.logging.LoggingMXBean", "java.io.InputStream", "com.fasterxml.jackson.databind.introspect.ClassIntrospector", "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$1", "org.springframework.web.servlet.LocaleResolver", "com.fasterxml.jackson.databind.util.AccessPattern", "java.util.function.DoubleConsumer", "org.springframework.web.cors.CorsConfigurationSource", "org.springframework.security.core.userdetails.UserCache", "io.jsonwebtoken.JwsHeader", "java.util.concurrent.CountedCompleter", "org.jruby.util.collections.IntHashMap$Entry", "org.jcodings.util.Hash", "java.util.Map", "org.jruby.ext.fiber.ThreadFiber", "org.jruby.ir.operands.Filename", "org.springframework.core.task.TaskExecutor", "java.sql.NClob", "org.springframework.data.domain.ExampleMatcher$GenericPropertyMatcher", "sun.reflect.generics.tree.FormalTypeParameter", "org.jruby.ast.ModuleNode", "org.jruby.RubyHash$EntryMatchType", "com.fasterxml.jackson.databind.type.CollectionType", "org.springframework.data.domain.Page", "javax.xml.bind.Validator", "java.time.format.DateTimeParseException", "org.springframework.core.AttributeAccessor", "java.util.stream.Stream", "org.jruby.ir.IRMethod", "java.awt.MenuItem", "org.jruby.ir.instructions.PushMethodFrameInstr", "org.joda.time.format.DateTimePrinter", "java.lang.ClassLoader", "org.springframework.jdbc.core.ResultSetSupportingSqlParameter", "org.hsqldb.persist.EventLogInterface", "javax.tools.ToolProvider", "org.hsqldb.navigator.RowIterator", "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer", "org.jruby.ast.ConstDeclNode", "org.jruby.ir.operands.UnboxedFixnum", "org.joni.Matcher", "jnr.ffi.Struct$Signed64", "java.net.DatagramSocket", "org.w3c.dom.DOMConfiguration", "com.thoughtworks.xstream.mapper.MapperWrapper", "com.thoughtworks.xstream.mapper.Mapper", "java.lang.SafeVarargs", "org.jruby.anno.MethodDescriptor", "com.fasterxml.jackson.databind.DeserializationContext", "org.jruby.ext.ffi.AbstractInvoker", "org.springframework.security.access.intercept.InterceptorStatusToken", "org.thymeleaf.engine.IEngineProcessable", "org.thymeleaf.TemplateSpec", "org.springframework.http.HttpStatus", "java.security.ProtectionDomain", "java.nio.file.FileTreeWalker$EventType", "java.nio.channels.WritableByteChannel", "io.jsonwebtoken.Header", "java.nio.FloatBuffer", "java.util.logging.LogManager", "org.springframework.security.core.userdetails.UserDetailsChecker", "org.springframework.validation.ObjectError", "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsAwareConfigurer", "org.jruby.ir.instructions.GVarAliasInstr", "java.lang.ThreadLocal$ThreadLocalMap$Entry", "java.awt.image.WritableRenderedImage", "org.springframework.core.convert.converter.GenericConverter", "org.jruby.ast.Match2Node", "org.springframework.core.NestedRuntimeException", "org.jruby.org.objectweb.asm.Frame", "java.util.concurrent.ConcurrentHashMap", "org.jruby.anno.JavaMethodDescriptor", "org.jruby.ast.FloatNode", "org.jruby.dirgra.Vertex", "org.flywaydb.core.api.resolver.MigrationResolver", "org.springframework.web.servlet.ModelAndView", "org.jruby.ir.instructions.JumpTargetInstr", "jdk.internal.reflect.ConstantPool$Tag", "org.thymeleaf.templateparser.ITemplateParser", "org.hsqldb.rowio.RowInputInterface", "java.sql.ResultSetMetaData", "java.time.chrono.ChronoPeriod", "javax.servlet.ServletRegistration", "org.jruby.ir.instructions.DefineModuleInstr", "javax.xml.bind.Marshaller", "org.joda.time.LocalTime", "sun.security.jca.GetInstance$Instance", "java.util.concurrent.CompletableFuture", "org.thymeleaf.cache.ICacheManager", "org.joda.time.base.BasePeriod", "java.util.PrimitiveIterator$OfDouble", "com.fasterxml.jackson.databind.util.ArrayBuilders$IntBuilder", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$XXssConfig", "java.awt.event.HierarchyBoundsListener", "com.fasterxml.jackson.annotation.ObjectIdGenerator$IdKey", "java.util.function.IntSupplier", "org.jruby.lexer.yacc.ISourcePositionHolder", "org.springframework.security.core.context.SecurityContextHolderStrategy", "org.springframework.web.context.request.async.CallableProcessingInterceptor", "org.slf4j.Logger", "com.fasterxml.jackson.databind.introspect.AnnotatedParameter", "org.thymeleaf.engine.XMLAttributeDefinition", "org.jruby.javasupport.proxy.JavaProxyMethod", "org.springframework.http.server.ServerHttpRequest", "org.w3c.dom.Element", "org.thymeleaf.engine.HTMLAttributeDefinition", "org.springframework.context.annotation.Bean", "org.springframework.core.io.support.ResourcePatternResolver", "org.springframework.security.core.token.Sha512DigestUtils", "java.awt.desktop.QuitResponse", "org.jruby.ir.instructions.NoOperandResultBaseInstr", "java.lang.System", "java.awt.peer.MenuBarPeer", "org.springframework.web.context.request.RequestContextHolder", "org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter", "java.util.regex.Matcher", "java.text.FieldPosition", "java.awt.image.IndexColorModel", "sun.util.calendar.BaseCalendar$Date", "org.springframework.context.MessageSourceResolvable", "org.jruby.ast.DVarNode", "javax.xml.xpath.XPathFunctionResolver", "org.jruby.runtime.Frame", "org.springframework.jdbc.core.support.JdbcDaoSupport", "java.io.Reader", "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer$1", "org.jsoup.parser.Token$Character", "org.springframework.security.core.GrantedAuthority", "java.lang.reflect.InvocationTargetException", "org.springframework.web.servlet.resource.ResourceResolver", "org.jruby.ir.instructions.defined.GetErrorInfoInstr", "java.security.PrivateKey", "org.flywaydb.core.internal.database.base.Function", "org.thymeleaf.engine.HTMLElementType", "org.springframework.web.servlet.config.annotation.CorsRegistration", "org.springframework.beans.PropertyValues", "org.hsqldb.jdbc.JDBCConnectionEventListener", "org.springframework.core.ParameterizedTypeReference", "org.hsqldb.navigator.RowSetNavigator", "org.jruby.internal.runtime.methods.CallConfiguration", "org.springframework.web.servlet.mvc.Controller", "java.nio.file.spi.FileSystemProvider", "org.jruby.RubyIO$Sysopen", "org.springframework.security.config.annotation.web.configurers.CsrfConfigurer", "org.jruby.ast.UntilNode", "org.springframework.security.core.userdetails.User$1", "org.hsqldb.result.ResultMetaData", "javax.servlet.WriteListener", "org.jruby.RubyInstanceConfig$Verbosity", "org.joda.time.LocalDateTime$Property", "org.jruby.ast.KeywordRestArgNode", "com.fasterxml.jackson.databind.JavaType", "java.lang.Number", "org.jruby.RubyMatchData$Pair", "java.awt.peer.CanvasPeer", "java.util.zip.ZipConstants", "org.springframework.web.bind.annotation.ControllerAdvice", "javax.swing.JButton", "org.springframework.security.authentication.AuthenticationManager", "org.jruby.ir.instructions.GetFieldInstr", "org.jruby.RubyContinuation$Continuation", "org.springframework.web.client.RestOperations", "org.jruby.ext.fiber.FiberQueue", "java.time.chrono.ChronoZonedDateTime", "org.springframework.web.servlet.LocaleContextResolver", "javax.persistence.Transient", "com.fasterxml.jackson.databind.util.NameTransformer", "java.awt.event.MouseMotionListener", "jdk.internal.reflect.ReflectionFactory", "com.fasterxml.jackson.databind.ser.BeanSerializerBuilder", "java.util.HashMap$Node", "java.awt.im.InputContext", "org.hsqldb.types.ClobData", "javax.xml.stream.XMLInputFactory", "org.springframework.security.core.userdetails.UserDetailsService", "org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver", "java.time.format.DateTimeFormatterBuilder$CompositePrinterParser", "org.jruby.ir.instructions.DefineMetaClassInstr", "org.springframework.context.support.DefaultMessageSourceResolvable", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor", "java.math.RoundingMode", "java.awt.Shape", "javax.servlet.Registration", "java.lang.IllegalAccessException", "org.jruby.Finalizable", "sun.awt.geom.Crossings", "org.jruby.RubyObject", "org.jruby.ir.operands.Label", "com.fasterxml.jackson.databind.introspect.SimpleMixInResolver", "org.joda.time.ReadableInstant", "com.fasterxml.jackson.databind.deser.DeserializerFactory", "javax.servlet.ServletResponse", "org.joda.time.tz.NameProvider", "org.springframework.security.access.intercept.RunAsManager", "com.fasterxml.jackson.databind.util.ArrayBuilders$ShortBuilder", "org.flywaydb.core.internal.callback.CallbackExecutor", "org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry", "org.jruby.util.io.OpenFile", "org.jruby.RubyModule", "org.jruby.runtime.ObjectAllocator", "java.awt.peer.FramePeer", "org.springframework.beans.factory.ObjectProvider", "javax.sql.DataSource", "org.hsqldb.lib.HashMappedList", "sun.reflect.generics.tree.BottomSignature", "org.springframework.validation.MessageCodesResolver", "org.jruby.ir.instructions.ResultInstr", "java.util.regex.Pattern$BmpCharPredicate", "org.thymeleaf.engine.TextElementDefinition", "org.hsqldb.RowAction", "javax.swing.JComponent", "java.security.AlgorithmParametersSpi", "java.util.concurrent.ForkJoinTask", "java.lang.Class$EnclosingMethodInfo", "java.util.Iterator", "org.springframework.context.MessageSourceAware", "org.springframework.beans.PropertyValue", "org.thymeleaf.util.PatternSpec", "org.jruby.javasupport.JavaMethod", "org.jruby.RubyInstanceConfig$ProfilingMode", "jdk.internal.org.objectweb.asm.AnnotationVisitor", "java.util.jar.Manifest$FastInputStream", "java.util.LinkedHashMap$Entry", "javax.xml.stream.events.Characters", "org.jruby.RubyBinding$1", "org.springframework.security.config.annotation.web.configurers.AbstractInterceptUrlConfigurer$AbstractInterceptUrlRegistry", "org.joda.time.ReadablePartial", "java.lang.invoke.LambdaForm$Kind", "org.jruby.dirgra.ExplicitVertexID", "org.springframework.beans.factory.config.BeanExpressionResolver", "org.thymeleaf.engine.IThrottledTemplateWriterControl", "java.awt.peer.WindowPeer", "org.springframework.security.core.userdetails.UsernameNotFoundException", "org.jruby.ir.persistence.IRReaderDecoder", "java.util.function.IntUnaryOperator", "org.jruby.internal.runtime.GlobalVariables", "org.jruby.Profile", "javax.crypto.spec.SecretKeySpec", "java.awt.JobAttributes$MultipleDocumentHandlingType", "java.lang.Integer", "org.springframework.http.converter.ResourceHttpMessageConverter", "java.util.Vector", "org.springframework.core.ParameterizedTypeReference$1", "com.fasterxml.jackson.databind.type.MapLikeType", "com.fasterxml.jackson.databind.type.MapType", "javax.swing.KeyStroke", "com.thoughtworks.xstream.converters.SingleValueConverter", "org.springframework.beans.factory.InjectionPoint", "org.jruby.ir.instructions.PopMethodFrameInstr", "org.jruby.util.MRIRecursionGuard$RecursiveFunction", "org.jruby.org.objectweb.asm.TypePath", "org.jruby.RubyBasicObject", "java.io.Serializable", "javax.tools.Diagnostic$Kind", "java.nio.file.FileVisitResult", "org.joda.time.ReadWritableInterval", "org.jsoup.parser.Token$EndTag", "java.lang.invoke.BoundMethodHandle$Specializer$Factory", "java.lang.invoke.StringConcatFactory$Recipe", "com.fasterxml.jackson.databind.deser.BeanDeserializerBuilder", "java.sql.ConnectionBuilder", "org.asciidoctor.ast.AbstractBlockImpl", "java.awt.dnd.DropTargetListener", "org.jruby.ast.DefNode", "org.jruby.ast.TrueNode", "com.fasterxml.jackson.annotation.JsonIgnoreProperties", "java.time.format.Parsed", "org.jruby.ir.instructions.MultiBranchInstr", "org.joda.time.base.BaseInterval", "org.jcodings.IntHolder", "org.jruby.ast.NonLocalControlFlowNode", "java.time.LocalDateTime", "java.util.function.Supplier", "java.lang.ClassCastException", "javax.servlet.annotation.ServletSecurity$TransportGuarantee", "java.lang.StringBuffer", "org.jruby.ir.instructions.ClassSuperInstr", "java.net.InetAddress$NameService", "org.springframework.security.web.header.writers.CacheControlHeadersWriter", "jnr.ffi.annotations.Direct", "org.springframework.security.authentication.AuthenticationManagerResolver", "javax.accessibility.AccessibleIcon", "io.jsonwebtoken.Clock", "com.thoughtworks.xstream.converters.UnmarshallingContext", "javax.swing.JRootPane", "org.jruby.org.objectweb.asm.Type", "org.apache.commons.lang.exception.ExceptionUtils", "javax.swing.event.PopupMenuListener", "java.sql.Savepoint", "com.fasterxml.jackson.databind.type.ResolvedRecursiveType", "org.asciidoctor.AttributesBuilder", "org.springframework.core.ResolvableType$1", "com.nulabinc.zxcvbn.matchers.Match$Builder", "org.jruby.ast.InvisibleNode", "java.nio.file.attribute.UserPrincipalLookupService", "javax.servlet.ServletContext", "org.jsoup.nodes.Document$OutputSettings$Syntax", "com.fasterxml.jackson.annotation.JsonSetter", "org.thymeleaf.IEngineConfiguration", "org.hsqldb.TriggerDef$TriggerData", "sun.java2d.pipe.RegionIterator", "org.jruby.ir.operands.ObjectClass", "jnr.ffi.NativeType", "org.thymeleaf.inline.IInliner", "org.hsqldb.types.IntervalSecondData", "org.flywaydb.core.internal.schemahistory.SchemaHistory", "com.fasterxml.jackson.databind.BeanDescription", "sun.util.calendar.Gregorian$Date", "java.awt.image.BufferStrategy", "org.jruby.RubyHash$VisitorWithState", "org.jruby.ir.operands.GlobalVariable", "java.awt.peer.FontPeer", "org.jruby.ir.instructions.boxing.UnboxFloatInstr", "java.util.function.DoubleToIntFunction", "org.hsqldb.lib.FileAccess", "java.util.stream.Collectors", "org.springframework.beans.factory.annotation.Autowire", "java.util.stream.DoubleStream", "java.awt.image.renderable.RenderContext", "org.joda.time.ReadablePeriod", "org.asciidoctor.extension.BlockMacroProcessor", "java.awt.Paint", "java.time.LocalDate", "org.hsqldb.QuerySpecification", "org.jruby.util.collections.ClassValueCalculator", "org.hsqldb.ExpressionLogical", "java.awt.Toolkit", "sun.security.util.JarConstraintsParameters", "java.awt.TextComponent", "org.jruby.ir.listeners.InstructionsListener$OperationType", "java.security.MessageDigest", "org.jruby.ast.ArgsPushNode", "java.util.OptionalDouble", "org.joda.time.Hours", "org.jruby.runtime.Block", "java.nio.channels.AsynchronousFileChannel", "com.fasterxml.jackson.databind.type.SimpleType", "org.springframework.web.context.request.AbstractRequestAttributes", "org.jruby.util.InputStreamMarkCursor", "org.springframework.beans.factory.config.DependencyDescriptor", "org.jcodings.ApplyAllCaseFoldFunction", "java.nio.charset.Charset", "javax.swing.JMenuItem", "org.jruby.runtime.JavaSites$CheckedSites", "org.jruby.ir.operands.StandardError", "org.jruby.runtime.profile.builtin.ProfilePrinter", "org.thymeleaf.expression.IExpressionObjectFactory", "java.io.PrintStream", "org.springframework.security.web.session.ConcurrentSessionFilter", "com.fasterxml.jackson.databind.PropertyNamingStrategy", "org.springframework.web.cors.CorsConfiguration", "java.lang.module.ModuleDescriptor$Builder", "org.jruby.AbstractRubyMethod", "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry", "java.text.DigitList", "org.hsqldb.RowActionBase", "java.nio.channels.SelectableChannel", "org.springframework.data.domain.Sort$TypedSort", "org.jruby.exceptions.RaiseException", "java.lang.Float", "org.asciidoctor.ast.Block", "java.awt.event.FocusListener", "org.jruby.ast.NthRefNode", "org.jcodings.util.CaseInsensitiveBytesHash$CaseInsensitiveBytesHashEntryIterator", "org.jruby.runtime.profile.ProfileCollection", "javax.servlet.SessionCookieConfig", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$HpkpConfig", "org.jruby.runtime.marshal.UnmarshalStream$MarshalState", "org.jruby.ast.BlockAcceptingNode", "javax.xml.namespace.NamespaceContext", "sun.awt.util.IdentityArrayList", "org.joda.time.MutableDateTime$Property", "org.jruby.management.Caches", "java.awt.Canvas", "org.jruby.ir.instructions.SearchConstInstr", "java.sql.ShardingKeyBuilder", "com.thoughtworks.xstream.io.AbstractDriver", "jnr.ffi.Struct$Alignment", "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer", "org.jruby.ast.IArgumentNode", "java.util.concurrent.CompletableFuture$UniWhenComplete", "org.jruby.ir.instructions.BuildSplatInstr", "org.springframework.web.servlet.config.annotation.CorsRegistry", "org.aopalliance.intercept.Joinpoint", "org.aopalliance.intercept.Interceptor", "org.jruby.internal.runtime.ThreadService$Event", "org.jruby.ir.util.IGVDumper", "java.util.jar.Attributes$Name", "java.lang.String", "org.slf4j.event.LoggingEvent", "java.lang.invoke.VarHandle", "java.awt.MenuContainer", "com.fasterxml.jackson.databind.ser.BeanPropertyFilter", "javax.tools.StandardJavaFileManager", "java.util.concurrent.locks.Lock", "java.awt.geom.Point2D$Float", "java.util.function.DoubleToLongFunction", "org.springframework.web.util.UrlPathHelper", "org.hsqldb.View", "javax.tools.DiagnosticListener", "org.thymeleaf.spring5.SpringTemplateEngine", "org.hsqldb.lib.HashMap", "java.text.DecimalFormatSymbols", "org.springframework.web.servlet.view.AbstractView", "org.springframework.http.HttpRequest", "org.springframework.security.authentication.AuthenticationProvider", "org.jruby.runtime.CallType", "org.springframework.http.server.ServerHttpResponse", "org.jruby.runtime.profile.builtin.ProfiledMethod", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor", "javax.servlet.http.WebConnection", "java.awt.dnd.DragGestureRecognizer", "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$1", "org.jruby.ast.PreExeNode", "java.lang.invoke.ClassSpecializer$Factory", "org.springframework.core.ResolvableType", "java.lang.invoke.BoundMethodHandle", "javax.swing.JMenuBar", "jnr.ffi.Struct$Signed16", "org.hsqldb.persist.RAShadowFile", "jdk.internal.org.objectweb.asm.TypePath", "org.asciidoctor.ast.RevisionInfo", "org.jruby.RubySymbol", "org.springframework.security.config.annotation.authentication.configurers.userdetails.UserDetailsServiceConfigurer", "java.security.PrivilegedAction", "org.springframework.core.AliasRegistry", "java.awt.image.VolatileImage", "java.security.Principal", "java.awt.peer.CheckboxMenuItemPeer", "org.springframework.http.converter.HttpMessageConverter", "java.awt.Graphics", "org.springframework.security.core.authority.mapping.Attributes2GrantedAuthoritiesMapper", "org.jruby.ast.BignumNode", "com.fasterxml.jackson.databind.JsonMappingException", "org.hsqldb.Database$TimeoutRunner", "org.jruby.runtime.callsite.NormalCachingCallSite", "javax.servlet.HttpConstraintElement", "java.util.function.LongBinaryOperator", "org.jruby.ir.instructions.boxing.BoxBooleanInstr", "org.thymeleaf.engine.ElementDefinitions", "java.nio.ShortBuffer", "org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer", "org.springframework.beans.factory.InitializingBean", "java.awt.TextField", "java.nio.file.AccessMode", "org.thymeleaf.model.ITemplateEnd", "org.jsoup.select.Evaluator", "java.awt.Desktop", "java.lang.reflect.AccessibleObject", "org.springframework.web.servlet.i18n.SessionLocaleResolver", "org.thymeleaf.model.IProcessingInstruction", "org.jruby.ir.transformations.inlining.InlineCloneInfo", "jnr.ffi.Struct$Signed32", "java.util.concurrent.TimeUnit", "org.hsqldb.HsqlNameManager$1", "java.text.BreakIterator", "com.thoughtworks.xstream.io.xml.DomDriver", "javax.accessibility.AccessibleComponent", "org.springframework.security.config.annotation.web.builders.WebSecurity$MvcMatchersIgnoredRequestConfigurer", "java.awt.dnd.DragSourceEvent", "org.hsqldb.StatementDMQL", "org.jruby.runtime.ivars.VariableAccessorField", "org.jruby.runtime.ObjectSpace", "org.jruby.javasupport.util.ObjectProxyCache$ReferenceType", "java.awt.event.WindowFocusListener", "org.springframework.data.domain.ExampleMatcher$PropertySpecifier", "org.springframework.security.config.annotation.web.configurers.PortMapperConfigurer$HttpPortMapping", "org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode$UnboxState", "com.fasterxml.jackson.databind.jsontype.TypeSerializer", "java.nio.channels.MembershipKey", "org.jsoup.nodes.Element", "org.springframework.security.web.header.writers.XContentTypeOptionsHeaderWriter", "org.springframework.context.ApplicationEventPublisher", "java.nio.channels.ByteChannel", "jnr.ffi.Struct$Enum", "java.nio.channels.spi.AbstractInterruptibleChannel", "java.util.regex.Pattern$CharPredicate", "jnr.posix.Times", "org.springframework.web.servlet.config.annotation.PathMatchConfigurer", "java.lang.reflect.Member", "com.fasterxml.jackson.databind.cfg.ConfigOverrides", "java.net.NetworkInterface", "com.fasterxml.jackson.core.StreamWriteFeature", "com.fasterxml.jackson.annotation.JsonAutoDetect", "javax.validation.constraints.NotNull", "com.fasterxml.jackson.core.StreamReadFeature", "org.thymeleaf.model.IComment", "org.flywaydb.core.internal.sqlscript.Delimiter", "org.asciidoctor.Placement", "org.jruby.ir.instructions.CallInstr", "org.hsqldb.Row", "org.springframework.boot.SpringApplicationRunListeners", "org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration", "java.awt.JobAttributes$DestinationType", "org.joda.time.base.BaseLocal", "com.fasterxml.jackson.databind.node.JsonNodeCreator", "org.apache.commons.lang3.exception.ExceptionUtils", "org.jruby.ir.instructions.ThreadPollInstr", "com.fasterxml.jackson.databind.type.TypeParser", "java.beans.JavaBean", "java.lang.StackWalker", "org.apache.commons.exec.OS", "org.jruby.util.KeyValuePair", "org.springframework.security.web.header.writers.FeaturePolicyHeaderWriter", "java.awt.geom.Point2D$Double", "jnr.posix.Timeval", "java.awt.datatransfer.FlavorTable", "org.jruby.util.RegexpOptions", "org.springframework.boot.CommandLineRunner", "org.joda.time.format.DateTimeParserBucket", "java.sql.Clob", "javax.xml.stream.XMLResolver", "org.jruby.ir.instructions.OneOperandBranchInstr", "org.jruby.ir.operands.Nil", "java.awt.CheckboxGroup", "org.jruby.ast.ZSuperNode", "java.lang.reflect.Field", "org.jruby.ir.instructions.NoResultCallInstr", "com.fasterxml.jackson.databind.deser.impl.PropertyValue", "java.text.spi.CollatorProvider", "org.jruby.ast.LambdaNode", "org.springframework.context.HierarchicalMessageSource", "jnr.posix.Timespec", "javax.swing.event.MenuEvent", "org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer", "java.awt.event.AWTEventListener", "org.springframework.http.HttpOutputMessage", "org.jruby.ir.operands.Boolean", "org.joda.time.YearMonthDay", "org.springframework.security.web.authentication.preauth.j2ee.J2eeBasedPreAuthenticatedWebAuthenticationDetailsSource", "org.joda.time.format.DateTimeParser", "java.awt.geom.Point2D", "jnr.ffi.Struct$Unsigned16", "java.lang.Runnable", "org.flywaydb.core.internal.jdbc.JdbcConnectionFactory", "java.util.Locale", "java.lang.Short", "org.springframework.security.config.annotation.web.configurers.SecurityContextConfigurer", "jnr.posix.NativePasswd", "java.util.PrimitiveIterator$OfInt", "com.thoughtworks.xstream.converters.ConverterRegistry", "org.jruby.ast.executable.RuntimeCache", "java.awt.image.RenderedImage", "java.util.ServiceLoader", "java.lang.module.Configuration", "org.springframework.http.client.support.HttpAccessor", "org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource", "javax.xml.bind.SchemaOutputResolver", "java.sql.CallableStatement", "org.springframework.security.web.header.writers.StaticHeadersWriter", "org.jcodings.Encoding", "jnr.ffi.Struct$Unsigned32", "org.hsqldb.lib.MultiValueHashMap", "org.springframework.web.servlet.config.annotation.ViewControllerRegistry", "org.joda.time.base.BaseDateTime", "org.thymeleaf.engine.HTMLElementName", "java.util.OptionalInt", "java.util.HashSet", "java.nio.file.LinkOption", "java.awt.im.InputMethodRequests", "org.flywaydb.core.api.InfoOutputProvider", "javax.servlet.ServletSecurityElement", "org.springframework.context.annotation.FilterType", "java.util.concurrent.ExecutorService", "java.time.zone.ZoneOffsetTransitionRule$TimeDefinition", "jnr.posix.JavaSecuredFile", "java.awt.EventQueue", "org.xml.sax.InputSource", "org.jruby.runtime.profile.ProfilingService", "org.hsqldb.lib.ObjectComparator", "jnr.ffi.Struct$SignedLong", "com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty$Type", "java.awt.Checkbox", "java.util.concurrent.Semaphore", "sun.security.util.ManifestEntryVerifier", "org.springframework.context.annotation.ScopedProxyMode", "java.awt.event.ActionEvent", "org.springframework.security.core.authority.mapping.GrantedAuthoritiesMapper", "org.joda.time.ReadWritableDateTime", "org.springframework.web.servlet.config.annotation.ViewResolverRegistry", "org.springframework.web.accept.ContentNegotiationManager", "java.util.function.LongSupplier", "org.springframework.web.context.request.WebRequest", "org.springframework.beans.PropertyEditorRegistry", "com.nulabinc.zxcvbn.Feedback$1", "java.lang.module.ModuleReference", "java.security.SecureRandom", "javax.tools.FileObject", "java.security.interfaces.RSAPublicKey", "org.springframework.core.env.PropertyResolver", "java.lang.reflect.Executable", "com.fasterxml.jackson.databind.JsonSerializer", "jnr.ffi.Struct$Unsigned64", "java.security.KeyPairGenerator", "java.util.concurrent.ForkJoinPool$ManagedBlocker", "org.hsqldb.ExpressionPeriodOp", "javax.servlet.FilterRegistration", "org.jruby.ir.operands.Bignum", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormatVisitor", "org.joda.time.base.AbstractDateTime", "org.springframework.web.servlet.HandlerMapping", "java.awt.GraphicsDevice$WindowTranslucency", "org.springframework.security.config.http.SessionCreationPolicy", "org.hsqldb.navigator.RangeIterator", "org.slf4j.ILoggerFactory", "org.springframework.web.servlet.handler.RequestMatchResult", "java.awt.dnd.DragSourceListener", "org.thymeleaf.engine.XMLAttributeName", "java.util.Dictionary", "java.nio.file.CopyOption", "java.lang.Throwable", "org.jruby.ir.instructions.LineNumberInstr", "javax.swing.MenuSelectionManager", "org.asciidoctor.ast.Cursor", "org.joda.time.format.InternalPrinter", "java.net.SocketException", "org.springframework.data.util.MethodInvocationRecorder$PropertyNameDetectionStrategy", "org.jruby.ir.instructions.JumpInstr", "java.lang.module.Resolver", "java.util.ResourceBundle$Control", "java.util.function.BiConsumer", "java.io.ObjectOutputStream", "org.jsoup.safety.Whitelist", "org.jruby.javasupport.proxy.JavaProxyInvocationHandler", "java.nio.channels.CompletionHandler", "javax.xml.validation.Validator", "org.jruby.runtime.ObjectSpace$1", "jdk.internal.module.ServicesCatalog", "javax.swing.MenuElement", "org.jruby.RubyRegexp$1", "org.jruby.ir.instructions.OptArgMultipleAsgnInstr", "org.jruby.ast.BeginNode", "org.joda.time.DateMidnight", "org.jruby.util.io.OpenFile$BufreadArg", "org.thymeleaf.ITemplateEngine", "org.jruby.runtime.ObjectSpace$ObjectGroup", "java.util.logging.LogManager$CloseOnReset", "java.util.function.IntConsumer", "java.util.AbstractList", "org.jruby.ast.AssignableNode", "com.fasterxml.jackson.databind.PropertyMetadata", "org.flywaydb.core.api.MigrationVersion", "org.jruby.ir.instructions.ArrayDerefInstr", "com.nulabinc.zxcvbn.AttackTimes$CrackTimeSeconds", "org.jruby.ext.ffi.InvalidMemoryIO", "org.joda.time.Days", "org.thymeleaf.engine.ITemplateHandler", "com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter", "org.springframework.data.domain.Pageable", "org.jruby.ast.EvStrNode", "java.awt.CheckboxMenuItem", "java.lang.Cloneable", "org.jruby.java.invokers.RubyToJavaInvoker", "com.thoughtworks.xstream.io.xml.XmlFriendlyReplacer", "org.springframework.web.bind.annotation.RequestMethod", "java.awt.desktop.SystemEventListener", "com.fasterxml.jackson.annotation.JsonFormat", "java.util.logging.Logger", "org.jruby.ir.operands.NthRef", "org.jruby.ir.instructions.ResultBaseInstr", "org.asciidoctor.DirectoryWalker", "org.flywaydb.core.api.callback.Statement", "java.util.concurrent.CompletableFuture$Completion", "jdk.internal.org.objectweb.asm.ClassWriter", "java.time.temporal.ChronoField", "org.thymeleaf.templateresolver.AbstractConfigurableTemplateResolver", "org.springframework.security.config.annotation.web.configurers.RememberMeConfigurer", "java.awt.datatransfer.DataFlavor", "org.hsqldb.Expression", "org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer", "org.jsoup.nodes.Entities$EscapeMode", "javax.xml.xpath.XPathExpression", "org.jruby.RubySymbol$1", "java.lang.annotation.Retention", "org.thymeleaf.context.ITemplateContext", "org.springframework.data.domain.ExampleMatcher$PropertySpecifiers", "org.springframework.http.ContentDisposition", "org.xml.sax.Attributes", "org.joni.Syntax$MetaCharTable", "org.jruby.runtime.JavaSites$BasicObjectSites", "java.awt.peer.TextAreaPeer", "org.jruby.runtime.profile.ProfileReporter", "java.nio.file.attribute.AttributeView", "org.jruby.ir.instructions.LabelInstr", "com.thoughtworks.xstream.converters.ErrorWriter", "org.jruby.runtime.opto.ConstantCache", "com.fasterxml.jackson.databind.deser.DeserializerCache", "com.fasterxml.jackson.core.FormatSchema", "org.springframework.security.core.userdetails.AuthenticationUserDetailsService", "java.awt.Dialog$ModalExclusionType", "jnr.ffi.StructLayout$Function", "javax.servlet.ServletRequestWrapper", "org.jruby.javasupport.proxy.JavaProxyClass", "io.jsonwebtoken.impl.TextCodec", "org.asciidoctor.ast.Document", "java.util.ServiceLoader$Provider", "org.apache.commons.lang3.StringUtils", "org.jruby.RubyRational$1", "org.jruby.ir.instructions.PutClassVariableInstr", "org.jruby.ir.instructions.GetInstr", "java.awt.dnd.DropTargetEvent", "java.util.stream.Collector", "java.util.logging.LogManager$LoggerWeakRef", "org.jruby.ir.instructions.ZSuperInstr", "javax.servlet.annotation.ServletSecurity$EmptyRoleSemantic", "javax.swing.plaf.PopupMenuUI", "java.nio.ByteOrder", "java.awt.TextArea", "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor", "org.jsoup.nodes.Document", "org.jruby.ir.instructions.BNEInstr", "org.thymeleaf.templateresolver.FileTemplateResolver", "org.asciidoctor.ast.AbstractNodeImpl", "org.jruby.ir.instructions.GetClassVarContainerModuleInstr", "java.awt.peer.PanelPeer", "org.flywaydb.core.internal.util.CloseableIterator", "java.util.Base64$Decoder", "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId", "org.thymeleaf.messageresolver.IMessageResolver", "java.lang.ReflectiveOperationException", "java.nio.channels.spi.AbstractSelectableChannel", "org.springframework.security.web.header.writers.HpkpHeaderWriter", "org.springframework.beans.BeanMetadataAttribute", "java.time.temporal.TemporalAccessor", "org.jruby.ir.instructions.BuildDynRegExpInstr$1", "java.util.function.ToLongBiFunction", "org.asciidoctor.Attributes", "org.jruby.ir.instructions.BTrueInstr", "org.springframework.beans.factory.config.BeanDefinition", "javax.accessibility.AccessibleRole", "java.io.Flushable", "com.fasterxml.jackson.databind.node.NumericNode", "java.nio.file.FileStore", "org.jruby.ir.dataflow.analyses.StoreLocalVarPlacementNode", "org.springframework.security.web.AuthenticationEntryPoint", "org.jsoup.parser.Token$Tag", "org.springframework.security.access.AccessDeniedException", "org.jruby.RubyInteger", "org.springframework.expression.TypeComparator", "java.awt.event.MouseWheelListener", "org.springframework.beans.factory.config.ConfigurableBeanFactory", "org.jruby.ext.ffi.AbstractMemory", "sun.util.locale.Extension", "org.springframework.web.context.ServletContextAware", "com.fasterxml.jackson.databind.PropertyMetadata$MergeInfo", "org.jruby.ast.ArgsCatNode", "org.springframework.context.annotation.ComponentScan$Filter", "java.util.AbstractCollection", "java.io.ByteArrayInputStream", "java.awt.event.ComponentListener", "java.lang.Readable", "org.joda.time.DateTimeField", "java.util.zip.ZipFile", "org.springframework.web.client.RestTemplate", "org.jruby.org.objectweb.asm.commons.TableSwitchGenerator", "javax.servlet.ServletConfig", "org.thymeleaf.engine.Model", "org.jruby.compiler.Constantizable", "org.hsqldb.rowio.RowOutputInterface", "java.net.InetAddressImpl", "java.text.spi.DateFormatSymbolsProvider", "java.net.URLStreamHandlerFactory", "org.springframework.util.FileSystemUtils", "com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap", "org.jruby.ir.instructions.TwoOperandResultBaseInstr", "java.time.format.DateTimeParseContext", "org.springframework.security.core.context.SecurityContext", "java.awt.peer.LightweightPeer", "java.lang.annotation.Annotation", "java.io.DataInput", "org.springframework.web.bind.annotation.RequestHeader", "org.jruby.util.collections.IntHashMap", "java.awt.image.MultiResolutionImage", "org.springframework.security.web.header.writers.HstsHeaderWriter", "org.w3c.dom.ProcessingInstruction", "jdk.internal.loader.LoaderPool", "org.jruby.util.JRubyFile", "org.hsqldb.Scanner", "org.springframework.web.servlet.handler.AbstractHandlerMapping", "jnr.ffi.Runtime", "java.util.function.Function", "java.util.function.BiPredicate", "jnr.posix.util.ProcessMaker$Redirect", "java.awt.Graphics2D", "java.lang.Boolean", "java.awt.Component$BaselineResizeBehavior", "org.jruby.embed.Extension", "org.w3c.dom.UserDataHandler", "org.jruby.ir.instructions.ReturnBase", "java.security.PublicKey", "org.springframework.web.context.request.ServletRequestAttributes", "com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder", "org.springframework.beans.factory.config.BeanExpressionContext", "org.jruby.ast.IScopingNode", "java.security.AlgorithmParameters", "org.springframework.security.web.access.expression.EvaluationContextPostProcessor", "jdk.internal.org.objectweb.asm.ClassReader", "org.jruby.ir.passes.CompilerPassScheduler", "org.asciidoctor.extension.Preprocessor", "org.jruby.org.objectweb.asm.Label", "org.w3c.dom.ls.LSResourceResolver", "org.springframework.http.ResponseEntity", "org.springframework.context.i18n.LocaleContext", "org.jruby.ir.instructions.NOperandInstr", "java.security.AccessControlContext", "java.util.Arrays", "org.jruby.ast.YieldNode", "org.jruby.ir.interpreter.InterpreterContext", "org.jruby.ir.instructions.ArgScopeDepthInstr", "org.hsqldb.types.Collation", "org.hsqldb.SortAndSlice", "sun.reflect.generics.repository.ClassRepository", "org.w3c.dom.CDATASection", "java.util.concurrent.CompletableFuture$AsynchronousCompletionTask", "javax.swing.text.AttributeSet", "java.util.function.LongToIntFunction", "sun.reflect.generics.tree.TypeSignature", "javax.servlet.http.HttpServlet", "java.nio.file.DirectoryStream$Filter", "javax.swing.plaf.RootPaneUI", "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer", "org.jruby.RubyException", "sun.reflect.generics.tree.TypeArgument", "java.security.Signature", "java.util.Spliterator$OfPrimitive", "org.springframework.security.access.AccessDecisionManager", "org.springframework.security.core.authority.GrantedAuthoritiesContainer", "java.awt.geom.AffineTransform", "org.flywaydb.core.internal.sqlscript.SqlScriptFactory", "com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder", "org.jruby.RubyThreadGroup", "com.fasterxml.jackson.core.io.InputDecorator", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat", "sun.security.util.DerInputBuffer", "org.jcodings.util.Hash$HashEntryIterator", "org.jruby.ast.DNode", "org.springframework.beans.factory.ListableBeanFactory", "org.jruby.parser.StaticScope$Type", "org.springframework.security.web.savedrequest.RequestCache", "java.awt.event.KeyListener", "com.fasterxml.jackson.databind.deser.DataFormatReaders", "org.flywaydb.core.internal.sqlscript.SqlStatementIterator", "org.springframework.web.context.request.async.DeferredResult", "com.fasterxml.jackson.databind.type.ClassStack", "org.hsqldb.rights.GranteeManager", "java.sql.SQLException", "org.asciidoctor.internal.AsciidoctorModule", "jnr.ffi.CallingConvention", "java.net.URLConnection", "org.joda.time.YearMonthDay$Property", "java.lang.ModuleLayer$Controller", "org.jruby.util.RubyDateFormatter$FieldType", "java.nio.file.Files", "javax.persistence.OneToMany", "java.lang.RuntimeException", "org.hsqldb.types.NumberType", "org.jruby.ast.EnsureNode", "com.fasterxml.jackson.databind.util.ArrayBuilders$LongBuilder", "java.awt.RenderingHints$Key", "org.jruby.ast.DRegexpNode", "org.jruby.ast.RescueNode", "org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter", "org.springframework.context.support.MessageSourceSupport", "org.springframework.security.authentication.AuthenticationEventPublisher", "java.awt.peer.LabelPeer", "org.jruby.ast.types.INameNode", "org.jruby.ir.instructions.BlockGivenInstr", "com.fasterxml.jackson.databind.jsontype.TypeDeserializer", "java.awt.Point", "java.awt.RenderingHints", "org.jruby.ir.instructions.BacktickInstr", "java.util.logging.Formatter", "org.jruby.ir.instructions.boxing.UnboxBooleanInstr", "org.jruby.ir.instructions.TwoOperandInstr", "java.text.Annotation", "org.thymeleaf.engine.HTMLAttributeName", "java.lang.Math", "org.jruby.ir.instructions.InstanceSuperInstr", "java.lang.ref.PhantomReference", "jdk.internal.vm.annotation.ForceInline", "java.awt.Taskbar", "org.jsoup.select.NodeFilter", "org.jruby.runtime.ClassIndex", "org.springframework.jdbc.core.RowCallbackHandler", "com.fasterxml.jackson.databind.introspect.AnnotatedClass", "org.springframework.security.access.intercept.AbstractSecurityInterceptor", "java.io.Writer", "java.beans.FeatureDescriptor", "java.util.logging.Handler", "jnr.posix.POSIXHandler$WARNING_ID", "sun.text.spi.JavaTimeDateTimePatternProvider", "org.springframework.security.config.annotation.web.configurers.AbstractConfigAttributeRequestMatcherRegistry$UrlMapping", "jnr.ffi.Struct", "org.jruby.ir.IRScope", "com.fasterxml.jackson.databind.DatabindContext", "java.awt.color.ColorSpace", "com.fasterxml.jackson.databind.node.ObjectNode", "javax.servlet.http.HttpUpgradeHandler", "com.fasterxml.jackson.core.JsonPointer", "org.asciidoctor.extension.Postprocessor", "java.awt.DisplayMode", "org.springframework.security.web.authentication.preauth.x509.X509AuthenticationFilter", "org.springframework.web.bind.annotation.GetMapping", "org.jcodings.util.CaseInsensitiveBytesHash", "org.hsqldb.RangeVariable$RangeIteratorMain", "com.fasterxml.jackson.annotation.JsonFormat$Feature", "org.flywaydb.core.internal.jdbc.RowMapper", "java.lang.annotation.ElementType", "org.hsqldb.ColumnSchema", "java.util.regex.Pattern$Node", "java.lang.invoke.MethodType", "javax.servlet.http.Part", "jdk.internal.reflect.LangReflectAccess", "java.util.jar.JarVerifier", "org.jruby.management.CachesMBean", "org.jruby.Ruby$RecursiveFunction", "javax.swing.InputMap", "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer", "org.jruby.ir.instructions.PopBindingInstr", "com.fasterxml.jackson.databind.JsonSerializable$Base", "java.awt.Cursor", "org.jruby.javasupport.ParameterTypes", "org.jruby.util.RubyDateFormat", "org.hsqldb.SessionManager", "sun.util.locale.provider.LocaleProviderAdapter$Type", "org.jruby.ir.dataflow.analyses.UnboxableOpsAnalysisNode", "org.asciidoctor.log.LogRecord", "java.lang.Long", "org.springframework.jdbc.support.rowset.SqlRowSetMetaData", "jnr.ffi.Struct$Unsigned8", "org.hsqldb.TableDerived", "org.springframework.security.core.AuthenticationException", "java.awt.MenuShortcut", "org.springframework.security.core.context.SecurityContextHolder", "org.jruby.org.objectweb.asm.ClassReader", "org.springframework.web.bind.annotation.PostMapping", "jnr.posix.MsgHdr", "java.util.stream.Collectors$Partition", "org.jruby.RubyArray", "org.hsqldb.types.TypedComparator", "org.springframework.jdbc.datasource.AbstractDriverBasedDataSource", "javax.accessibility.Accessible", "org.jruby.util.io.IOOptions", "java.sql.PreparedStatement", "org.joda.time.LocalDate$Property", "java.awt.ScrollPane", "com.fasterxml.jackson.core.format.InputAccessor", "org.thymeleaf.context.IdentifierSequences", "org.asciidoctor.ast.Title", "org.jruby.runtime.Visibility", "org.hsqldb.ParserDQL$CompileContext", "org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint", "com.fasterxml.jackson.core.async.NonBlockingInputFeeder", "org.springframework.util.FileCopyUtils", "org.hsqldb.DatabaseType", "org.springframework.security.web.csrf.CsrfTokenRepository", "java.lang.StackOverflowError", "java.awt.Polygon", "org.springframework.validation.Errors", "org.springframework.validation.BindingResult", "com.fasterxml.jackson.core.ObjectCodec", "org.springframework.http.ReactiveHttpOutputMessage", "org.springframework.http.client.ClientHttpRequest", "com.fasterxml.jackson.databind.KeyDeserializer", "com.fasterxml.jackson.core.util.BufferRecycler", "java.awt.Stroke", "java.awt.desktop.OpenURIEvent", "java.nio.channels.ScatteringByteChannel", "org.springframework.boot.BeanDefinitionLoader$GroovyBeanDefinitionSource", "org.hsqldb.persist.CachedObject", "org.jruby.ir.instructions.ReceiveKeywordArgInstr", "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$1", "org.thymeleaf.dialect.AbstractDialect", "org.jsoup.parser.Token$Doctype", "org.jruby.ir.instructions.TraceInstr", "org.thymeleaf.model.ICDATASection", "org.jruby.ast.KeywordArgNode", "jnr.ffi.StructLayout$AbstractField", "com.fasterxml.jackson.databind.type.ReferenceType", "java.time.chrono.AbstractChronology", "org.joda.time.base.BaseDuration", "org.springframework.web.servlet.config.annotation.WebMvcConfigurer", "org.jruby.ir.operands.Complex", "org.springframework.web.util.UriComponentsBuilder", "javax.xml.bind.attachment.AttachmentUnmarshaller", "javax.activation.DataContentHandlerFactory", "org.jruby.runtime.JavaSites$FixnumSites", "com.fasterxml.jackson.annotation.JsonView", "com.fasterxml.jackson.databind.AnnotationIntrospector", "java.util.function.BiFunction", "jnr.ffi.Struct$PointerField", "org.jruby.javasupport.JavaCallable", "org.jruby.RubyNumeric", "org.jruby.ir.instructions.specialized.ZeroOperandArgNoBlockCallInstr", "org.jruby.runtime.backtrace.TraceType$Format", "java.util.function.LongPredicate", "org.flywaydb.core.internal.output.InfoOutput", "javax.security.auth.Destroyable", "org.jruby.RubyMatchData", "com.beust.jcommander.internal.Lists", "java.security.KeyFactory", "org.jruby.ir.operands.ImmutableLiteral", "org.jsoup.nodes.Node", "jnr.posix.util.ProcessMaker", "java.util.LinkedList$Node", "org.springframework.core.env.Environment", "org.springframework.aop.framework.AopInfrastructureBean", "java.math.MutableBigInteger", "org.asciidoctor.extension.PreprocessorReader", "javax.swing.event.MenuKeyEvent", "javax.security.auth.x500.X500Principal", "com.fasterxml.jackson.databind.util.ArrayBuilders$DoubleBuilder", "org.springframework.core.io.ClassPathResource", "org.springframework.http.ResponseEntity$BodyBuilder", "org.springframework.security.web.header.writers.ReferrerPolicyHeaderWriter", "com.fasterxml.jackson.core.type.ResolvedType", "java.io.FilterInputStream", "org.jruby.ir.instructions.RescueEQQInstr", "com.fasterxml.jackson.annotation.JsonIgnore", "org.springframework.security.access.expression.SecurityExpressionHandler", "com.fasterxml.jackson.databind.introspect.AnnotatedMethod", "java.awt.font.TextHitInfo", "sun.font.EAttribute", "com.fasterxml.jackson.databind.deser.DataFormatReaders$AccessorForReader", "jnr.ffi.Struct$Enum8", "com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity", "org.jruby.javasupport.proxy.JavaProxyConstructor", "com.fasterxml.jackson.databind.ser.BeanPropertyWriter", "org.w3c.dom.CharacterData", "java.awt.peer.TextComponentPeer", "org.jruby.ast.ComplexNode", "com.fasterxml.jackson.databind.annotation.JsonPOJOBuilder$Value", "org.jruby.ir.instructions.boxing.UnboxFixnumInstr", "java.io.ObjectInputFilter$Status", "jdk.internal.loader.Loader$LoadedModule", "java.awt.image.WritableRaster", "org.flywaydb.core.api.resolver.Context", "org.springframework.web.servlet.config.annotation.ResourceChainRegistration", "com.fasterxml.jackson.core.filter.TokenFilter", "org.thymeleaf.model.IStandaloneElementTag", "org.jruby.ast.DefnNode", "org.jsoup.parser.TreeBuilder", "sun.font.CharToGlyphMapper", "javax.accessibility.AccessibleBundle", "java.time.temporal.TemporalQuery", "java.awt.dnd.DragGestureEvent", "org.springframework.data.domain.Sort$Direction", "org.jruby.ir.instructions.BuildBackrefInstr", "org.jruby.ast.ReturnNode", "java.lang.module.ModuleFinder", "java.lang.InternalError", "org.jruby.ir.operands.TemporaryFloatVariable", "org.springframework.security.web.PortResolver", "javax.tools.StandardJavaFileManager$PathFactory", "org.flywaydb.core.api.migration.Context", "jnr.posix.Passwd", "javax.persistence.Entity", "org.joni.OptEnvironment", "com.fasterxml.jackson.annotation.JsonCreator$Mode", "java.util.Set", "org.jruby.ast.UndefNode", "org.springframework.web.accept.PathExtensionContentNegotiationStrategy", "org.jruby.ir.instructions.specialized.OneFloatArgNoBlockCallInstr", "org.springframework.web.bind.annotation.RestController", "jnr.ffi.provider.ClosureManager", "org.springframework.security.config.annotation.web.configurers.ChannelSecurityConfigurer$ChannelRequestMatcherRegistry", "org.springframework.data.util.Streamable", "jnr.ffi.Struct$AbstractMember", "org.jruby.ir.instructions.ReqdArgMultipleAsgnInstr", "java.net.DatagramPacket", "org.jruby.compiler.JITCompilerMBean", "org.jruby.ir.instructions.RuntimeHelperCall", "org.springframework.security.config.annotation.web.builders.WebSecurity$IgnoredRequestConfigurer", "sun.reflect.generics.tree.MethodTypeSignature", "org.jruby.ir.operands.Hash", "org.jruby.org.objectweb.asm.MethodWriter", "org.hsqldb.persist.RandomAccessInterface", "javax.xml.stream.events.EndElement", "javax.swing.AbstractButton", "jdk.internal.ref.PhantomCleanable", "org.hsqldb.RangeVariable$RangeVariableConditions", "org.springframework.http.RequestEntity", "java.lang.StackFrameInfo", "org.jruby.ir.instructions.boxing.AluInstr", "sun.font.StrikeMetrics", "org.jruby.ir.operands.AsString", "org.jruby.runtime.encoding.EncodingService", "javax.xml.bind.annotation.XmlRootElement", "com.fasterxml.jackson.annotation.JacksonAnnotationValue", "org.jruby.internal.runtime.methods.JavaMethod", "org.springframework.expression.Expression", "org.springframework.security.config.annotation.web.configurers.SessionManagementConfigurer$SessionFixationConfigurer", "java.lang.Comparable", "org.jruby.ir.instructions.NOperandResultBaseInstr", "java.security.CodeSource", "org.springframework.http.server.reactive.ServerHttpRequest$Builder", "org.hsqldb.Statement", "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer", "org.jruby.util.JRubyClassLoader", "org.thymeleaf.engine.ProcessorExecutionVars", "org.jruby.runtime.callsite.RespondToCallSite$RespondToTuple", "java.util.spi.TimeZoneNameProvider", "javax.tools.Diagnostic", "org.springframework.web.servlet.config.annotation.InterceptorRegistry", "java.security.spec.AlgorithmParameterSpec", "java.sql.SQLWarning", "org.jruby.ir.instructions.ReceivePreReqdArgInstr", "javax.servlet.annotation.WebInitParam", "javax.swing.plaf.ComponentUI", "org.hsqldb.persist.TableSpaceManager", "java.net.Authenticator", "org.springframework.security.web.util.matcher.RequestMatcher", "java.util.logging.LogRecord", "org.joni.WarnCallback", "org.springframework.expression.BeanResolver", "java.util.concurrent.CompletableFuture$UniHandle", "javax.persistence.GenerationType", "javax.xml.bind.ValidationEvent", "com.fasterxml.jackson.databind.type.TypeModifier", "org.springframework.jdbc.core.RowMapper", "org.springframework.http.ResponseEntity$HeadersBuilder", "jnr.constants.platform.Sysconf", "org.springframework.security.config.annotation.web.configurers.ServletApiConfigurer", "org.jruby.ir.operands.StringLiteral", "org.springframework.web.bind.annotation.ModelAttribute", "java.lang.invoke.VarHandle$AccessType", "org.springframework.http.ResponseCookie", "org.joda.time.Period", "com.thoughtworks.xstream.io.HierarchicalStreamDriver", "org.thymeleaf.model.IText", "org.hsqldb.lib.DataOutputStream", "com.fasterxml.jackson.databind.cfg.BaseSettings", "com.fasterxml.jackson.databind.ObjectMapper", "jnr.ffi.Struct$UTFString", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentSecurityPolicyConfig", "com.fasterxml.jackson.databind.cfg.ConfigFeature", "java.awt.event.FocusEvent", "org.thymeleaf.spring5.view.ThymeleafViewResolver", "com.fasterxml.jackson.annotation.JsonInclude", "org.springframework.web.HttpRequestHandler", "java.nio.file.WatchEvent$Modifier", "com.thoughtworks.xstream.XStream", "java.io.BufferedInputStream", "org.jruby.ir.IRManager", "org.jruby.ast.SClassNode", "org.jruby.org.objectweb.asm.ClassVisitor", "java.awt.image.SampleModel", "java.awt.peer.ScrollbarPeer", "com.fasterxml.jackson.databind.deser.UnresolvedForwardReference", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWithSerializerProvider", "java.lang.InheritableThreadLocal", "java.nio.channels.Channel", "org.jruby.RubyUnboundMethod", "org.jruby.runtime.JavaSites$TimeSites", "javax.servlet.Servlet", "java.util.logging.ErrorManager", "org.jruby.util.RubyDateFormatter$Format", "java.security.SecureRandomParameters", "jnr.posix.NativePOSIX", "org.jruby.ast.IterNode", "org.jruby.ir.operands.SymbolProc", "java.util.concurrent.CompletionStage", "javax.servlet.annotation.HttpMethodConstraint", "java.lang.LayerInstantiationException", "java.text.CollationKey", "org.springframework.security.config.annotation.web.configurers.saml2.Saml2LoginConfigurer", "java.awt.PaintContext", "javax.servlet.http.HttpSessionContext", "java.lang.invoke.MethodTypeForm", "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer", "com.fasterxml.jackson.annotation.Nulls", "sun.reflect.generics.repository.AbstractRepository", "org.springframework.web.servlet.resource.ResourceTransformerChain", "com.thoughtworks.xstream.io.naming.NameCoder", "java.awt.geom.Dimension2D", "java.awt.event.ActionListener", "java.awt.peer.MouseInfoPeer", "org.jruby.RubyHash$1", "java.awt.dnd.DragSourceMotionListener", "java.awt.font.TextAttribute", "org.springframework.web.filter.OncePerRequestFilter", "sun.awt.FwDispatcher", "com.fasterxml.jackson.annotation.JsonIgnoreProperties$Value", "java.lang.reflect.Constructor", "org.flywaydb.core.api.configuration.ClassicConfiguration", "java.util.OptionalLong", "com.fasterxml.jackson.databind.deser.Deserializers", "org.jruby.runtime.encoding.EncodingCapable", "org.asciidoctor.ast.Inline", "java.awt.Dialog$ModalityType", "com.fasterxml.jackson.databind.deser.KeyDeserializers", "org.springframework.core.env.EnvironmentCapable", "java.nio.Buffer", "org.joda.time.base.AbstractInstant", "javax.swing.JToolTip", "java.io.Console", "java.lang.reflect.TypeVariable", "org.jruby.util.io.PosixShim", "org.springframework.web.servlet.i18n.AbstractLocaleContextResolver", "org.jruby.util.io.OpenFile$BinwriteArg", "org.jruby.ir.dataflow.analyses.LiveVariableNode", "java.lang.reflect.ParameterizedType", "org.springframework.security.web.authentication.preauth.j2ee.J2eePreAuthenticatedProcessingFilter", "org.springframework.web.bind.annotation.PathVariable", "javax.servlet.FilterChain", "org.asciidoctor.extension.BlockProcessor", "java.util.SortedSet", "java.awt.ItemSelectable", "jnr.ffi.Struct$Function", "org.springframework.http.converter.ResourceRegionHttpMessageConverter", "org.flywaydb.core.internal.sqlscript.SqlScript", "org.springframework.web.bind.annotation.CookieValue", "org.springframework.dao.support.DaoSupport", "java.net.InetAddress$InetAddressHolder", "org.jruby.ir.instructions.BreakInstr", "java.util.function.ToLongFunction", "org.springframework.http.HttpMessage", "org.jruby.RubyEnumerator$SizeFn", "jdk.internal.org.objectweb.asm.ClassVisitor", "java.awt.Composite", "org.hsqldb.types.Type", "org.springframework.expression.TypeConverter", "java.sql.Timestamp", "sun.reflect.generics.tree.BaseType", "org.jruby.internal.runtime.methods.MethodArgs2", "java.security.Provider", "com.fasterxml.jackson.databind.introspect.AnnotatedWithParams", "org.jruby.ast.SValueNode", "org.flywaydb.core.api.callback.Warning", "org.jruby.ir.operands.DepthCloneable", "com.fasterxml.jackson.databind.SequenceWriter", "java.lang.ModuleLayer", "javax.swing.SwingConstants", "sun.reflect.generics.tree.IntSignature", "org.springframework.jdbc.core.JdbcTemplate", "com.fasterxml.jackson.databind.DeserializationConfig", "org.thymeleaf.engine.ElementName", "org.jruby.ir.instructions.FixedArityInstr", "com.fasterxml.jackson.databind.node.ContainerNode", "org.w3c.dom.NamedNodeMap", "org.thymeleaf.model.IModelVisitor", "org.hsqldb.FunctionSQLInvoked", "org.thymeleaf.templateresolver.ITemplateResolver", "org.jruby.anno.FrameField", "java.lang.reflect.GenericDeclaration", "javax.xml.stream.XMLEventReader", "java.awt.color.ICC_Profile", "java.lang.invoke.BoundMethodHandle$SpeciesData", "org.springframework.boot.Banner", "java.awt.Label", "com.fasterxml.jackson.databind.AbstractTypeResolver", "org.springframework.web.servlet.mvc.ParameterizableViewController", "java.util.function.LongConsumer", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor", "org.w3c.dom.DocumentType", "org.springframework.web.servlet.resource.ResourceHttpRequestHandler", "org.jruby.ast.Match3Node", "javax.tools.OptionChecker", "java.time.format.DateTimePrintContext", "org.jruby.dirgra.Edge", "org.springframework.web.cors.CorsProcessor", "java.lang.Class", "java.util.IntSummaryStatistics", "org.w3c.dom.ls.LSInput", "org.thymeleaf.templateparser.markup.decoupled.IDecoupledTemplateLogicResolver", "javax.xml.validation.ValidatorHandler", "java.util.concurrent.ConcurrentHashMap$Node", "org.jruby.ir.operands.CurrentScope", "org.jsoup.parser.Parser", "org.springframework.web.context.request.NativeWebRequest", "com.fasterxml.jackson.databind.node.NullNode", "java.awt.font.NumericShaper$Range", "org.asciidoctor.ast.AbstractBlock", "org.joda.time.Seconds", "com.fasterxml.jackson.annotation.JacksonInject$Value", "org.springframework.beans.TypeConverter", "org.springframework.jdbc.support.rowset.SqlRowSet", "org.hsqldb.types.CharacterType", "io.jsonwebtoken.JwtHandler", "org.springframework.validation.FieldError", "java.time.zone.ZoneOffsetTransition", "org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer$UserDetailsBuilder", "com.fasterxml.jackson.core.Version", "org.jruby.ir.Operation", "jnr.ffi.Struct$UTF8String", "org.thymeleaf.linkbuilder.ILinkBuilder", "java.awt.Transparency", "org.jsoup.select.NodeFilter$FilterResult", "java.util.function.ObjLongConsumer", "sun.security.util.DerOutputStream", "org.jruby.ir.instructions.ModuleVersionGuardInstr", "javax.swing.AncestorNotifier", "com.fasterxml.jackson.core.JsonGenerator", "sun.security.util.DerInputStream", "java.text.NumberFormat", "org.asciidoctor.extension.RubyExtensionRegistry", "org.springframework.security.web.RedirectStrategy", "java.net.FileNameMap", "org.jruby.management.BeanManager", "javax.accessibility.AccessibleText", "org.jruby.ir.instructions.EQQInstr", "org.springframework.web.servlet.ViewResolver", "com.fasterxml.jackson.core.TreeCodec", "org.jruby.ir.instructions.CopyInstr", "org.jruby.ir.interpreter.InterpreterEngine", "org.springframework.context.annotation.Import", "jdk.internal.loader.Loader", "io.jsonwebtoken.SigningKeyResolverAdapter", "java.util.concurrent.CompletableFuture$BiAccept", "com.fasterxml.jackson.core.type.WritableTypeId", "java.awt.FontMetrics", "java.sql.Statement", "org.jruby.runtime.builtin.IRubyObject", "java.io.BufferedReader", "org.flywaydb.core.internal.resource.LoadableResource", "org.thymeleaf.engine.AttributeDefinition", "org.joni.OptExactInfo", "org.jruby.ir.instructions.specialized.OneFixnumArgNoBlockCallInstr", "org.springframework.security.config.annotation.web.builders.HttpSecurity", "java.util.function.IntPredicate", "com.nulabinc.zxcvbn.matchers.Match$1", "com.fasterxml.jackson.databind.annotation.JsonSerialize$Typing", "org.springframework.data.domain.ExampleMatcher$MatchMode", "java.lang.invoke.LambdaFormEditor", "java.nio.channels.SocketChannel", "sun.font.Font2DHandle", "org.springframework.http.converter.AbstractGenericHttpMessageConverter", "com.fasterxml.jackson.databind.ObjectWriter$GeneratorSettings", "org.jruby.ir.instructions.PutInstr", "org.jruby.util.io.FilenoUtil", "org.jruby.management.ParserStatsMBean", "com.fasterxml.jackson.databind.annotation.JacksonStdImpl", "java.awt.event.ItemEvent", "org.asciidoctor.ast.AbstractNode", "java.awt.desktop.QuitStrategy", "jnr.ffi.annotations.TypeDefinition", "java.lang.Thread$State", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor", "org.jruby.util.io.ChannelFD", "org.jruby.ast.RootNode", "java.text.Format$Field", "org.flywaydb.core.api.Location", "org.w3c.dom.Comment", "java.awt.AttributeValue", "org.jruby.ast.ZArrayNode", "java.util.List", "com.fasterxml.jackson.databind.util.RootNameLookup", "io.jsonwebtoken.ExpiredJwtException", "org.jruby.runtime.callsite.CachingCallSite", "java.net.SocketOptions", "org.springframework.dao.DataAccessException", "java.util.ResourceBundle$CacheKey", "java.awt.desktop.PrintFilesHandler", "org.jruby.runtime.marshal.DataType", "org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer", "java.lang.invoke.MethodHandleImpl$Intrinsic", "java.lang.Iterable", "javax.swing.event.AncestorListener", "com.fasterxml.jackson.annotation.JsonFormat$Shape", "org.thymeleaf.model.IProcessableElementTag", "java.nio.channels.Pipe", "org.jruby.RubyMethod", "com.fasterxml.jackson.databind.deser.ContextualDeserializer", "java.nio.file.OpenOption", "org.joda.time.Weeks", "com.fasterxml.jackson.annotation.ObjectIdGenerator", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes", "org.thymeleaf.engine.ThrottledTemplateWriter", "javax.swing.plaf.MenuBarUI", "java.awt.PrintJob", "java.io.Closeable", "org.springframework.web.multipart.MultipartFile", "org.apache.commons.logging.Log", "org.jruby.util.func.Function1", "org.springframework.jdbc.support.JdbcAccessor", "org.springframework.beans.factory.annotation.Autowired", "com.nulabinc.zxcvbn.AttackTimes$CrackTimesDisplay", "java.nio.file.WatchEvent$Kind", "org.springframework.http.CacheControl", "org.jruby.ir.instructions.ToggleBacktraceInstr", "com.fasterxml.jackson.databind.type.ArrayType", "java.math.BigInteger", "java.sql.Struct", "org.jruby.ir.IRScopeType", "sun.security.util.DerValue", "java.io.ObjectStreamClass$ClassDataSlot", "java.nio.file.FileVisitor", "org.jruby.ir.instructions.CheckForLJEInstr", "org.jruby.util.ByteList", "java.net.SocketImplFactory", "javax.tools.JavaFileManager$Location", "org.jruby.common.RubyWarnings", "sun.security.x509.GeneralNameInterface", "org.springframework.data.annotation.Id", "com.fasterxml.jackson.databind.deser.SettableBeanProperty", "java.nio.channels.Pipe$SinkChannel", "org.asciidoctor.converter.JavaConverterRegistry", "org.springframework.expression.Operation", "org.springframework.data.util.MethodInvocationRecorder$1", "org.joda.time.format.PeriodFormatter", "org.springframework.core.io.support.ResourceRegion", "java.awt.event.AdjustmentListener", "org.springframework.data.util.MethodInvocationRecorder$Recorded$ToCollectionConverter", "org.jruby.util.ClassDefiningJRubyClassLoader", "org.thymeleaf.IThrottledTemplateProcessor", "org.springframework.beans.factory.config.ConstructorArgumentValues", "org.springframework.beans.BeanMetadataAttributeAccessor", "org.springframework.http.client.ClientHttpRequestInitializer", "org.springframework.web.util.DefaultUriBuilderFactory", "org.jruby.javasupport.JavaObject", "org.hsqldb.RangeVariable$1", "org.jruby.ast.RescueBodyNode", "org.joda.time.ReadWritablePeriod", "java.io.IOException", "org.springframework.security.web.SecurityFilterChain", "javax.servlet.annotation.ServletSecurity", "org.springframework.core.io.buffer.DataBufferFactory", "sun.reflect.generics.visitor.Reifier", "java.util.Date", "org.springframework.context.support.AbstractMessageSource", "java.io.ObjectInputStream", "java.awt.dnd.peer.DragSourceContextPeer", "org.jruby.RubyBignum", "java.util.Random", "org.hsqldb.lib.HashSet", "org.springframework.web.servlet.HandlerExecutionChain", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$1", "java.awt.PointerInfo", "java.nio.channels.FileLock", "java.util.Locale$FilteringMode", "javax.xml.xpath.XPathEvaluationResult", "java.time.chrono.IsoChronology", "org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter", "org.springframework.context.ConfigurableApplicationContext", "java.util.zip.ZipEntry", "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice", "java.awt.datatransfer.Clipboard", "javax.tools.JavaCompiler", "org.springframework.jdbc.core.PreparedStatementCallback", "org.hsqldb.types.LobData", "org.jruby.runtime.MethodFactory", "java.awt.Menu", "sun.font.FontStrike", "java.lang.ref.Reference", "com.fasterxml.jackson.annotation.JsonAutoDetect$Visibility", "org.hsqldb.NumberSequence", "io.jsonwebtoken.Jwts", "org.jruby.runtime.callsite.RespondToCallSite", "org.springframework.core.ResolvableType$VariableResolver", "sun.util.resources.LocaleData", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ReferrerPolicyConfig", "jnr.constants.Constant", "org.jruby.RubySymbol$SymbolTable", "org.hsqldb.RangeVariable$RangeIteratorBase", "org.springframework.beans.factory.Aware", "java.lang.module.ModuleDescriptor", "java.awt.dnd.DropTarget$DropTargetAutoScroller", "java.lang.annotation.Repeatable", "org.springframework.http.RequestEntity$BodyBuilder", "org.springframework.security.authentication.AuthenticationDetailsSource", "org.jruby.util.Loader", "org.thymeleaf.model.IModel", "org.hsqldb.StatementExpression", "java.lang.System$Logger", "org.hsqldb.rights.Grantee", "org.joda.time.format.DateTimeFormatter", "org.joda.time.DurationField", "sun.util.locale.provider.ResourceBundleBasedAdapter", "org.jruby.ast.OpAsgnAndNode", "java.util.PrimitiveIterator", "org.jruby.ir.operands.Array", "org.jruby.exceptions.Unrescuable", "org.springframework.data.util.MethodInvocationRecorder", "java.util.function.DoubleSupplier", "org.jruby.ast.OpAsgnConstDeclNode", "java.awt.datatransfer.FlavorListener", "com.fasterxml.jackson.annotation.JsonCreator", "java.awt.MenuComponent", "java.util.concurrent.CompletableFuture$BiApply", "org.springframework.security.web.csrf.CsrfToken", "java.nio.channels.FileChannel", "java.io.ObjectStreamConstants", "java.awt.Conditional", "java.awt.peer.PopupMenuPeer", "org.jruby.org.objectweb.asm.commons.Method", "org.hsqldb.result.Result", "java.util.function.IntBinaryOperator", "com.fasterxml.jackson.annotation.JsonInclude$Include", "java.nio.file.DirectoryStream", "org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource", "javax.xml.stream.XMLEventWriter", "java.nio.channels.spi.SelectorProvider", "java.io.DataOutputStream", "org.hsqldb.TableBase", "org.apache.commons.lang3.StringEscapeUtils", "javax.swing.event.ChangeListener", "java.awt.color.ICC_ColorSpace", "org.jruby.IncludedModuleWrapper", "org.jruby.ast.IScopedNode", "com.fasterxml.jackson.databind.ser.ResolvableSerializer", "org.thymeleaf.model.IXMLDeclaration", "org.jruby.ir.instructions.BuildCompoundArrayInstr", "java.lang.Void", "java.awt.datatransfer.ClipboardOwner", "java.io.Externalizable", "com.fasterxml.jackson.databind.PropertyName", "com.thoughtworks.xstream.io.xml.AbstractXmlDriver", "org.jruby.ir.instructions.ReceiveArgBase", "javax.crypto.Mac", "sun.security.util.Debug", "org.asciidoctor.ast.DocumentHeader", "sun.java2d.cmm.Profile", "org.jruby.javasupport.util.ObjectProxyCache$Entry", "javax.swing.event.MenuKeyListener", "java.lang.invoke.VarForm", "org.hsqldb.persist.HsqlProperties", "com.fasterxml.jackson.databind.InjectableValues", "org.springframework.core.env.PropertySource", "jnr.posix.SocketMacros", "org.jruby.runtime.backtrace.TraceType$1", "java.text.SimpleDateFormat", "javax.activation.DataHandler", "org.jruby.runtime.callsite.CacheEntry", "javax.swing.InputVerifier", "org.jruby.RubyThread", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$ContentTypeOptionsConfig", "org.jruby.RubyInstanceConfig$CompileMode", "org.hsqldb.map.BitMap", "org.flywaydb.core.internal.database.base.Schema", "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$MvcMatchersAuthorizedUrl", "java.awt.EventDispatchThread", "java.util.Map$Entry", "java.util.function.IntToDoubleFunction", "org.springframework.beans.factory.config.SingletonBeanRegistry", "java.io.BufferedWriter", "org.jruby.javasupport.JavaField", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig", "org.springframework.util.MultiValueMap", "java.lang.StackWalker$Option", "org.springframework.web.filter.CorsFilter", "javax.crypto.MacSpi", "org.flywaydb.core.api.callback.Context", "org.springframework.security.web.context.SecurityContextRepository", "com.fasterxml.jackson.databind.node.BooleanNode", "java.time.temporal.TemporalAdjuster", "org.jruby.ext.ffi.NullMemoryIO", "org.hsqldb.types.BlobData", "java.lang.ProcessHandle$Info", "org.jruby.runtime.profile.MethodEnhancer", "javax.tools.JavaFileManager", "jnr.ffi.types.clock_t", "org.jsoup.parser.Token$StartTag", "org.jsoup.Connection$Request", "java.security.spec.RSAKeyGenParameterSpec", "org.springframework.data.domain.Sort$1", "javax.annotation.PreDestroy", "org.jruby.ir.instructions.RestArgMultipleAsgnInstr", "org.flywaydb.core.internal.jdbc.JdbcTemplate", "org.springframework.http.ResponseEntity$1", "java.lang.invoke.VarHandle$AccessDescriptor", "org.jruby.ir.operands.TemporaryVariableType", "org.jruby.RubyMatchData$1", "com.thoughtworks.xstream.core.Caching", "sun.util.logging.PlatformLogger$Level", "org.jruby.runtime.JavaSites$ArraySites", "java.sql.Wrapper", "java.awt.image.BufferedImage", "org.jruby.ir.instructions.boxing.BoxFloatInstr", "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$AttributeExchangeConfigurer$AttributeConfigurer", "org.hsqldb.lib.HsqlArrayList", "org.springframework.beans.factory.config.BeanPostProcessor", "org.springframework.util.PropertiesPersister", "java.awt.SecondaryLoop", "javax.xml.xpath.XPathEvaluationResult$XPathResultType", "java.lang.reflect.Type", "org.asciidoctor.extension.JavaExtensionRegistry", "java.security.cert.X509Extension", "org.jruby.util.log.Logger", "java.nio.channels.MulticastChannel", "org.jruby.ext.ffi.MemoryObject", "org.jruby.ir.instructions.RecordEndBlockInstr", "org.jruby.ir.operands.FrozenString", "com.fasterxml.jackson.databind.deser.SettableAnyProperty", "java.net.Socket", "org.springframework.web.servlet.handler.MappedInterceptor", "java.net.DatagramSocketImpl", "org.flywaydb.core.api.MigrationState", "javax.swing.Popup", "org.springframework.stereotype.Controller", "org.jruby.ast.OpElementAsgnNode", "java.nio.charset.CoderResult", "org.hsqldb.server.HsqlSocketRequestHandler", "org.xml.sax.ContentHandler", "com.fasterxml.jackson.databind.cfg.ContextAttributes", "jdk.internal.perf.PerfCounter", "org.springframework.security.config.annotation.web.configurers.LogoutConfigurer", "java.util.concurrent.locks.ReentrantLock", "org.jruby.ext.ffi.NativeType", "org.joda.time.Chronology", "org.jruby.ir.operands.TemporaryVariable", "org.jruby.ast.RegexpNode", "javax.xml.bind.Marshaller$Listener", "org.jruby.javasupport.util.ObjectProxyCache$EntryRef", "java.lang.NamedPackage", "org.jruby.ast.NilNode", "org.xml.sax.SAXParseException", "org.thymeleaf.engine.TemplateData", "javax.servlet.FilterConfig", "org.springframework.web.servlet.i18n.AbstractLocaleResolver", "java.time.Clock", "org.joda.time.DateTimeZone", "java.awt.event.InputMethodListener", "java.text.Format", "org.jruby.ir.instructions.GetEncodingInstr", "org.jsoup.Connection$Response", "java.util.Enumeration", "org.jruby.ir.operands.Rational", "org.hsqldb.result.ResultLob", "org.xml.sax.ErrorHandler", "sun.security.util.ConstraintsParameters", "org.jruby.ast.NextNode", "java.net.Proxy", "org.springframework.web.filter.GenericFilterBean", "java.awt.peer.ButtonPeer", "org.springframework.web.servlet.view.ContentNegotiatingViewResolver", "java.util.logging.LogManager$LogNode", "jnr.posix.LibC$LibCSignalHandler", "java.awt.dnd.DragSourceDropEvent", "com.fasterxml.jackson.databind.ObjectWriter", "javax.accessibility.AccessibleEditableText", "com.thoughtworks.xstream.converters.MarshallingContext", "java.net.DatagramSocketImplFactory", "java.lang.invoke.LambdaFormEditor$Transform", "org.jruby.compiler.JITCompiler", "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer", "org.jruby.ast.BlockArgNode", "org.springframework.data.util.MethodInvocationRecorder$RecordingMethodInterceptor", "sun.util.resources.ParallelListResourceBundle", "java.nio.channels.spi.AbstractSelectionKey", "javax.accessibility.AccessibleRelationSet", "org.springframework.http.HttpStatus$Series", "java.awt.peer.MenuComponentPeer", "org.thymeleaf.cache.ICache", "org.springframework.security.access.intercept.AfterInvocationManager", "java.util.spi.CurrencyNameProvider", "org.springframework.stereotype.Indexed", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$RedirectionEndpointConfig", "org.thymeleaf.expression.IExpressionObjects", "org.springframework.security.config.annotation.authentication.configurers.ldap.LdapAuthenticationProviderConfigurer$ContextSourceBuilder", "java.util.concurrent.CompletableFuture$MinimalStage", "org.hsqldb.lib.LongLookup", "org.joda.time.LocalDateTime", "org.hsqldb.HsqlNameManager$HsqlName", "java.util.function.IntToLongFunction", "org.springframework.security.config.annotation.web.builders.HttpSecurity$1", "java.util.concurrent.ConcurrentHashMap$KeySetView", "sun.reflect.generics.tree.ByteSignature", "javax.persistence.FetchType", "jnr.ffi.Struct$Member", "java.lang.invoke.LambdaMetafactory", "jnr.ffi.Struct$Double", "com.fasterxml.jackson.databind.deser.ValueInstantiators", "jdk.internal.reflect.MethodAccessor", "javax.servlet.AsyncEvent", "org.jsoup.nodes.LeafNode", "com.nulabinc.zxcvbn.Feedback", "javax.swing.plaf.MenuItemUI", "java.awt.PopupMenu", "java.util.EventObject", "java.awt.geom.PathIterator", "org.jruby.javasupport.proxy.JavaProxyClassFactory", "java.nio.IntBuffer", "org.springframework.security.config.annotation.SecurityConfigurer", "com.fasterxml.jackson.databind.JsonSerializable", "java.util.jar.JarFile$JarFileEntry", "java.awt.peer.RobotPeer", "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer", "java.awt.image.renderable.RenderableImage", "java.awt.event.WindowStateListener", "org.springframework.data.util.MethodInvocationRecorder$Recorded", "javax.accessibility.AccessibleValue", "org.jruby.ir.operands.ClosureLocalVariable", "org.jcodings.EncodingDB$Entry", "jnr.posix.POSIXHandler", "java.util.jar.Attributes", "com.fasterxml.jackson.core.Base64Variant", "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer$AttributeExchangeConfigurer", "org.springframework.security.crypto.password.NoOpPasswordEncoder", "jnr.ffi.annotations.Delegate", "java.util.stream.IntStream", "java.awt.Insets", "com.fasterxml.jackson.databind.ser.SerializerFactory", "org.jruby.ast.DAsgnNode", "org.hsqldb.lib.OrderedIntHashSet", "org.jruby.internal.runtime.methods.DynamicMethod$NativeCall", "org.joda.time.base.AbstractInterval", "org.springframework.security.web.authentication.AuthenticationSuccessHandler", "org.jruby.runtime.load.LoadService$RequireState", "java.util.concurrent.CompletableFuture$UniCompletion", "java.text.MessageFormat", "org.springframework.security.web.authentication.preauth.AbstractPreAuthenticatedProcessingFilter", "org.thymeleaf.model.ITemplateStart", "java.util.spi.CalendarDataProvider", "java.util.function.LongFunction", "java.time.Month", "java.lang.StackWalker$StackFrame", "org.springframework.core.convert.converter.ConverterFactory", "org.springframework.http.server.PathContainer", "org.hsqldb.Database", "org.springframework.jdbc.core.CallableStatementCreator", "java.net.ContentHandler", "org.jruby.ir.instructions.LoadLocalVarInstr", "org.springframework.web.accept.ContentNegotiationStrategy", "java.awt.event.ContainerListener", "java.nio.file.FileVisitOption", "java.util.StringJoiner", "com.fasterxml.jackson.core.PrettyPrinter", "com.fasterxml.jackson.databind.util.RawValue", "org.springframework.core.convert.support.ConfigurableConversionService", "jnr.ffi.Struct$Offset", "java.io.ObjectOutputStream$PutField", "org.springframework.http.ContentDisposition$Builder", "org.jruby.ir.instructions.ReturnOrRethrowSavedExcInstr", "org.springframework.context.support.ApplicationObjectSupport", "org.thymeleaf.engine.ProcessorTemplateHandler", "org.thymeleaf.cache.ICacheEntryValidityChecker", "java.math.BigDecimal", "java.lang.Character", "io.jsonwebtoken.JwtBuilder", "java.util.spi.LocaleNameProvider", "com.fasterxml.jackson.databind.jsontype.NamedType", "org.joda.time.DateTimeFieldType", "org.springframework.data.domain.Sort", "java.lang.invoke.MethodHandles$Lookup", "org.jruby.RubyRandom$RandomType", "org.hsqldb.types.ClobDataID", "com.fasterxml.jackson.databind.BeanProperty", "org.springframework.http.ResponseCookie$1", "org.jruby.ir.instructions.SaveBindingVisibilityInstr", "java.nio.file.attribute.FileAttribute", "com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring", "sun.reflect.generics.factory.GenericsFactory", "java.util.function.ToDoubleBiFunction", "sun.invoke.util.Wrapper", "javax.activation.CommandInfo", "com.thoughtworks.xstream.converters.ConverterMatcher", "java.awt.desktop.AppEvent", "java.lang.invoke.ClassSpecializer", "org.jruby.ast.ArrayNode", "java.text.spi.BreakIteratorProvider", "org.jruby.ir.instructions.BuildRangeInstr", "org.jcodings.util.Hash$HashEntry", "java.util.regex.Pattern$CharProperty", "com.fasterxml.jackson.core.format.DataFormatMatcher", "org.jruby.ir.instructions.BFalseInstr", "org.springframework.jdbc.core.PreparedStatementCreator", "java.util.HashMap$TreeNode", "jdk.internal.org.objectweb.asm.ByteVector", "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder", "java.awt.AWTKeyStroke", "com.fasterxml.jackson.core.JsonEncoding", "org.jruby.ast.CallNode", "org.springframework.boot.autoconfigure.condition.ConditionalOnProperty", "org.springframework.security.config.annotation.web.configurers.oauth2.client.OAuth2LoginConfigurer$TokenEndpointConfig", "javax.swing.ActionMap", "javax.xml.bind.JAXBElement", "org.springframework.jdbc.datasource.init.DataSourceInitializer", "org.springframework.web.servlet.support.RequestDataValueProcessor", "org.flywaydb.core.api.MigrationType", "org.springframework.security.web.firewall.HttpFirewall", "java.io.FileFilter", "org.jruby.runtime.JavaSites$BignumSites", "org.springframework.beans.factory.HierarchicalBeanFactory", "org.jruby.ast.BlockNode", "org.jruby.ext.ffi.FFI", "jnr.posix.NativeGroup", "com.fasterxml.jackson.core.JsonParser$NumberType", "org.jruby.ir.instructions.BranchInstr", "java.net.SocketAddress", "sun.util.calendar.CalendarDate", "java.beans.ConstructorProperties", "javax.xml.stream.util.XMLEventAllocator", "org.thymeleaf.templateresolver.TemplateResolution", "org.jruby.ir.instructions.ExceptionRegionStartMarkerInstr", "org.jruby.org.objectweb.asm.ClassWriter", "java.awt.JobAttributes", "org.jruby.ir.instructions.PrepareBlockArgsInstr", "java.time.LocalTime", "org.jruby.dirgra.DirectedGraph", "com.fasterxml.jackson.core.type.TypeReference", "org.jruby.org.objectweb.asm.Handle", "org.springframework.beans.PropertyEditorRegistrar", "javax.swing.JMenu$WinListener", "java.util.regex.PatternSyntaxException", "java.awt.FocusTraversalPolicy", "org.jruby.ir.instructions.PutFieldInstr", "org.jruby.ir.instructions.BEQInstr", "org.springframework.security.config.annotation.web.configurers.oauth2.server.resource.OAuth2ResourceServerConfigurer$JwtConfigurer", "java.net.InetSocketAddress", "jnr.posix.FileStat", "org.joda.time.tz.Provider", "sun.java2d.StateTrackable$State", "org.springframework.boot.web.servlet.support.SpringBootServletInitializer", "org.joda.time.DurationFieldType", "sun.reflect.generics.tree.FloatSignature", "java.lang.invoke.VarHandle$AccessMode", "org.thymeleaf.context.IEngineContext", "com.fasterxml.jackson.databind.deser.DataFormatReaders$Match", "org.springframework.security.core.Authentication", "org.jruby.javasupport.JavaSupport", "java.awt.image.DataBuffer", "org.springframework.security.config.annotation.web.configurers.RequestCacheConfigurer", "org.springframework.security.config.annotation.web.configurers.openid.OpenIDLoginConfigurer", "java.net.ProtocolFamily", "java.beans.Transient", "java.security.CodeSigner", "javax.activation.CommandMap", "org.springframework.core.io.AbstractFileResolvingResource", "org.springframework.security.web.header.writers.frameoptions.XFrameOptionsHeaderWriter$XFrameOptionsMode", "org.jsoup.Connection", "com.fasterxml.jackson.databind.introspect.AnnotatedField", "java.lang.module.ModuleDescriptor$Requires", "java.awt.dnd.DragGestureListener", "org.thymeleaf.engine.TextElementName", "org.jruby.javasupport.JavaConstructor", "org.springframework.web.bind.annotation.ResponseBody", "java.security.PermissionCollection", "org.springframework.data.domain.Sort$Order", "java.util.stream.LongStream$Builder", "org.springframework.stereotype.Component", "javax.servlet.ReadListener", "com.nulabinc.zxcvbn.Strength", "java.util.stream.BaseStream", "sun.awt.datatransfer.ToolkitThreadBlockedHandler", "org.jruby.RubyThreadGroup$1", "org.jruby.runtime.JavaSites$HashSites", "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration", "jnr.ffi.types.off_t", "java.lang.ThreadGroup", "jdk.internal.reflect.ConstantPool", "java.time.temporal.ValueRange", "com.fasterxml.jackson.databind.jsonschema.JsonSchema", "java.awt.event.MouseWheelEvent", "org.slf4j.event.Level", "javax.tools.DocumentationTool", "org.jruby.runtime.JavaSites$IOSites", "org.hsqldb.lib.HsqlList", "java.awt.GraphicsConfiguration", "java.util.logging.Filter", "org.jruby.ir.instructions.ExceptionRegionEndMarkerInstr", "org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer", "org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl", "java.lang.invoke.LambdaForm$BasicType", "org.jruby.RubySymbol$SymbolTable$SymbolEntry", "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration", "org.jruby.ir.listeners.IRScopeListener", "java.util.function.ObjDoubleConsumer", "com.fasterxml.jackson.databind.node.ValueNode", "org.thymeleaf.model.ICloseElementTag", "java.lang.StackWalker$ExtendedOption", "java.awt.desktop.FilesEvent", "java.util.Spliterator$OfInt", "org.springframework.web.context.request.WebRequestInterceptor", "jnr.ffi.Pointer", "java.lang.invoke.CallSite", "org.thymeleaf.templatemode.TemplateMode", "org.springframework.security.web.FilterInvocation", "java.sql.Ref", "org.jruby.org.objectweb.asm.AnnotationVisitor", "org.springframework.jdbc.core.ConnectionCallback", "sun.reflect.generics.tree.Tree", "org.springframework.http.RequestEntity$HeadersBuilder", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper", "com.fasterxml.jackson.core.JsonLocation", "org.springframework.security.config.annotation.web.AbstractRequestMatcherRegistry", "org.jruby.ast.SelfNode", "org.jruby.ast.SuperNode", "org.springframework.http.client.ClientHttpRequestFactory", "org.jruby.ir.instructions.BuildDynRegExpInstr", "org.springframework.http.server.RequestPath", "javax.servlet.AsyncContext", "org.jruby.ast.BinaryOperatorNode", "java.util.PrimitiveIterator$OfLong", "org.springframework.beans.factory.config.ConstructorArgumentValues$ValueHolder", "java.time.temporal.TemporalAmount", "java.awt.peer.CheckboxPeer", "org.jruby.ir.instructions.RestoreBindingVisibilityInstr", "org.springframework.context.MessageSource", "java.util.function.IntFunction", "org.springframework.beans.MutablePropertyValues", "org.springframework.data.domain.ExampleMatcher", "org.jruby.ast.NewlineNode", "org.jruby.ir.instructions.ReceiveRestArgInstr", "org.springframework.expression.ExpressionParser", "javax.validation.Constraint", "org.jruby.ext.ffi.Type", "java.awt.GraphicsConfigTemplate", "org.asciidoctor.ast.DocumentRuby", "org.flywaydb.core.internal.license.Edition", "org.springframework.jdbc.core.ResultSetExtractor", "org.hsqldb.lib.OrderedHashSet", "org.springframework.context.annotation.Primary", "org.jruby.RubyEncoding", "org.jruby.ast.FCallNode", "org.springframework.web.context.request.async.DeferredResult$DeferredResultHandler", "com.fasterxml.jackson.databind.DeserializationFeature", "javax.swing.event.MenuDragMouseEvent", "javax.servlet.AsyncListener", "org.springframework.web.util.UriComponentsBuilder$EncodingHint", "org.springframework.security.config.annotation.web.configurers.AnonymousConfigurer", "org.jruby.util.ClassDefiningClassLoader", "com.fasterxml.jackson.databind.util.LRUMap", "com.fasterxml.jackson.databind.JsonDeserializer", "org.jruby.ir.operands.UnboxedBoolean", "org.jruby.ir.operands.TemporaryFixnumVariable", "org.springframework.core.io.ResourceLoader", "java.util.TimeZone", "java.util.Collection", "javax.servlet.MultipartConfigElement", "java.util.function.BinaryOperator", "org.jruby.runtime.load.Library", "java.util.Queue", "org.jruby.compiler.Compilable", "java.time.temporal.Temporal", "java.util.concurrent.AbstractExecutorService", "org.jruby.ast.Colon2Node", "org.thymeleaf.model.IModelFactory", "javax.swing.SwingContainer", "org.w3c.dom.Attr", "org.springframework.security.config.annotation.web.configurers.HeadersConfigurer", "org.springframework.context.support.ReloadableResourceBundleMessageSource", "javax.servlet.ServletOutputStream", "org.jruby.management.ConfigMBean", "java.util.LinkedList", "javax.tools.JavaFileObject$Kind", "org.springframework.security.core.authority.mapping.MappableAttributesRetriever", "com.fasterxml.jackson.databind.jsontype.TypeIdResolver", "javax.xml.bind.Unmarshaller", "org.hsqldb.Constraint", "java.nio.channels.ReadableByteChannel", "org.flywaydb.core.internal.database.base.SchemaObject", "org.springframework.web.servlet.handler.MatchableHandlerMapping", "com.thoughtworks.xstream.MarshallingStrategy", "org.springframework.security.web.authentication.preauth.x509.X509PrincipalExtractor", "java.io.FileInputStream", "jnr.ffi.Struct$String", "java.sql.Date", "org.thymeleaf.spring5.ISpringTemplateEngine", "javax.xml.xpath.XPathFactory", "java.util.AbstractMap", "org.springframework.security.crypto.password.PasswordEncoder", "java.awt.PageAttributes$ColorType", "javax.xml.stream.Location", "org.hsqldb.TriggerDef", "org.springframework.security.config.annotation.web.configurers.CorsConfigurer", "java.sql.Blob", "org.jruby.RubyEncoding$UTF8Coder", "org.springframework.context.ApplicationContextInitializer", "org.jruby.ir.instructions.UndefMethodInstr", "org.springframework.security.web.authentication.WebAuthenticationDetails", "sun.util.locale.provider.LocaleProviderAdapter", "jdk.internal.org.objectweb.asm.Handle", "org.springframework.security.web.header.writers.ContentSecurityPolicyHeaderWriter", "com.nulabinc.zxcvbn.matchers.Match", "java.net.InetAddress", "org.jruby.ir.instructions.SetCapturedVarInstr", "java.awt.desktop.OpenFilesEvent", "org.jruby.runtime.JavaSites$NumericSites", "java.awt.dnd.DropTargetDropEvent", "java.awt.font.LineMetrics", "org.springframework.web.servlet.resource.ResourceTransformer", "java.io.FilterOutputStream", "java.awt.MenuBar", "org.hsqldb.lib.InputStreamInterface", "javax.net.ssl.SSLSocketFactory", "org.thymeleaf.engine.ElementDefinition", "java.beans.PropertyDescriptor", "org.springframework.web.servlet.view.AbstractCachingViewResolver", "org.jruby.common.IRubyWarnings", "org.flywaydb.core.internal.jdbc.DatabaseType", "org.jruby.ast.IfNode", "java.lang.Double", "java.lang.reflect.WildcardType", "org.jsoup.parser.ParseErrorList", "java.lang.ref.ReferenceQueue", "org.thymeleaf.extras.springsecurity5.dialect.SpringSecurityDialect", "org.springframework.cache.Cache$ValueWrapper", "java.awt.BufferCapabilities", "com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNullFormatVisitor", "com.fasterxml.jackson.databind.node.JsonNodeType", "java.io.DataOutput", "org.springframework.security.web.authentication.AnonymousAuthenticationFilter", "org.flywaydb.core.api.executor.MigrationExecutor", "com.fasterxml.jackson.databind.deser.NullValueProvider", "java.lang.invoke.BoundMethodHandle$Specializer", "java.util.regex.Pattern$TreeInfo", "java.awt.PageAttributes$MediaType", "org.joda.time.MutableDateTime", "java.awt.geom.Path2D", "jdk.internal.org.objectweb.asm.Item", "jnr.ffi.Struct$Signed8", "org.jruby.ast.FlipNode", "java.beans.PropertyChangeSupport", "jnr.ffi.annotations.Transient", "org.jruby.ast.ClassVarDeclNode", "javax.validation.constraints.Size", "java.util.jar.JarFile", "org.springframework.ui.ModelMap", "com.fasterxml.jackson.annotation.JsonFormat$Value", "org.thymeleaf.model.AttributeValueQuotes", "org.w3c.dom.EntityReference", "org.springframework.security.web.util.matcher.RequestMatcher$MatchResult", "org.springframework.security.access.ConfigAttribute", "java.awt.datatransfer.FlavorEvent", "java.util.Properties$LineReader", "org.jruby.ast.GlobalAsgnNode", "org.joni.constants.SyntaxProperties", "javax.swing.Icon", "org.springframework.security.web.firewall.FirewalledRequest", "com.thoughtworks.xstream.core.ClassLoaderReference", "java.util.Base64", "java.lang.invoke.StringConcatFactory", "com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver", "java.io.ObjectInputFilter", "org.hsqldb.ExpressionOp", "sun.java2d.cmm.ProfileDeferralInfo", "sun.util.spi.CalendarProvider", "org.jruby.util.RubyTimeOutputFormatter", "org.springframework.web.bind.annotation.RequestMapping", "org.springframework.context.annotation.DependsOn", "org.hsqldb.server.Server", "org.jruby.RubyTime", "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer", "java.lang.invoke.SerializedLambda", "com.thoughtworks.xstream.converters.reflection.ReflectionProvider", "com.nulabinc.zxcvbn.Zxcvbn", "sun.reflect.generics.tree.ReturnType", "jnr.ffi.annotations.IgnoreError", "org.jruby.runtime.ThreadContext$RecursiveFunctionEx", "java.awt.event.AdjustmentEvent", "org.jruby.compiler.impl.SkinnyMethodAdapter", "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping", "org.jruby.RubyRational", "sun.font.CreatedFontTracker", "org.jruby.RubyClass", "org.springframework.core.io.AbstractResource", "org.joda.time.format.DateTimeParserBucket$SavedField", "sun.reflect.generics.tree.DoubleSignature", "org.jruby.ir.instructions.UnresolvedSuperInstr", "com.fasterxml.jackson.databind.ser.PropertyFilter", "org.springframework.beans.ConfigurablePropertyAccessor", "org.springframework.web.bind.annotation.Mapping" ],
        "phantomClasses" : [ "org.springframework.security.ldap.authentication.LdapAuthenticationProvider", "groovy.lang.Closure", "org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter", "reactor.core.publisher.Flux", "com.martiansoftware.nailgun.NailStats", "org.springframework.security.oauth2.server.resource.web.BearerTokenResolver", "org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestResolver", "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistration", "com.martiansoftware.nailgun.NGInputStream", "com.martiansoftware.nailgun.NGSession", "com.martiansoftware.nailgun.AliasManager", "javax.annotation.Nonnull", "org.joda.convert.ToString", "org.joda.convert.FromString", "org.springframework.security.oauth2.server.resource.introspection.OpaqueTokenIntrospector", "org.springframework.security.openid.OpenIDAttribute", "org.springframework.security.oauth2.client.userinfo.OAuth2UserService", "org.springframework.security.oauth2.jwt.JwtDecoder", "com.martiansoftware.nailgun.builtins.NGClasspath", "org.springframework.security.ldap.search.LdapUserSearch", "org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator", "BOOT-INF.classes.org.owasp.webgoat.StartWebGoat", "org.springframework.security.openid.AxFetchListFactory", "org.springframework.security.openid.OpenIDConsumer", "org.springframework.ldap.core.support.BaseLdapPathContextSource", "org.springframework.security.ldap.DefaultSpringSecurityContextSource", "org.springframework.security.ldap.authentication.BindAuthenticator", "com.martiansoftware.nailgun.NGServer$NGServerShutdowner", "com.martiansoftware.nailgun.NGSessionPool", "org.springframework.security.saml2.provider.service.registration.RelyingPartyRegistrationRepository", "org.springframework.security.oauth2.client.registration.ClientRegistration", "META-INF.versions.9.module-info", "org.springframework.security.ldap.userdetails.LdapAuthoritiesPopulator", "org.springframework.security.oauth2.client.registration.ClientRegistrationRepository", "javax.annotation.meta.TypeQualifierDefault", "org.reactivestreams.Publisher", "org.springframework.security.ldap.userdetails.UserDetailsContextMapper", "org.springframework.security.oauth2.client.web.OAuth2AuthorizedClientRepository", "org.springframework.security.oauth2.client.web.AuthorizationRequestRepository", "org.springframework.security.oauth2.client.endpoint.OAuth2AccessTokenResponseClient", "org.springframework.security.ldap.authentication.LdapAuthenticator", "org.springframework.security.oauth2.client.OAuth2AuthorizedClientService", "org.springframework.security.oauth2.jwt.JwtDecoderFactory", "org.springframework.security.oauth2.client.web.OAuth2AuthorizationCodeGrantFilter", "reactor.core.publisher.Mono", "com.martiansoftware.nailgun.NGConstants", "com.martiansoftware.nailgun.NGContext", "com.martiansoftware.nailgun.NGServer", "org.openid4java.consumer.ConsumerManager", "com.martiansoftware.nailgun.NGOutputStream", "BOOT-INF.classes.org.owasp.webgoat.HSQLDBDatabaseConfig" ]
      },
      "routesDiscovered" : [ {
        "routeSignature" : "org.owasp.webgoat.csrf.CSRFGetFlag.invoke(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDORViewOtherProfile.completed(java.lang.String,javax.servlet.http.HttpServletResponse)"
      }, {
        "routeSignature" : "org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFrontendValidation.completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.SimpleXXE.createNewComment(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.SimpleXXE.getWebGoatHomeDirectory()"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.SimpleXXE.getSampleDTDFile()"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadRemoveUserInput.uploadFileHandler(org.springframework.web.multipart.MultipartFile)"
      }, {
        "routeSignature" : "org.owasp.webgoat.bypass_restrictions.BypassRestrictionsFieldRestrictions.completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.Users.getUsers()"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.login(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.resetPassword(java.lang.String,org.springframework.ui.Model)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.illegalCall()"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.chrome_dev_tools.NetworkLesson.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.chrome_dev_tools.NetworkLesson.ok(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LessonProgressService.lessonOverview()"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.DOMCrossSiteScripting.completed(java.lang.Integer,java.lang.Integer,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.DOMCrossSiteScriptingVerifier.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.QuestionsAssignment.passwordReset(java.util.Map)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.Servers.sort(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.users.RegistrationController.showForm(org.owasp.webgoat.users.UserForm)"
      }, {
        "routeSignature" : "org.owasp.webgoat.users.RegistrationController.registration(org.owasp.webgoat.users.UserForm,org.springframework.validation.BindingResult,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation.attack(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadFix.uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadFix.getProfilePicture()"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge1.ImageServlet.doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge1.ImageServlet.doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.HintService.getHints()"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTSecretKeyEndpoint.getSecretToken()"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTSecretKeyEndpoint.login(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.SecurityQuestionAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.http_basics.HttpBasicsLesson.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.controller.Welcome.welcome(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingLesson1.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingLesson4.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingLesson3.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingLesson6a.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.BlindSendFileAssignment.addComment(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.http_basics.HttpBasicsQuiz.completed(java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDOREditOtherProfiile.completed(java.lang.String,org.owasp.webgoat.idor.UserProfile)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallengeLogin.login(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUpload.uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUpload.getProfilePicture()"
      }, {
        "routeSignature" : "org.owasp.webgoat.secure_password.SecurePasswordsAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.insecure_login.InsecureLoginTask.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge8.Assignment8.vote(int,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge8.Assignment8.getVotes()"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge8.Assignment8.average()"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge8.Assignment8.notUsed()"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.MissingFunctionACHiddenMenus.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.Ping.logRequest(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.html_tampering.HtmlTamperingTask.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LessonTitleService.showPlan()"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDORViewOwnProfileAltUrl.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.template.SampleAttack.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.template.SampleAttack.getItemsInBasket(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignmentForgotPassword.sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingQuiz.completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingQuiz.getResults()"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.ReportCardService.reportCard()"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.ContentTypeAssignment.createNewUser(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LessonMenuService.showLeftNav()"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.SessionService.showSession(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpSession)"
      }, {
        "routeSignature" : "org.owasp.webgoat.webwolf_introduction.MailAssignment.sendEmail(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.webwolf_introduction.MailAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.HammerHead.attack(org.springframework.security.core.Authentication,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDORDiffAttributes.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.ssrf.SSRFTask1.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.cia.CIAQuiz.completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])"
      }, {
        "routeSignature" : "org.owasp.webgoat.cia.CIAQuiz.getResults()"
      }, {
        "routeSignature" : "org.owasp.webgoat.webwolf_introduction.LandingAssignment.click(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.webwolf_introduction.LandingAssignment.openPasswordReset(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.execute(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.getProfilePicture(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.Flag.postFlag(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.SecureDefaultsAssignment.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson13.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.controller.StartLesson.start()"
      }, {
        "routeSignature" : "org.owasp.webgoat.controller.StartLesson.lessonPage(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.CrossSiteScriptingLesson5a.completed(java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.client_side_filtering.ShopEndpoint.getDiscountCode(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.client_side_filtering.ShopEndpoint.all()"
      }, {
        "routeSignature" : "org.owasp.webgoat.client_side_filtering.ClientSideFilteringFreeAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.client_side_filtering.ClientSideFilteringAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.ssrf.SSRFTask2.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LabelService.fetchLabels(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.MissingFunctionACUsers.listUsers(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.MissingFunctionACUsers.usersService(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.MissingFunctionACUsers.addUser(org.owasp.webgoat.users.WebGoatUser)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTVotesEndpoint.login(java.lang.String,javax.servlet.http.HttpServletResponse)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTVotesEndpoint.getVotes(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTVotesEndpoint.vote(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTVotesEndpoint.resetVotes(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTFinalEndpoint.encode(java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTFinalEndpoint.decode(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTFinalEndpoint.follow(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTFinalEndpoint.resetVotes(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDORViewOwnProfile.invoke()"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.HashingAssignment.getMd5(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.HashingAssignment.getSha256(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.HashingAssignment.completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.http_proxies.HttpBasicsInterceptRequest.completed(java.lang.Boolean,java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.stored.StoredCrossSiteScriptingVerifier.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz.completed(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[])"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionQuiz.getResults()"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.XOREncodingAssignment.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.missing_ac.MissingFunctionACYourHash.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xxe.CommentsEndpoint.retrieveComments()"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords.attack(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6b.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.client_side_filtering.Salaries.invoke()"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.CSRFConfirmFlag1.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.SimpleMailAssignment.login(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.password_reset.SimpleMailAssignment.resetPassword(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTRefreshEndpoint.follow(java.util.Map)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTRefreshEndpoint.checkout(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.jwt.JWTRefreshEndpoint.newToken(java.lang.String,java.util.Map)"
      }, {
        "routeSignature" : "org.owasp.webgoat.users.Scoreboard.getRankings()"
      }, {
        "routeSignature" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.CSRFFeedback.completed(javax.servlet.http.HttpServletRequest,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.CSRFFeedback.flag(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.auth_bypass.VerifyAccount.completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.CSRFLogin.completed(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge1.Assignment1.completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.chrome_dev_tools.NetworkDummy.completed(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge7.Assignment7.resetPassword(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge7.Assignment7.sendPasswordResetLink(java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.challenges.challenge7.Assignment7.git()"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.SigningAssignment.getPrivateKey(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.EncodingAssignment.getBasicAuth(javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.crypto.EncodingAssignment.completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.stored.StoredXssComments.retrieveComments()"
      }, {
        "routeSignature" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LabelDebugService.checkDebuggingStatus()"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LabelDebugService.setDebuggingStatus(java.lang.Boolean)"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.ForgedReviews.retrieveReviews()"
      }, {
        "routeSignature" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)"
      }, {
        "routeSignature" : "org.owasp.webgoat.idor.IDORLogin.completed(java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10a.completed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.RestartLessonService.restartLesson()"
      }, {
        "routeSignature" : "org.owasp.webgoat.service.LessonInfoService.getLessonInfo()"
      }, {
        "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlInjectionLesson10b.completed(java.lang.String)"
      } ]
    },
    "artifacts" : [ ],
    "results" : [ {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionChallenge.registerNewUser() reachable from SqlInjectionChallenge.registerNewUser()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionChallenge.java"
          },
          "region" : {
            "startLine" : 65
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionChallenge.java:57 via variable `username_reg` to SqlInjectionChallenge.java:65 via variable `checkUserQuery`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionChallenge.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PutMapping(value={\"/SqlInjectionAdvanced/challenge\"})\n@ResponseBody\npublic AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) {\n  ...\n  $stack0 = this.checkArguments(username_reg, email_reg, password_reg);    // Java line 57\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionChallenge.registerNewUser()' at 'SqlInjectionChallenge.java:57' via variable 'username_reg'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String, java.lang.String, java.lang.String)>(username_reg, email_reg, password_reg);    // Java line 57", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge: org.owasp.webgoat.assignments.AttackResult checkArguments(java.lang.String, java.lang.String, java.lang.String)>(username_reg, email_reg, password_reg);    // Java line 57", "attackResult = $stack0;    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionChallenge.registerNewUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "username_reg"
              }
            },
            "state" : {
              "username_reg" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionChallenge.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PutMapping(value={\"/SqlInjectionAdvanced/challenge\"})\n@ResponseBody\npublic AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) {\n  ...\n  $stack0 = this.dataSource;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge:javax.sql.DataSource dataSource>;    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$local5 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionChallenge.registerNewUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "username_reg"
              }
            },
            "state" : {
              "username_reg" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionChallenge.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PutMapping(value={\"/SqlInjectionAdvanced/challenge\"})\n@ResponseBody\npublic AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(username_reg) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"select userid from sql_challenge_users where userid = '\u0001'\");    // Java line 63\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionChallenge.java:63' in the method 'SqlInjectionChallenge.registerNewUser()' to variable 'checkUserQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(username_reg) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"select userid from sql_challenge_users where userid = '\u0001'\");    // Java line 63", "checkUserQuery = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionChallenge.registerNewUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "checkUserQuery"
              }
            },
            "state" : {
              "checkUserQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionChallenge.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PutMapping(value={\"/SqlInjectionAdvanced/challenge\"})\n@ResponseBody\npublic AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) {\n  ...\n  $stack0 = $local5.createStatement();    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement()>();    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement()>();    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionChallenge.registerNewUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "checkUserQuery"
              }
            },
            "state" : {
              "checkUserQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionChallenge.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PutMapping(value={\"/SqlInjectionAdvanced/challenge\"})\n@ResponseBody\npublic AttackResult registerNewUser(@RequestParam String username_reg, @RequestParam String email_reg, @RequestParam String password_reg) {\n  ...\n  $stack0 = $stack0.executeQuery(checkUserQuery);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionChallenge.java:65' in the method 'SqlInjectionChallenge.registerNewUser()' via variable 'checkUserQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $stack0.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(checkUserQuery);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionChallenge.registerNewUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "checkUserQuery"
              }
            },
            "state" : {
              "checkUserQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionChallenge.registerNewUser(java.lang.String,java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "taint-to-static",
      "level" : "error",
      "message" : {
        "text" : "taint-to-static in ResetLinkAssignment.changePassword() reachable from ResetLinkAssignment.changePassword()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ResetLinkAssignment.java"
          },
          "region" : {
            "startLine" : 115
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ResetLinkAssignment.java:102 via variable `form` to ResetLinkAssignment.java:115 via variable `org.owasp.webgoat.password_reset.ResetLinkAssignment.usersToTomPassword`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 102,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack0 = new ModelAndView();    // Java line 102\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new org.springframework.web.servlet.ModelAndView;    // Java line 102", "modelAndView = $stack0;    // Java line 102" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "form"
              }
            },
            "state" : {
              "form" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 103,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack0 = form.getPassword();    // Java line 103\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ResetLinkAssignment.java:103' in the method 'ResetLinkAssignment.changePassword()' to variable 'form'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>();    // Java line 103", "$stack0 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>();    // Java line 103", "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($stack0);    // Java line 103" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "form"
              }
            },
            "state" : {
              "form" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 106,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack0 = bindingResult.hasErrors();    // Java line 106\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();    // Java line 106", "$stack0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();    // Java line 106" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "form"
              }
            },
            "state" : {
              "form" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 110,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack0 = resetLinks;    // Java line 110\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ResetLinkAssignment.java:110' in the method 'ResetLinkAssignment.changePassword()' to variable 'form'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.password_reset.ResetLinkAssignment:java.util.List resetLinks>;    // Java line 110", "$stack1 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>();    // Java line 110", "$stack1 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>();    // Java line 110", "$stack0 = interfaceinvoke $stack0.<java.util.List: boolean contains(java.lang.Object)>($stack1);    // Java line 110", "$stack0 = interfaceinvoke $stack0.<java.util.List: boolean contains(java.lang.Object)>($stack1);    // Java line 110" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "form"
              }
            },
            "state" : {
              "form" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 114,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack1 = form.getResetLink();    // Java line 114\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>();    // Java line 114", "$stack1 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>();    // Java line 114" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "this"
              }
            },
            "state" : {
              "this" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "PasswordChangeForm.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 20,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public String getResetLink() {\n  ...\n  $stack0 = this.resetLink;    // Java line 20\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'PasswordChangeForm.java:20' in the method 'PasswordChangeForm.getResetLink()' to variable '$stack0'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm:java.lang.String resetLink>;    // Java line 20", "return $stack0;    // Java line 20" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "PasswordChangeForm.getResetLink()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm.getResetLink()"
              } ],
              "message" : {
                "text" : "$stack0"
              }
            },
            "state" : {
              "$stack0" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 114,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack1 = form.getResetLink();    // Java line 114\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ResetLinkAssignment.java:114' in the method 'ResetLinkAssignment.changePassword()' to variable 'form'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getResetLink()>();    // Java line 114", "$stack0 = virtualinvoke this.<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>($stack1);    // Java line 114", "$stack0 = virtualinvoke this.<org.owasp.webgoat.password_reset.ResetLinkAssignment: boolean checkIfLinkIsFromTom(java.lang.String)>($stack1);    // Java line 114" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "form"
              }
            },
            "state" : {
              "form" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 115,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack0 = usersToTomPassword;    // Java line 115\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ResetLinkAssignment.java:115' in the method 'ResetLinkAssignment.changePassword()' to variable 'this'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.password_reset.ResetLinkAssignment:java.util.Map usersToTomPassword>;    // Java line 115", "$stack1 = virtualinvoke this.<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.session.WebSession getWebSession()>();    // Java line 115", "$stack1 = virtualinvoke this.<org.owasp.webgoat.password_reset.ResetLinkAssignment: org.owasp.webgoat.session.WebSession getWebSession()>();    // Java line 115", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 115", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 115", "$stack2 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>();    // Java line 115", "$stack2 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>();    // Java line 115" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "this"
              }
            },
            "state" : {
              "this" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "PasswordChangeForm.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 19,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public String getPassword() {\n  ...\n  $stack0 = this.password;    // Java line 19\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'PasswordChangeForm.java:19' in the method 'PasswordChangeForm.getPassword()' to variable '$stack0'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm:java.lang.String password>;    // Java line 19", "return $stack0;    // Java line 19" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "PasswordChangeForm.getPassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm.getPassword()"
              } ],
              "message" : {
                "text" : "$stack0"
              }
            },
            "state" : {
              "$stack0" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ResetLinkAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 115,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PasswordReset/reset/change-password\"})\npublic ModelAndView changePassword(@ModelAttribute(value=\"form\") PasswordChangeForm form, BindingResult bindingResult) {\n  ...\n  $stack2 = form.getPassword();    // Java line 115\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack2 = virtualinvoke form.<org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm: java.lang.String getPassword()>();    // Java line 115", "    // Java line 115" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ResetLinkAssignment.changePassword()",
                "fullyQualifiedName" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm, org.springframework.validation.BindingResult)"
              } ],
              "message" : {
                "text" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.usersToTomPassword"
              }
            },
            "state" : {
              "org.owasp.webgoat.password_reset.ResetLinkAssignment.usersToTomPassword" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.password_reset.ResetLinkAssignment.changePassword(org.owasp.webgoat.password_reset.resetlink.PasswordChangeForm,org.springframework.validation.BindingResult)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson5a.injectableQuery() reachable from SqlInjectionLesson5a.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson5a.java"
          },
          "region" : {
            "startLine" : 62
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson5a.java:54 via variable `accountName` to SqlInjectionLesson5a.java:62 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/assignment5a\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String, String)>(account, operator, injection) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"\u0001 \u0001 \u0001\");    // Java line 54\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String, java.lang.String)>(account, operator, injection) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"\u0001 \u0001 \u0001\");    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 58", "query = \"\";    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a:javax.sql.DataSource dataSource>;    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$local3 = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson5a.java:60' in the method 'SqlInjectionLesson5a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 61", "$stack2 = 1008;    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$local4 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local4.executeQuery(query);    // Java line 62\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson5a.java:62' in the method 'SqlInjectionLesson5a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String,java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson5a.injectableQuery() reachable from SqlInjectionLesson5a.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson5a.java"
          },
          "region" : {
            "startLine" : 62
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson5a.java:54 via variable `accountName` to SqlInjectionLesson5a.java:62 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/assignment5a\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String, String)>(account, operator, injection) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"\u0001 \u0001 \u0001\");    // Java line 54\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String, java.lang.String)>(account, operator, injection) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"\u0001 \u0001 \u0001\");    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 58", "query = \"\";    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a:javax.sql.DataSource dataSource>;    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$local3 = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson5a.java:60' in the method 'SqlInjectionLesson5a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 61", "$stack2 = 1008;    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$local4 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local4.executeQuery(query);    // Java line 62\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson5a.java:62' in the method 'SqlInjectionLesson5a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String,java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson5a.injectableQuery() reachable from SqlInjectionLesson5a.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson5a.java"
          },
          "region" : {
            "startLine" : 62
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson5a.java:54 via variable `accountName` to SqlInjectionLesson5a.java:62 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/assignment5a\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String account, @RequestParam String operator, @RequestParam String injection) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String, String)>(account, operator, injection) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"\u0001 \u0001 \u0001\");    // Java line 54\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String, java.lang.String)>(account, operator, injection) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"\u0001 \u0001 \u0001\");    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>($stack1);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 58", "query = \"\";    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a:javax.sql.DataSource dataSource>;    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 59", "$local3 = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson5a.java:60' in the method 'SqlInjectionLesson5a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE first_name = 'John' and last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 61", "$stack2 = 1008;    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$local4 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local4.executeQuery(query);    // Java line 62\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson5a.java:62' in the method 'SqlInjectionLesson5a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local4.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5a.completed(java.lang.String,java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson5b.injectableQuery() reachable from SqlInjectionLesson5b.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson5b.java"
          },
          "region" : {
            "startLine" : 58
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson5b.java:52 via variable `accountName` to SqlInjectionLesson5b.java:58 via variable `queryString`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5b.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/assignment5b\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String userid, @RequestParam String login_count, HttpServletRequest request) {\n  ...\n  $stack0 = this.injectableQuery(login_count, userid);    // Java line 52\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String, java.lang.String)>(login_count, userid);    // Java line 52", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String, java.lang.String)>(login_count, userid);    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5b.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.completed(java.lang.String, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5b.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String login_count, String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * From user_data WHERE Login_Count = ? and userid= \u0001\");    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson5b.java:56' in the method 'SqlInjectionLesson5b.injectableQuery()' to variable 'queryString'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * From user_data WHERE Login_Count = ? and userid= \u0001\");    // Java line 56", "queryString = $stack0;    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5b.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "queryString"
              }
            },
            "state" : {
              "queryString" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5b.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String login_count, String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b:javax.sql.DataSource dataSource>;    // Java line 57", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 57", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 57", "$local4 = $stack0;    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5b.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "queryString"
              }
            },
            "state" : {
              "queryString" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson5b.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String login_count, String accountName) {\n  ...\n  $stack2 = 1004;    // Java line 58\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson5b.java:58' in the method 'SqlInjectionLesson5b.injectableQuery()' via variable 'queryString'"
                  },
                  "properties" : {
                    "ir" : [ "$stack2 = 1004;    // Java line 58", "$stack3 = 1007;    // Java line 58", "$stack0 = interfaceinvoke $local4.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String, int, int)>(queryString, $stack2, $stack3);    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson5b.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.injectableQuery(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "queryString"
              }
            },
            "state" : {
              "queryString" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson5b.completed(java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in Servers.sort() reachable from Servers.sort()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Servers.java"
          },
          "region" : {
            "startLine" : 73
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from Servers.java:70 via variable `column` to Servers.java:73 via variable `$stack1`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Servers.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 70,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@GetMapping(produces={\"application/json\"})\n@ResponseBody\npublic List sort(@RequestParam String column) {\n  ...\n  $stack0 = new ArrayList();    // Java line 70\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.util.ArrayList;    // Java line 70", "servers = $stack0;    // Java line 70" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Servers.sort()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.Servers.sort(java.lang.String)"
              } ],
              "message" : {
                "text" : "column"
              }
            },
            "state" : {
              "column" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Servers.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 72,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@GetMapping(produces={\"application/json\"})\n@ResponseBody\npublic List sort(@RequestParam String column) {\n  ...\n  $stack0 = this.dataSource;    // Java line 72\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.mitigation.Servers:javax.sql.DataSource dataSource>;    // Java line 72", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 72", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 72", "connection = $stack0;    // Java line 72" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Servers.sort()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.Servers.sort(java.lang.String)"
              } ],
              "message" : {
                "text" : "column"
              }
            },
            "state" : {
              "column" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Servers.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 73,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@GetMapping(produces={\"application/json\"})\n@ResponseBody\npublic List sort(@RequestParam String column) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(column) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \u0001\");    // Java line 73\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'Servers.java:73' in the method 'Servers.sort()' via variable '$stack1'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(column) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"select id, hostname, ip, mac, status, description from servers  where status <> 'out of order' order by \u0001\");    // Java line 73", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($stack1);    // Java line 73" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Servers.sort()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.Servers.sort(java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack1"
              }
            },
            "state" : {
              "$stack1" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.Servers.sort(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson6a.injectableQuery() reachable from SqlOnlyInputValidation.attack()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson6a.java"
          },
          "region" : {
            "startLine" : 67
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlOnlyInputValidation.java:49 via variable `userId` to SqlInjectionLesson6a.java:67 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlOnlyInputValidation.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 49,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlOnlyInputValidation/attack\"})\n@ResponseBody\npublic AttackResult attack(@RequestParam(value=\"userid_sql_only_input_validation\") String userId) {\n  ...\n  $stack1 = \" \";    // Java line 49\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlOnlyInputValidation.attack()' at 'SqlOnlyInputValidation.java:49' via variable 'userId'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \" \";    // Java line 49", "$stack0 = virtualinvoke userId.<java.lang.String: boolean contains(java.lang.CharSequence)>($stack1);    // Java line 49", "$stack0 = virtualinvoke userId.<java.lang.String: boolean contains(java.lang.CharSequence)>($stack1);    // Java line 49" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlOnlyInputValidation.attack()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation.attack(java.lang.String)"
              } ],
              "message" : {
                "text" : "userId"
              }
            },
            "state" : {
              "userId" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlOnlyInputValidation.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlOnlyInputValidation/attack\"})\n@ResponseBody\npublic AttackResult attack(@RequestParam(value=\"userid_sql_only_input_validation\") String userId) {\n  ...\n  $stack0 = this.lesson6a;    // Java line 52\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation:org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a lesson6a>;    // Java line 52", "$stack0 = virtualinvoke $stack0.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userId);    // Java line 52", "$stack0 = virtualinvoke $stack0.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userId);    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlOnlyInputValidation.attack()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation.attack(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 57", "query = \"\";    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a:javax.sql.DataSource dataSource>;    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$local3 = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = 1;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = 1;    // Java line 59", "usedUnion = 1;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson6a.java:60' in the method 'SqlInjectionLesson6a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 65", "$stack2 = 1007;    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$local5 = $stack0;    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 67,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local5.executeQuery(query);    // Java line 67\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson6a.java:67' in the method 'SqlInjectionLesson6a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local5.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 67" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidation.attack(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "path-traversal",
      "level" : "error",
      "message" : {
        "text" : "path-traversal in ProfileUploadBase.execute() reachable from ProfileUploadFix.uploadFileHandler()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ProfileUploadBase.java"
          },
          "region" : {
            "startLine" : 41
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ProfileUploadFix.java:27 via variable `fullName` to ProfileUploadBase.java:41 via variable `fullName`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadFix.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 27,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PathTraversal/profile-upload-fix\"}, consumes={\"*/*\"}, produces={\"application/json\"})\n@ResponseBody\npublic AttackResult uploadFileHandler(@RequestParam(value=\"uploadedFileFix\") MultipartFile file, @RequestParam(value=\"fullNameFix\", required=false) String fullName) {\n  ...\n  $stack0 = this;    // Java line 27\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'ProfileUploadFix.uploadFileHandler()' at 'ProfileUploadFix.java:27' via variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this;    // Java line 27", "$stack1 = file;    // Java line 27", "$stack3 = \"../\";    // Java line 27", "$stack4 = \"\";    // Java line 27", "$stack2 = virtualinvoke fullName.<java.lang.String: java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)>($stack3, $stack4);    // Java line 27", "$stack0 = specialinvoke $stack0.<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile, java.lang.String)>($stack1, $stack2);    // Java line 27" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadFix.uploadFileHandler()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadFix.uploadFileHandler(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 27,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = file.isEmpty();    // Java line 27\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke file.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();    // Java line 27", "$stack0 = interfaceinvoke file.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();    // Java line 27" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 30,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = StringUtils.isEmpty(fullName);    // Java line 30\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ProfileUploadBase.java:30' in the method 'ProfileUploadBase.execute()' to variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>(fullName);    // Java line 30" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 34,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = new File();    // Java line 34\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.File;    // Java line 34", "$stack2 = this.<org.owasp.webgoat.path_traversal.ProfileUploadBase:java.lang.String webGoatHomeDirectory>;    // Java line 34", "$stack3 = this.<org.owasp.webgoat.path_traversal.ProfileUploadBase:org.owasp.webgoat.session.WebSession webSession>;    // Java line 34", "$stack3 = virtualinvoke $stack3.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 34", "$stack3 = virtualinvoke $stack3.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 34", "$stack3 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>($stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"/PathTraversal/\u0001\");    // Java line 34", "specialinvoke $stack0.<java.io.File: void <init>(java.lang.String, java.lang.String)>($stack2, $stack3);    // Java line 34", "uploadDirectory = $stack0;    // Java line 34" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 35,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = $stack0.exists();    // Java line 35\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke $stack0.<java.io.File: boolean exists()>();    // Java line 35", "$stack0 = virtualinvoke $stack0.<java.io.File: boolean exists()>();    // Java line 35" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 40,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  uploadDirectory.mkdirs();    // Java line 40\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke uploadDirectory.<java.io.File: boolean mkdirs()>();    // Java line 40", "virtualinvoke uploadDirectory.<java.io.File: boolean mkdirs()>();    // Java line 40" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 41,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = new File();    // Java line 41\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'ProfileUploadBase.java:41' in the method 'ProfileUploadBase.execute()' via variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.File;    // Java line 41", "specialinvoke $stack0.<java.io.File: void <init>(java.io.File, java.lang.String)>(uploadDirectory, fullName);    // Java line 41" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadFix.uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "path-traversal",
      "level" : "error",
      "message" : {
        "text" : "path-traversal in ProfileUploadBase.execute() reachable from ProfileUpload.uploadFileHandler()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ProfileUploadBase.java"
          },
          "region" : {
            "startLine" : 41
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ProfileUpload.java:32 via variable `fullName` to ProfileUploadBase.java:41 via variable `fullName`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUpload.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 32,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/PathTraversal/profile-upload\"}, consumes={\"*/*\"}, produces={\"application/json\"})\n@ResponseBody\npublic AttackResult uploadFileHandler(@RequestParam(value=\"uploadedFile\") MultipartFile file, @RequestParam(value=\"fullName\", required=false) String fullName) {\n  ...\n  $stack0 = this.execute(file, fullName);    // Java line 32\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'ProfileUpload.uploadFileHandler()' at 'ProfileUpload.java:32' via variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = specialinvoke this.<org.owasp.webgoat.path_traversal.ProfileUploadBase: org.owasp.webgoat.assignments.AttackResult execute(org.springframework.web.multipart.MultipartFile, java.lang.String)>(file, fullName);    // Java line 32" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUpload.uploadFileHandler()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUpload.uploadFileHandler(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 27,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = file.isEmpty();    // Java line 27\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke file.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();    // Java line 27", "$stack0 = interfaceinvoke file.<org.springframework.web.multipart.MultipartFile: boolean isEmpty()>();    // Java line 27" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 30,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = StringUtils.isEmpty(fullName);    // Java line 30\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ProfileUploadBase.java:30' in the method 'ProfileUploadBase.execute()' to variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean isEmpty(java.lang.Object)>(fullName);    // Java line 30" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 34,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = new File();    // Java line 34\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.File;    // Java line 34", "$stack2 = this.<org.owasp.webgoat.path_traversal.ProfileUploadBase:java.lang.String webGoatHomeDirectory>;    // Java line 34", "$stack3 = this.<org.owasp.webgoat.path_traversal.ProfileUploadBase:org.owasp.webgoat.session.WebSession webSession>;    // Java line 34", "$stack3 = virtualinvoke $stack3.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 34", "$stack3 = virtualinvoke $stack3.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 34", "$stack3 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>($stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"/PathTraversal/\u0001\");    // Java line 34", "specialinvoke $stack0.<java.io.File: void <init>(java.lang.String, java.lang.String)>($stack2, $stack3);    // Java line 34", "uploadDirectory = $stack0;    // Java line 34" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 35,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = $stack0.exists();    // Java line 35\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke $stack0.<java.io.File: boolean exists()>();    // Java line 35", "$stack0 = virtualinvoke $stack0.<java.io.File: boolean exists()>();    // Java line 35" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 40,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  uploadDirectory.mkdirs();    // Java line 40\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke uploadDirectory.<java.io.File: boolean mkdirs()>();    // Java line 40", "virtualinvoke uploadDirectory.<java.io.File: boolean mkdirs()>();    // Java line 40" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadBase.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 41,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult execute(MultipartFile file, String fullName) {\n  ...\n  $stack0 = new File();    // Java line 41\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'ProfileUploadBase.java:41' in the method 'ProfileUploadBase.execute()' via variable 'fullName'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.File;    // Java line 41", "specialinvoke $stack0.<java.io.File: void <init>(java.io.File, java.lang.String)>(uploadDirectory, fullName);    // Java line 41" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadBase.execute()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadBase.execute(org.springframework.web.multipart.MultipartFile, java.lang.String)"
              } ],
              "message" : {
                "text" : "fullName"
              }
            },
            "state" : {
              "fullName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUpload.uploadFileHandler(org.springframework.web.multipart.MultipartFile,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "untrusted-deserialization",
      "level" : "error",
      "message" : {
        "text" : "untrusted-deserialization in InsecureDeserializationTask.completed() reachable from InsecureDeserializationTask.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "InsecureDeserializationTask.java"
          },
          "region" : {
            "startLine" : 56
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from InsecureDeserializationTask.java:52 via variable `b64token` to InsecureDeserializationTask.java:56 via variable `$local8`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "InsecureDeserializationTask.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/InsecureDeserialization/task\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String token) {\n  ...\n  $stack1 = 45;    // Java line 52\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'InsecureDeserializationTask.completed()' at 'InsecureDeserializationTask.java:52' via variable 'b64token'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 45;    // Java line 52", "$stack2 = 43;    // Java line 52", "$stack0 = virtualinvoke token.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 52", "$stack1 = 95;    // Java line 52", "$stack2 = 47;    // Java line 52", "$stack0 = virtualinvoke $stack0.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 52", "b64token = $stack0;    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "InsecureDeserializationTask.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "b64token"
              }
            },
            "state" : {
              "b64token" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "InsecureDeserializationTask.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/InsecureDeserialization/task\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String token) {\n  ...\n  $stack0 = new ObjectInputStream();    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'InsecureDeserializationTask.java:54' in the method 'InsecureDeserializationTask.completed()' to variable '$local8'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.ObjectInputStream;    // Java line 54", "$stack2 = new java.io.ByteArrayInputStream;    // Java line 54", "$stack4 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();    // Java line 54", "$stack4 = virtualinvoke $stack4.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(b64token);    // Java line 54", "specialinvoke $stack2.<java.io.ByteArrayInputStream: void <init>(byte[])>($stack4);    // Java line 54", "specialinvoke $stack0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($stack2);    // Java line 54", "$local8 = $stack0;    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "InsecureDeserializationTask.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "$local8"
              }
            },
            "state" : {
              "$local8" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "InsecureDeserializationTask.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 55,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/InsecureDeserialization/task\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String token) {\n  ...\n  $stack0 = System.currentTimeMillis();    // Java line 55\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.lang.System: long currentTimeMillis()>();    // Java line 55", "before = $stack0;    // Java line 55" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "InsecureDeserializationTask.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "$local8"
              }
            },
            "state" : {
              "$local8" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "InsecureDeserializationTask.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/InsecureDeserialization/task\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String token) {\n  ...\n  $stack0 = $local8.readObject();    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'InsecureDeserializationTask.java:56' in the method 'InsecureDeserializationTask.completed()' via variable '$local8'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke $local8.<java.io.ObjectInputStream: java.lang.Object readObject()>();    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "InsecureDeserializationTask.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "$local8"
              }
            },
            "state" : {
              "$local8" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.deserialization.InsecureDeserializationTask.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "csrf-protection-disabled",
      "level" : "error",
      "message" : {
        "text" : "csrf-protection-disabled in WebSecurityConfig.configure() reachable from WebSecurityConfig.configure()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "WebSecurityConfig.java"
          },
          "region" : {
            "startLine" : 72
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Found vulnerability at WebSecurityConfig.java:72"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "WebSecurityConfig.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 72,
                  "snippet" : {
                    "rendered" : {
                      "text" : "void configure(HttpSecurity http) {\n  ...\n  $stack0.disable();    // Java line 72\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.springframework.security.config.annotation.web.configurers.CsrfConfigurer: org.springframework.security.config.annotation.web.HttpSecurityBuilder disable()>();    // Java line 72" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "WebSecurityConfig.configure()",
                "fullyQualifiedName" : "org.owasp.webgoat.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
              } ]
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
        }
      } ]
    }, {
      "ruleId" : "cache-controls-missing",
      "level" : "error",
      "message" : {
        "text" : "cache-controls-missing in WebSecurityConfig.configure() reachable from WebSecurityConfig.configure()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "WebSecurityConfig.java"
          },
          "region" : {
            "startLine" : 74
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Found vulnerability at WebSecurityConfig.java:74"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "WebSecurityConfig.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 74,
                  "snippet" : {
                    "rendered" : {
                      "text" : "void configure(HttpSecurity http) {\n  ...\n  $stack0.disable();    // Java line 74\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$CacheControlConfig: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer disable()>();    // Java line 74" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "WebSecurityConfig.configure()",
                "fullyQualifiedName" : "org.owasp.webgoat.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
              } ]
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.WebSecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson10.injectableQueryAvailability() reachable from SqlInjectionLesson10.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson10.java"
          },
          "region" : {
            "startLine" : 63
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson10.java:53 via variable `action` to SqlInjectionLesson10.java:63 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 53,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack10\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String action_string) {\n  ...\n  $stack0 = this.injectableQueryAvailability(action_string);    // Java line 53\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson10.completed()' at 'SqlInjectionLesson10.java:53' via variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>(action_string);    // Java line 53", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10: org.owasp.webgoat.assignments.AttackResult injectableQueryAvailability(java.lang.String)>(action_string);    // Java line 53" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryAvailability(String action) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 57", "output = $stack0;    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.injectableQueryAvailability()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryAvailability(String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM access_log WHERE action LIKE '%\u0001%'\");    // Java line 58\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson10.java:58' in the method 'SqlInjectionLesson10.injectableQueryAvailability()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM access_log WHERE action LIKE '%\u0001%'\");    // Java line 58", "query = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.injectableQueryAvailability()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryAvailability(String action) {\n  ...\n  $stack0 = this.dataSource;    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10:javax.sql.DataSource dataSource>;    // Java line 60", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 60", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 60", "$local4 = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.injectableQueryAvailability()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryAvailability(String action) {\n  ...\n  $stack1 = 1004;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 62", "$stack2 = 1007;    // Java line 62", "$stack0 = interfaceinvoke $local4.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 62", "$stack0 = interfaceinvoke $local4.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.injectableQueryAvailability()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson10.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryAvailability(String action) {\n  ...\n  $stack0 = $stack0.executeQuery(query);    // Java line 63\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson10.java:63' in the method 'SqlInjectionLesson10.injectableQueryAvailability()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $stack0.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson10.injectableQueryAvailability()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.injectableQueryAvailability(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson10.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "path-traversal",
      "level" : "error",
      "message" : {
        "text" : "path-traversal in ProfileUploadRetrieval.getProfilePicture() reachable from ProfileUploadRetrieval.getProfilePicture()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ProfileUploadRetrieval.java"
          },
          "region" : {
            "startLine" : 82
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ProfileUploadRetrieval.java:81 via variable `$local3` to ProfileUploadRetrieval.java:82 via variable `$stack3`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadRetrieval.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 81,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@GetMapping(value={\"/PathTraversal/random-picture\"})\n@ResponseBody\npublic ResponseEntity getProfilePicture(HttpServletRequest request) {\n  ...\n  $stack0 = request.getParameter($stack1);    // Java line 81\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'ProfileUploadRetrieval.getProfilePicture()' at 'ProfileUploadRetrieval.java:81' via variable '$local3'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>($stack1);    // Java line 81", "$local3 = $stack0;    // Java line 81" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadRetrieval.getProfilePicture()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.getProfilePicture(javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "$local3"
              }
            },
            "state" : {
              "$local3" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ProfileUploadRetrieval.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 82,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@GetMapping(value={\"/PathTraversal/random-picture\"})\n@ResponseBody\npublic ResponseEntity getProfilePicture(HttpServletRequest request) {\n  ...\n  $stack0 = new File();    // Java line 82\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'ProfileUploadRetrieval.java:82' in the method 'ProfileUploadRetrieval.getProfilePicture()' via variable '$stack3'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.io.File;    // Java line 82", "$stack1 = $stack0;    // Java line 82", "$stack2 = this.<org.owasp.webgoat.path_traversal.ProfileUploadRetrieval:java.io.File catPicturesDirectory>;    // Java line 82", "$stack3 = $local3;    // Java line 82", "$stack3 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.io.Serializable)>($stack3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"\u0001.jpg\");    // Java line 82", "specialinvoke $stack1.<java.io.File: void <init>(java.io.File, java.lang.String)>($stack2, $stack3);    // Java line 82" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ProfileUploadRetrieval.getProfilePicture()",
                "fullyQualifiedName" : "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.getProfilePicture(javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "$stack3"
              }
            },
            "state" : {
              "$stack3" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.path_traversal.ProfileUploadRetrieval.getProfilePicture(javax.servlet.http.HttpServletRequest)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson3.injectableQuery() reachable from SqlInjectionLesson3.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson3.java"
          },
          "region" : {
            "startLine" : 65
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson3.java:57 via variable `query` to SqlInjectionLesson3.java:65 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson3.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack3\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String query) {\n  ...\n  $stack0 = this.injectableQuery(query);    // Java line 57\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson3.completed()' at 'SqlInjectionLesson3.java:57' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 57", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson3.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson3.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack0 = this.dataSource;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3:javax.sql.DataSource dataSource>;    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$local2 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson3.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson3.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack1 = 1004;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 62", "$stack2 = 1007;    // Java line 62", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 62", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 62", "$local3 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson3.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson3.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack1 = 1004;    // Java line 63\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 63", "$stack2 = 1007;    // Java line 63", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "checkStatement = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson3.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson3.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $local3.executeUpdate(query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson3.java:65' in the method 'SqlInjectionLesson3.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $local3.<java.sql.Statement: int executeUpdate(java.lang.String)>(query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson3.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson3.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson2.injectableQuery() reachable from SqlInjectionLesson2.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson2.java"
          },
          "region" : {
            "startLine" : 62
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson2.java:56 via variable `query` to SqlInjectionLesson2.java:62 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack2\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String query) {\n  ...\n  $stack0 = this.injectableQuery(query);    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson2.completed()' at 'SqlInjectionLesson2.java:56' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 56", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson2.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack0 = this.dataSource;    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2:javax.sql.DataSource dataSource>;    // Java line 60", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 60", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 60", "$local2 = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson2.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack1 = 1004;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 61", "$stack2 = 1007;    // Java line 61", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson2.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack0 = $stack0.executeQuery(query);    // Java line 62\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson2.java:62' in the method 'SqlInjectionLesson2.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $stack0.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson2.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson2.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson4.injectableQuery() reachable from SqlInjectionLesson4.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson4.java"
          },
          "region" : {
            "startLine" : 59
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson4.java:53 via variable `query` to SqlInjectionLesson4.java:59 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson4.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 53,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack4\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String query) {\n  ...\n  $stack0 = this.injectableQuery(query);    // Java line 53\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson4.completed()' at 'SqlInjectionLesson4.java:53' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 53", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(query);    // Java line 53" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson4.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson4.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack0 = this.dataSource;    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4:javax.sql.DataSource dataSource>;    // Java line 57", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 57", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 57", "$local2 = $stack0;    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson4.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson4.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $stack1 = 1004;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 58", "$stack2 = 1007;    // Java line 58", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 58", "$stack0 = interfaceinvoke $local2.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 58", "$local3 = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson4.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson4.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQuery(String query) {\n  ...\n  $local3.executeUpdate(query);    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson4.java:59' in the method 'SqlInjectionLesson4.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $local3.<java.sql.Statement: int executeUpdate(java.lang.String)>(query);    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson4.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson4.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson9.injectableQueryIntegrity() reachable from SqlInjectionLesson9.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson9.java"
          },
          "region" : {
            "startLine" : 66
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson9.java:56 via variable `auth_tan` to SqlInjectionLesson9.java:66 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack9\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryIntegrity(name, auth_tan);    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson9.completed()' at 'SqlInjectionLesson9.java:56' via variable 'auth_tan'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 60", "output = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:61' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61", "query = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9:javax.sql.DataSource dataSource>;    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$local5 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack1 = 1005;    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 64", "$stack2 = 1008;    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$local6 = $stack0;    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 141,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  return;    // Java line 141\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 141" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:65' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 66,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = $local6.executeQuery(query);    // Java line 66\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson9.java:66' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local6.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 66" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson9.injectableQueryIntegrity() reachable from SqlInjectionLesson9.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson9.java"
          },
          "region" : {
            "startLine" : 66
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson9.java:56 via variable `name` to SqlInjectionLesson9.java:66 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack9\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryIntegrity(name, auth_tan);    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson9.completed()' at 'SqlInjectionLesson9.java:56' via variable 'name'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 60", "output = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:61' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61", "query = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9:javax.sql.DataSource dataSource>;    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$local5 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack1 = 1005;    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 64", "$stack2 = 1008;    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$local6 = $stack0;    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 141,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  return;    // Java line 141\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 141" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:65' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 66,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = $local6.executeQuery(query);    // Java line 66\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson9.java:66' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local6.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 66" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.log() reachable from SqlInjectionLesson9.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 137
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson9.java:56 via variable `auth_tan` to SqlInjectionLesson8.java:137 via variable `logQuery`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack9\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryIntegrity(name, auth_tan);    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson9.completed()' at 'SqlInjectionLesson9.java:56' via variable 'auth_tan'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 60", "output = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:61' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61", "query = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9:javax.sql.DataSource dataSource>;    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$local5 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack1 = 1005;    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 64", "$stack2 = 1008;    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$local6 = $stack0;    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' via variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.log() reachable from SqlInjectionLesson9.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 137
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson9.java:56 via variable `name` to SqlInjectionLesson8.java:137 via variable `logQuery`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 56,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack9\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryIntegrity(name, auth_tan);    // Java line 56\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson9.completed()' at 'SqlInjectionLesson9.java:56' via variable 'name'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9: org.owasp.webgoat.assignments.AttackResult injectableQueryIntegrity(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 56" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 60\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 60", "output = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson9.java:61' in the method 'SqlInjectionLesson9.injectableQueryIntegrity()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 61", "query = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9:javax.sql.DataSource dataSource>;    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 62", "$local5 = $stack0;    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  $stack1 = 1005;    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 64", "$stack2 = 1008;    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 64", "$local6 = $stack0;    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson9.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryIntegrity(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson9.injectableQueryIntegrity()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.injectableQueryIntegrity(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' via variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson9.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.injectableQueryConfidentiality() reachable from SqlInjectionLesson8.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 65
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson8.java:54 via variable `auth_tan` to SqlInjectionLesson8.java:65 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack8\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryConfidentiality(name, auth_tan);    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson8.completed()' at 'SqlInjectionLesson8.java:54' via variable 'auth_tan'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 58", "output = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:59' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59", "query = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8:javax.sql.DataSource dataSource>;    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$local5 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack1 = 1004;    // Java line 63\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 63", "$stack2 = 1008;    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$local6 = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 141,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  return;    // Java line 141\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 141" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:64' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = $local6.executeQuery(query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:65' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local6.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.injectableQueryConfidentiality() reachable from SqlInjectionLesson8.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 65
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson8.java:54 via variable `name` to SqlInjectionLesson8.java:65 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack8\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryConfidentiality(name, auth_tan);    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson8.completed()' at 'SqlInjectionLesson8.java:54' via variable 'name'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 58", "output = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:59' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59", "query = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8:javax.sql.DataSource dataSource>;    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$local5 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack1 = 1004;    // Java line 63\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 63", "$stack2 = 1008;    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$local6 = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 141,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  return;    // Java line 141\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 141" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:64' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = $local6.executeQuery(query);    // Java line 65\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:65' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local6.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.log() reachable from SqlInjectionLesson8.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 137
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson8.java:54 via variable `auth_tan` to SqlInjectionLesson8.java:137 via variable `logQuery`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack8\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryConfidentiality(name, auth_tan);    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson8.completed()' at 'SqlInjectionLesson8.java:54' via variable 'auth_tan'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 58", "output = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "auth_tan"
              }
            },
            "state" : {
              "auth_tan" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:59' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59", "query = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8:javax.sql.DataSource dataSource>;    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$local5 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack1 = 1004;    // Java line 63\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 63", "$stack2 = 1008;    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$local6 = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' via variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson8.log() reachable from SqlInjectionLesson8.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson8.java"
          },
          "region" : {
            "startLine" : 137
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson8.java:54 via variable `name` to SqlInjectionLesson8.java:137 via variable `logQuery`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjection/attack8\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String name, @RequestParam String auth_tan) {\n  ...\n  $stack0 = this.injectableQueryConfidentiality(name, auth_tan);    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlInjectionLesson8.completed()' at 'SqlInjectionLesson8.java:54' via variable 'name'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: org.owasp.webgoat.assignments.AttackResult injectableQueryConfidentiality(java.lang.String, java.lang.String)>(name, auth_tan);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 58", "output = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "name"
              }
            },
            "state" : {
              "name" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(name, auth_tan) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:59' in the method 'SqlInjectionLesson8.injectableQueryConfidentiality()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(name, auth_tan) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM employees WHERE last_name = '\u0001' AND auth_tan = '\u0001'\");    // Java line 59", "query = $stack0;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 61,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack0 = this.dataSource;    // Java line 61\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8:javax.sql.DataSource dataSource>;    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 61", "$local5 = $stack0;    // Java line 61" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 63,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  $stack1 = 1004;    // Java line 63\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 63", "$stack2 = 1008;    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$stack0 = interfaceinvoke $local5.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 63", "$local6 = $stack0;    // Java line 63" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 64,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult injectableQueryConfidentiality(String name, String auth_tan) {\n  ...\n  SqlInjectionLesson8.log($local5, query);    // Java line 64\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "staticinvoke <org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8: void log(java.sql.Connection, java.lang.String)>($local5, query);    // Java line 64" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.injectableQueryConfidentiality()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.injectableQueryConfidentiality(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 128,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 39;    // Java line 128\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:128' in the method 'SqlInjectionLesson8.log()' to variable 'action'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 39;    // Java line 128", "$stack2 = 34;    // Java line 128", "$stack0 = virtualinvoke action.<java.lang.String: java.lang.String replace(char, char)>($stack1, $stack2);    // Java line 128", "action = $stack0;    // Java line 128" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 129,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = Calendar.getInstance();    // Java line 129\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();    // Java line 129", "cal = $stack0;    // Java line 129" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 130,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = new SimpleDateFormat();    // Java line 130\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.text.SimpleDateFormat;    // Java line 130", "$stack2 = \"yyyy-MM-dd HH:mm:ss\";    // Java line 130" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 131,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = cal.getTime();    // Java line 131\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack1 = virtualinvoke cal.<java.util.Calendar: java.util.Date getTime()>();    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131", "$stack0 = virtualinvoke $stack0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($stack1);    // Java line 131" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "action"
              }
            },
            "state" : {
              "action" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 133,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>($stack0, action) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson8.java:133' in the method 'SqlInjectionLesson8.log()' to variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>($stack0, action) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"INSERT INTO access_log (time, action) VALUES ('\u0001', '\u0001')\");    // Java line 133", "logQuery = $stack0;    // Java line 133" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 136,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack1 = 1005;    // Java line 136\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1005;    // Java line 136", "$stack2 = 1008;    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 136" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson8.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 137,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public static void log(Connection connection, String action) {\n  ...\n  $stack0.executeUpdate(logQuery);    // Java line 137\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson8.java:137' in the method 'SqlInjectionLesson8.log()' via variable 'logQuery'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.sql.Statement: int executeUpdate(java.lang.String)>(logQuery);    // Java line 137" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson8.log()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.log(java.sql.Connection, java.lang.String)"
              } ],
              "message" : {
                "text" : "logQuery"
              }
            },
            "state" : {
              "logQuery" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.introduction.SqlInjectionLesson8.completed(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "ssrf",
      "level" : "error",
      "message" : {
        "text" : "ssrf in SSRFTask2.furBall() reachable from SSRFTask2.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SSRFTask2.java"
          },
          "region" : {
            "startLine" : 55
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SSRFTask2.java:46 via variable `url` to SSRFTask2.java:55 via variable `$stack0`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SSRFTask2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 46,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SSRF/task2\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String url) {\n  ...\n  $stack0 = this.furBall(url);    // Java line 46\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SSRFTask2.completed()' at 'SSRFTask2.java:46' via variable 'url'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>(url);    // Java line 46", "$stack0 = virtualinvoke this.<org.owasp.webgoat.ssrf.SSRFTask2: org.owasp.webgoat.assignments.AttackResult furBall(java.lang.String)>(url);    // Java line 46" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SSRFTask2.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.ssrf.SSRFTask2.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "url"
              }
            },
            "state" : {
              "url" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SSRFTask2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 51,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult furBall(String url) {\n  ...\n  $stack0 = new StringBuffer();    // Java line 51\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.lang.StringBuffer;    // Java line 51", "$local2 = $stack0;    // Java line 51" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SSRFTask2.furBall()",
                "fullyQualifiedName" : "org.owasp.webgoat.ssrf.SSRFTask2.furBall(java.lang.String)"
              } ],
              "message" : {
                "text" : "url"
              }
            },
            "state" : {
              "url" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SSRFTask2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 53,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult furBall(String url) {\n  ...\n  $stack1 = \"http://ifconfig.pro\";    // Java line 53\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SSRFTask2.java:53' in the method 'SSRFTask2.furBall()' to variable 'url'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"http://ifconfig.pro\";    // Java line 53", "$stack0 = virtualinvoke url.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 53", "$stack0 = virtualinvoke url.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 53" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SSRFTask2.furBall()",
                "fullyQualifiedName" : "org.owasp.webgoat.ssrf.SSRFTask2.furBall(java.lang.String)"
              } ],
              "message" : {
                "text" : "url"
              }
            },
            "state" : {
              "url" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SSRFTask2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 54,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult furBall(String url) {\n  ...\n  $stack0 = new URL();    // Java line 54\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SSRFTask2.java:54' in the method 'SSRFTask2.furBall()' to variable '$stack0'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new java.net.URL;    // Java line 54", "specialinvoke $stack0.<java.net.URL: void <init>(java.lang.String)>(url);    // Java line 54" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SSRFTask2.furBall()",
                "fullyQualifiedName" : "org.owasp.webgoat.ssrf.SSRFTask2.furBall(java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack0"
              }
            },
            "state" : {
              "$stack0" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SSRFTask2.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 55,
                  "snippet" : {
                    "rendered" : {
                      "text" : "AttackResult furBall(String url) {\n  ...\n  $stack0 = $stack0.openConnection();    // Java line 55\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SSRFTask2.java:55' in the method 'SSRFTask2.furBall()' via variable '$stack0'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke $stack0.<java.net.URL: java.net.URLConnection openConnection()>();    // Java line 55" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SSRFTask2.furBall()",
                "fullyQualifiedName" : "org.owasp.webgoat.ssrf.SSRFTask2.furBall(java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack0"
              }
            },
            "state" : {
              "$stack0" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.ssrf.SSRFTask2.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "crypto-bad-mac",
      "level" : "error",
      "message" : {
        "text" : "crypto-bad-mac in HashingAssignment.getMd5() reachable from HashingAssignment.getMd5()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "HashingAssignment.java"
          },
          "region" : {
            "startLine" : 57
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Found vulnerability at HashingAssignment.java:57"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "HashingAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@RequestMapping(path={\"/crypto/hashing/md5\"}, produces={\"text/html\"})\n@ResponseBody\npublic String getMd5(HttpServletRequest request) {\n  ...\n  $stack0 = MessageDigest.getInstance($stack0);    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($stack0);    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "HashingAssignment.getMd5()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.HashingAssignment.getMd5(javax.servlet.http.HttpServletRequest)"
              } ]
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.crypto.HashingAssignment.getMd5(javax.servlet.http.HttpServletRequest)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson6a.injectableQuery() reachable from SqlOnlyInputValidationOnKeywords.attack()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson6a.java"
          },
          "region" : {
            "startLine" : 67
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlOnlyInputValidationOnKeywords.java:49 via variable `userId` to SqlInjectionLesson6a.java:67 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlOnlyInputValidationOnKeywords.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 49,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlOnlyInputValidationOnKeywords/attack\"})\n@ResponseBody\npublic AttackResult attack(@RequestParam(value=\"userid_sql_only_input_validation_on_keywords\") String userId) {\n  ...\n  $stack0 = userId.toUpperCase();    // Java line 49\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SqlOnlyInputValidationOnKeywords.attack()' at 'SqlOnlyInputValidationOnKeywords.java:49' via variable 'userId'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke userId.<java.lang.String: java.lang.String toUpperCase()>();    // Java line 49", "$stack1 = \"FROM\";    // Java line 49", "$stack2 = \"\";    // Java line 49", "$stack0 = virtualinvoke $stack0.<java.lang.String: java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)>($stack1, $stack2);    // Java line 49", "$stack1 = \"SELECT\";    // Java line 49", "$stack2 = \"\";    // Java line 49", "$stack0 = virtualinvoke $stack0.<java.lang.String: java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence)>($stack1, $stack2);    // Java line 49", "userId = $stack0;    // Java line 49" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlOnlyInputValidationOnKeywords.attack()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords.attack(java.lang.String)"
              } ],
              "message" : {
                "text" : "userId"
              }
            },
            "state" : {
              "userId" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlOnlyInputValidationOnKeywords.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 50,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlOnlyInputValidationOnKeywords/attack\"})\n@ResponseBody\npublic AttackResult attack(@RequestParam(value=\"userid_sql_only_input_validation_on_keywords\") String userId) {\n  ...\n  $stack1 = \" \";    // Java line 50\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \" \";    // Java line 50", "$stack0 = virtualinvoke $stack0.<java.lang.String: boolean contains(java.lang.CharSequence)>($stack1);    // Java line 50", "$stack0 = virtualinvoke $stack0.<java.lang.String: boolean contains(java.lang.CharSequence)>($stack1);    // Java line 50" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlOnlyInputValidationOnKeywords.attack()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords.attack(java.lang.String)"
              } ],
              "message" : {
                "text" : "userId"
              }
            },
            "state" : {
              "userId" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlOnlyInputValidationOnKeywords.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 53,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlOnlyInputValidationOnKeywords/attack\"})\n@ResponseBody\npublic AttackResult attack(@RequestParam(value=\"userid_sql_only_input_validation_on_keywords\") String userId) {\n  ...\n  $stack0 = this.lesson6a;    // Java line 53\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords:org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a lesson6a>;    // Java line 53", "$stack0 = virtualinvoke $stack0.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userId);    // Java line 53", "$stack0 = virtualinvoke $stack0.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userId);    // Java line 53" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlOnlyInputValidationOnKeywords.attack()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords.attack(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 57", "query = \"\";    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a:javax.sql.DataSource dataSource>;    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$local3 = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = 1;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = 1;    // Java line 59", "usedUnion = 1;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson6a.java:60' in the method 'SqlInjectionLesson6a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 65", "$stack2 = 1007;    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$local5 = $stack0;    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 67,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local5.executeQuery(query);    // Java line 67\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson6a.java:67' in the method 'SqlInjectionLesson6a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local5.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 67" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.mitigation.SqlOnlyInputValidationOnKeywords.attack(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "untrusted-deserialization",
      "level" : "error",
      "message" : {
        "text" : "untrusted-deserialization in VulnerableComponentsLesson.completed() reachable from VulnerableComponentsLesson.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "VulnerableComponentsLesson.java"
          },
          "region" : {
            "startLine" : 68
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from VulnerableComponentsLesson.java:38 via variable `payload` to VulnerableComponentsLesson.java:68 via variable `payload`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "VulnerableComponentsLesson.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 38,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/VulnerableComponents/attack1\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String payload) {\n  ...\n  $stack0 = new XStream();    // Java line 38\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new com.thoughtworks.xstream.XStream;    // Java line 38", "$stack2 = new com.thoughtworks.xstream.io.xml.DomDriver;    // Java line 38", "xstream = $stack0;    // Java line 38" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "VulnerableComponentsLesson.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "payload"
              }
            },
            "state" : {
              "payload" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "VulnerableComponentsLesson.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 39,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/VulnerableComponents/attack1\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String payload) {\n  ...\n  $stack1 = {org.owasp.webgoat.vulnerable_components.Contact};    // Java line 39\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = {org.owasp.webgoat.vulnerable_components.Contact};    // Java line 39", "$stack1 = virtualinvoke $stack1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();    // Java line 39", "$stack1 = virtualinvoke $stack1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();    // Java line 39", "virtualinvoke $stack0.<com.thoughtworks.xstream.XStream: void setClassLoader(java.lang.ClassLoader)>($stack1);    // Java line 39", "virtualinvoke $stack0.<com.thoughtworks.xstream.XStream: void setClassLoader(java.lang.ClassLoader)>($stack1);    // Java line 39" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "VulnerableComponentsLesson.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "payload"
              }
            },
            "state" : {
              "payload" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "VulnerableComponentsLesson.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 41,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/VulnerableComponents/attack1\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String payload) {\n  ...\n  $stack1 = {org.owasp.webgoat.vulnerable_components.Contact};    // Java line 41\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = {org.owasp.webgoat.vulnerable_components.Contact};    // Java line 41", "virtualinvoke $stack0.<com.thoughtworks.xstream.XStream: void processAnnotations(java.lang.Class)>($stack1);    // Java line 41", "virtualinvoke $stack0.<com.thoughtworks.xstream.XStream: void processAnnotations(java.lang.Class)>($stack1);    // Java line 41" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "VulnerableComponentsLesson.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "payload"
              }
            },
            "state" : {
              "payload" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "VulnerableComponentsLesson.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 68,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/VulnerableComponents/attack1\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String payload) {\n  ...\n  $stack0 = xstream.fromXML(payload);    // Java line 68\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'VulnerableComponentsLesson.java:68' in the method 'VulnerableComponentsLesson.completed()' via variable 'payload'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke xstream.<com.thoughtworks.xstream.XStream: java.lang.Object fromXML(java.lang.String)>(payload);    // Java line 68" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "VulnerableComponentsLesson.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "payload"
              }
            },
            "state" : {
              "payload" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.vulnerable_components.VulnerableComponentsLesson.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in SqlInjectionLesson6a.injectableQuery() reachable from SqlInjectionLesson6a.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SqlInjectionLesson6a.java"
          },
          "region" : {
            "startLine" : 67
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SqlInjectionLesson6a.java:52 via variable `accountName` to SqlInjectionLesson6a.java:67 via variable `query`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/SqlInjectionAdvanced/attack6a\"})\n@ResponseBody\npublic AttackResult completed(@RequestParam String userid_6a) {\n  ...\n  $stack0 = this.injectableQuery(userid_6a);    // Java line 52\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userid_6a);    // Java line 52", "$stack0 = virtualinvoke this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a: org.owasp.webgoat.assignments.AttackResult injectableQuery(java.lang.String)>(userid_6a);    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.completed(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 57,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = \"\";    // Java line 57\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"\";    // Java line 57", "query = \"\";    // Java line 57" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = this.dataSource;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a:javax.sql.DataSource dataSource>;    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$local3 = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = 1;    // Java line 59\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = 1;    // Java line 59", "usedUnion = 1;    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "accountName"
              }
            },
            "state" : {
              "accountName" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 60,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = dynamicinvoke \"makeConcatWithConstants\" <String (String)>(accountName) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SqlInjectionLesson6a.java:60' in the method 'SqlInjectionLesson6a.injectableQuery()' to variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String)>(accountName) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"SELECT * FROM user_data WHERE last_name = '\u0001'\");    // Java line 60", "query = $stack0;    // Java line 60" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 62,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"(?i)(^[^-/*;)]*)(\\\\s*)UNION(.*$)\";    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62", "$stack0 = virtualinvoke accountName.<java.lang.String: boolean matches(java.lang.String)>($stack1);    // Java line 62" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 65,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack1 = 1004;    // Java line 65\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = 1004;    // Java line 65", "$stack2 = 1007;    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$stack0 = interfaceinvoke $local3.<java.sql.Connection: java.sql.Statement createStatement(int, int)>($stack1, $stack2);    // Java line 65", "$local5 = $stack0;    // Java line 65" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SqlInjectionLesson6a.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 67,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public AttackResult injectableQuery(String accountName) {\n  ...\n  $stack0 = $local5.executeQuery(query);    // Java line 67\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SqlInjectionLesson6a.java:67' in the method 'SqlInjectionLesson6a.injectableQuery()' via variable 'query'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke $local5.<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>(query);    // Java line 67" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SqlInjectionLesson6a.injectableQuery()",
                "fullyQualifiedName" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.injectableQuery(java.lang.String)"
              } ],
              "message" : {
                "text" : "query"
              }
            },
            "state" : {
              "query" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.sql_injection.advanced.SqlInjectionLesson6a.completed(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in Assignment5.login() reachable from Assignment5.login()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Assignment5.java"
          },
          "region" : {
            "startLine" : 59
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from Assignment5.java:52 via variable `password_login` to Assignment5.java:59 via variable `$stack1`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = StringUtils.hasText(username_login);    // Java line 52\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'Assignment5.login()' at 'Assignment5.java:52' via variable 'password_login'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(username_login);    // Java line 52", "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(password_login);    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "password_login"
              }
            },
            "state" : {
              "password_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 55,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = \"Larry\";    // Java line 55\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"Larry\";    // Java line 55", "$stack0 = virtualinvoke $stack0.<java.lang.String: boolean equals(java.lang.Object)>(username_login);    // Java line 55" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "password_login"
              }
            },
            "state" : {
              "password_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = this.dataSource;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.challenges.challenge5.Assignment5:javax.sql.DataSource dataSource>;    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "connection = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "password_login"
              }
            },
            "state" : {
              "password_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(username_login, password_login) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"select password from challenge_users where userid = '\u0001' and password = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'Assignment5.java:59' in the method 'Assignment5.login()' via variable '$stack1'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(username_login, password_login) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"select password from challenge_users where userid = '\u0001' and password = '\u0001'\");    // Java line 59", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($stack1);    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack1"
              }
            },
            "state" : {
              "$stack1" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "sql-injection",
      "level" : "error",
      "message" : {
        "text" : "sql-injection in Assignment5.login() reachable from Assignment5.login()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "Assignment5.java"
          },
          "region" : {
            "startLine" : 59
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from Assignment5.java:52 via variable `username_login` to Assignment5.java:59 via variable `$stack1`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 52,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = StringUtils.hasText(username_login);    // Java line 52\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'Assignment5.login()' at 'Assignment5.java:52' via variable 'username_login'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(username_login);    // Java line 52", "$stack0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>(password_login);    // Java line 52" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "username_login"
              }
            },
            "state" : {
              "username_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 55,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = \"Larry\";    // Java line 55\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'Assignment5.java:55' in the method 'Assignment5.login()' to variable 'username_login'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = \"Larry\";    // Java line 55", "$stack0 = virtualinvoke $stack0.<java.lang.String: boolean equals(java.lang.Object)>(username_login);    // Java line 55" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "username_login"
              }
            },
            "state" : {
              "username_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 58,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack0 = this.dataSource;    // Java line 58\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = this.<org.owasp.webgoat.challenges.challenge5.Assignment5:javax.sql.DataSource dataSource>;    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "$stack0 = interfaceinvoke $stack0.<javax.sql.DataSource: java.sql.Connection getConnection()>();    // Java line 58", "connection = $stack0;    // Java line 58" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "username_login"
              }
            },
            "state" : {
              "username_login" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Assignment5.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 59,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/challenge/5\"})\n@ResponseBody\npublic AttackResult login(@RequestParam String username_login, @RequestParam String password_login) {\n  ...\n  $stack1 = dynamicinvoke \"makeConcatWithConstants\" <String (String, String)>(username_login, password_login) CallSite makeConcatWithConstants(MethodHandles$Lookup, String, MethodType, String, Object[])(\"select password from challenge_users where userid = '\u0001' and password = '\u0001'\");    // Java line 59\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'Assignment5.java:59' in the method 'Assignment5.login()' via variable '$stack1'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = dynamicinvoke \"makeConcatWithConstants\" <java.lang.String (java.lang.String, java.lang.String)>(username_login, password_login) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup, java.lang.String, java.lang.invoke.MethodType, java.lang.String, java.lang.Object[])>(\"select password from challenge_users where userid = '\u0001' and password = '\u0001'\");    // Java line 59", "$stack0 = interfaceinvoke connection.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($stack1);    // Java line 59" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Assignment5.login()",
                "fullyQualifiedName" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack1"
              }
            },
            "state" : {
              "$stack1" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.challenges.challenge5.Assignment5.login(java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "log-injection",
      "level" : "error",
      "message" : {
        "text" : "log-injection in SigningAssignment.completed() reachable from SigningAssignment.completed()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "SigningAssignment.java"
          },
          "region" : {
            "startLine" : 75
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from SigningAssignment.java:68 via variable `modulus` to SigningAssignment.java:75 via variable `modulus`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 68,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  tempModulus = modulus;    // Java line 68\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'SigningAssignment.completed()' at 'SigningAssignment.java:68' via variable 'modulus'"
                  },
                  "properties" : {
                    "ir" : [ "tempModulus = modulus;    // Java line 68" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 69,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  $stack0 = request.getSession();    // Java line 69\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>();    // Java line 69", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession()>();    // Java line 69", "$stack1 = \"keyPair\";    // Java line 69", "$stack0 = interfaceinvoke $stack0.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>($stack1);    // Java line 69", "$stack0 = interfaceinvoke $stack0.<javax.servlet.http.HttpSession: java.lang.Object getAttribute(java.lang.String)>($stack1);    // Java line 69", "keyPair = $stack0;    // Java line 69" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 70,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  $stack0 = $stack0.getPublic();    // Java line 70\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke $stack0.<java.security.KeyPair: java.security.PublicKey getPublic()>();    // Java line 70", "$stack0 = virtualinvoke $stack0.<java.security.KeyPair: java.security.PublicKey getPublic()>();    // Java line 70", "rsaPubKey = $stack0;    // Java line 70" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 71,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  $stack0 = modulus.length();    // Java line 71\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'SigningAssignment.java:71' in the method 'SigningAssignment.completed()' to variable 'modulus'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke modulus.<java.lang.String: int length()>();    // Java line 71", "$stack0 = virtualinvoke modulus.<java.lang.String: int length()>();    // Java line 71" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 74,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  $stack0 = rsaPubKey.getModulus();    // Java line 74\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = interfaceinvoke rsaPubKey.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();    // Java line 74", "$stack0 = interfaceinvoke rsaPubKey.<java.security.interfaces.RSAPublicKey: java.math.BigInteger getModulus()>();    // Java line 74", "$stack0 = virtualinvoke $stack0.<java.math.BigInteger: byte[] toByteArray()>();    // Java line 74", "$stack0 = virtualinvoke $stack0.<java.math.BigInteger: byte[] toByteArray()>();    // Java line 74", "$stack0 = staticinvoke <javax.xml.bind.DatatypeConverter: java.lang.String printHexBinary(byte[])>($stack0);    // Java line 74", "$stack1 = virtualinvoke tempModulus.<java.lang.String: java.lang.String toUpperCase()>();    // Java line 74", "$stack0 = virtualinvoke $stack0.<java.lang.String: boolean equals(java.lang.Object)>($stack1);    // Java line 74" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "SigningAssignment.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 75,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/crypto/signing/verify\"})\n@ResponseBody\npublic AttackResult completed(HttpServletRequest request, @RequestParam String modulus, @RequestParam String signature) {\n  ...\n  $stack0 = log;    // Java line 75\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "This data was used dangerously at 'SigningAssignment.java:75' in the method 'SigningAssignment.completed()' via variable 'modulus'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.crypto.SigningAssignment:org.slf4j.Logger log>;    // Java line 75", "$stack1 = \"modulus {} incorrect\";    // Java line 75", "interfaceinvoke $stack0.<org.slf4j.Logger: void warn(java.lang.String, java.lang.Object)>($stack1, modulus);    // Java line 75" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "SigningAssignment.completed()",
                "fullyQualifiedName" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest, java.lang.String, java.lang.String)"
              } ],
              "message" : {
                "text" : "modulus"
              }
            },
            "state" : {
              "modulus" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.crypto.SigningAssignment.completed(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "taint-to-static",
      "level" : "error",
      "message" : {
        "text" : "taint-to-static in StoredXssComments.createNewComment() reachable from StoredXssComments.createNewComment()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "StoredXssComments.java"
          },
          "region" : {
            "startLine" : 88
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from StoredXssComments.java:81 via variable `comment` to StoredXssComments.java:88 via variable `org.owasp.webgoat.xss.stored.StoredXssComments.userComments`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 81,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack0 = this.parseJson(commentStr);    // Java line 81\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "We traced untrusted data from entrypoint 'StoredXssComments.createNewComment()' at 'StoredXssComments.java:81' via variable 'comment'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>(commentStr);    // Java line 81", "$stack0 = virtualinvoke this.<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>(commentStr);    // Java line 81" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 98,
                  "snippet" : {
                    "rendered" : {
                      "text" : "private Comment parseJson(String comment) {\n  ...\n  $stack0 = new ObjectMapper();    // Java line 98\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new com.fasterxml.jackson.databind.ObjectMapper;    // Java line 98", "mapper = $stack0;    // Java line 98" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.parseJson()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.parseJson(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 100,
                  "snippet" : {
                    "rendered" : {
                      "text" : "private Comment parseJson(String comment) {\n  ...\n  $stack2 = {org.owasp.webgoat.xss.Comment};    // Java line 100\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:100' in the method 'StoredXssComments.parseJson()' to variable '$stack0'"
                  },
                  "properties" : {
                    "ir" : [ "$stack2 = {org.owasp.webgoat.xss.Comment};    // Java line 100", "$stack0 = virtualinvoke mapper.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String, java.lang.Class)>(comment, $stack2);    // Java line 100", "return $stack0;    // Java line 100" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.parseJson()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.parseJson(java.lang.String)"
              } ],
              "message" : {
                "text" : "$stack0"
              }
            },
            "state" : {
              "$stack0" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 81,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack0 = this.parseJson(commentStr);    // Java line 81\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:81' in the method 'StoredXssComments.createNewComment()' to variable 'comment'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = virtualinvoke this.<org.owasp.webgoat.xss.stored.StoredXssComments: org.owasp.webgoat.xss.Comment parseJson(java.lang.String)>(commentStr);    // Java line 81", "comment = $stack0;    // Java line 81" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 83,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack0 = userComments;    // Java line 83\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:83' in the method 'StoredXssComments.createNewComment()' to variable 'comment'"
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.xss.stored.StoredXssComments:java.util.Map userComments>;    // Java line 83", "$stack1 = this.<org.owasp.webgoat.xss.stored.StoredXssComments:org.owasp.webgoat.session.WebSession webSession>;    // Java line 83", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 83", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 83", "$stack2 = new java.util.ArrayList;    // Java line 83", "    // Java line 83", "$stack0 = $stack2;    // Java line 83", "comments = $stack0;    // Java line 83" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 84,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack1 = DateTime.now();    // Java line 84\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:84' in the method 'StoredXssComments.createNewComment()' to variable 'comment'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = staticinvoke <org.joda.time.DateTime: org.joda.time.DateTime now()>();    // Java line 84", "$stack2 = <org.owasp.webgoat.xss.stored.StoredXssComments:org.joda.time.format.DateTimeFormatter fmt>;    // Java line 84", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 84", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 84", "virtualinvoke comment.<org.owasp.webgoat.xss.Comment: void setDateTime(java.lang.String)>($stack1);    // Java line 84", "virtualinvoke comment.<org.owasp.webgoat.xss.Comment: void setDateTime(java.lang.String)>($stack1);    // Java line 84" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 85,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack1 = this.webSession;    // Java line 85\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:85' in the method 'StoredXssComments.createNewComment()' to variable 'comment'"
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = this.<org.owasp.webgoat.xss.stored.StoredXssComments:org.owasp.webgoat.session.WebSession webSession>;    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 85", "virtualinvoke comment.<org.owasp.webgoat.xss.Comment: void setUser(java.lang.String)>($stack1);    // Java line 85", "virtualinvoke comment.<org.owasp.webgoat.xss.Comment: void setUser(java.lang.String)>($stack1);    // Java line 85" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comment"
              }
            },
            "state" : {
              "comment" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 87,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  comments.add(comment);    // Java line 87\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'StoredXssComments.java:87' in the method 'StoredXssComments.createNewComment()' to variable 'comments'"
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke comments.<java.util.List: boolean add(java.lang.Object)>(comment);    // Java line 87" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "comments"
              }
            },
            "state" : {
              "comments" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "StoredXssComments.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 88,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/CrossSiteScriptingStored/stored-xss\"})\n@ResponseBody\npublic AttackResult createNewComment(@RequestBody String commentStr) {\n  ...\n  $stack0 = userComments;    // Java line 88\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.xss.stored.StoredXssComments:java.util.Map userComments>;    // Java line 88", "$stack1 = this.<org.owasp.webgoat.xss.stored.StoredXssComments:org.owasp.webgoat.session.WebSession webSession>;    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "    // Java line 88" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "StoredXssComments.createNewComment()",
                "fullyQualifiedName" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
              } ],
              "message" : {
                "text" : "org.owasp.webgoat.xss.stored.StoredXssComments.userComments"
              }
            },
            "state" : {
              "org.owasp.webgoat.xss.stored.StoredXssComments.userComments" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.xss.stored.StoredXssComments.createNewComment(java.lang.String)"
        }
      } ]
    }, {
      "ruleId" : "taint-to-static",
      "level" : "error",
      "message" : {
        "text" : "taint-to-static in ForgedReviews.createNewReview() reachable from ForgedReviews.createNewReview()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ForgedReviews.java"
          },
          "region" : {
            "startLine" : 90
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ForgedReviews.java:79 via variable `stars` to ForgedReviews.java:90 via variable `org.owasp.webgoat.csrf.ForgedReviews.userReviews`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 79,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"host\";    // Java line 79\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"host\";    // Java line 79", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 79", "$stack1 = \"host\";    // Java line 79", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 79", "host = $stack0;    // Java line 79" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 80,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"referer\";    // Java line 80\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"referer\";    // Java line 80", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 80", "$stack1 = \"referer\";    // Java line 80", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 80", "referer = $stack0;    // Java line 80" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 81,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"/\";    // Java line 81\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"/\";    // Java line 81", "$stack0 = virtualinvoke $stack0.<java.lang.String: java.lang.String[] split(java.lang.String)>($stack1);    // Java line 81", "refererArr = $stack0;    // Java line 81" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 83,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = new Review();    // Java line 83\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new org.owasp.webgoat.csrf.Review;    // Java line 83", "specialinvoke $stack0.<org.owasp.webgoat.csrf.Review: void <init>()>();    // Java line 83" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 39,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public Review() {\n  ...\n  return;    // Java line 39\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 39" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.<init>()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.<init>()"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 83,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.<init>();    // Java line 83\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "specialinvoke $stack0.<org.owasp.webgoat.csrf.Review: void <init>()>();    // Java line 83", "review = $stack0;    // Java line 83" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 84,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setText(reviewText);    // Java line 84\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setText(String text) {\n  ...\n  this.text = text;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String text> = text;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setText()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setText(java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 84,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setText(reviewText);    // Java line 84\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 85,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = DateTime.now();    // Java line 85\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = staticinvoke <org.joda.time.DateTime: org.joda.time.DateTime now()>();    // Java line 85", "$stack2 = <org.owasp.webgoat.csrf.ForgedReviews:org.joda.time.format.DateTimeFormatter fmt>;    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 85", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setDateTime(String dateTime) {\n  ...\n  this.dateTime = dateTime;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String dateTime> = dateTime;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setDateTime()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setDateTime(java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 85,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setDateTime($stack1);    // Java line 85\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 86,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = this.webSession;    // Java line 86\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 86", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 86", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 86", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setUser(String user) {\n  ...\n  this.user = user;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String user> = user;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setUser(java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 86,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setUser($stack1);    // Java line 86\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 87,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setStars(stars);    // Java line 87\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ForgedReviews.java:87' in the method 'ForgedReviews.createNewReview()' to variable 'stars'"
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setStars(Integer stars) {\n  ...\n  this.stars = stars;    // Java line 37\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'Review.java:37' in the method 'Review.setStars()' to variable 'stars'"
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.Integer stars> = stars;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setStars()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setStars(java.lang.Integer)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 87,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setStars(stars);    // Java line 87\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ForgedReviews.java:87' in the method 'ForgedReviews.createNewReview()' to variable 'stars'"
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 88,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = userReviews;    // Java line 88\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.csrf.ForgedReviews:java.util.Map userReviews>;    // Java line 88", "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "$stack2 = new java.util.ArrayList;    // Java line 88", "    // Java line 88", "$stack0 = $stack2;    // Java line 88", "reviews = $stack0;    // Java line 88" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "stars"
              }
            },
            "state" : {
              "stars" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 89,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.add(review);    // Java line 89\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>(review);    // Java line 89" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviews"
              }
            },
            "state" : {
              "reviews" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 90,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = userReviews;    // Java line 90\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.csrf.ForgedReviews:java.util.Map userReviews>;    // Java line 90", "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 90", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 90", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 90", "    // Java line 90" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "org.owasp.webgoat.csrf.ForgedReviews.userReviews"
              }
            },
            "state" : {
              "org.owasp.webgoat.csrf.ForgedReviews.userReviews" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)"
        }
      } ]
    }, {
      "ruleId" : "taint-to-static",
      "level" : "error",
      "message" : {
        "text" : "taint-to-static in ForgedReviews.createNewReview() reachable from ForgedReviews.createNewReview()"
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "ForgedReviews.java"
          },
          "region" : {
            "startLine" : 90
          }
        }
      } ],
      "codeFlows" : [ {
        "message" : {
          "text" : "Untrusted data flow from ForgedReviews.java:79 via variable `reviewText` to ForgedReviews.java:90 via variable `org.owasp.webgoat.csrf.ForgedReviews.userReviews`"
        },
        "threadFlows" : [ {
          "locations" : [ {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 79,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"host\";    // Java line 79\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"host\";    // Java line 79", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 79", "$stack1 = \"host\";    // Java line 79", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 79", "host = $stack0;    // Java line 79" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 80,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"referer\";    // Java line 80\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"referer\";    // Java line 80", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 80", "$stack1 = \"referer\";    // Java line 80", "$stack0 = interfaceinvoke request.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>($stack1);    // Java line 80", "referer = $stack0;    // Java line 80" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 81,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = \"/\";    // Java line 81\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = \"/\";    // Java line 81", "$stack0 = virtualinvoke $stack0.<java.lang.String: java.lang.String[] split(java.lang.String)>($stack1);    // Java line 81", "refererArr = $stack0;    // Java line 81" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "untrusted", "cross-site" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 83,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = new Review();    // Java line 83\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = new org.owasp.webgoat.csrf.Review;    // Java line 83", "specialinvoke $stack0.<org.owasp.webgoat.csrf.Review: void <init>()>();    // Java line 83" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 39,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public Review() {\n  ...\n  return;    // Java line 39\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "return;    // Java line 39" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.<init>()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.<init>()"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 83,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.<init>();    // Java line 83\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "specialinvoke $stack0.<org.owasp.webgoat.csrf.Review: void <init>()>();    // Java line 83", "review = $stack0;    // Java line 83" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 84,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setText(reviewText);    // Java line 84\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "text"
              }
            },
            "state" : {
              "text" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setText(String text) {\n  ...\n  this.text = text;    // Java line 37\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'Review.java:37' in the method 'Review.setText()' to variable 'text'"
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String text> = text;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setText()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setText(java.lang.String)"
              } ],
              "message" : {
                "text" : "text"
              }
            },
            "state" : {
              "text" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 84,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setText(reviewText);    // Java line 84\n  ...\n}"
                    }
                  },
                  "message" : {
                    "text" : "Propagation event of untrusted data occurred at 'ForgedReviews.java:84' in the method 'ForgedReviews.createNewReview()' to variable 'reviewText'"
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setText(java.lang.String)>(reviewText);    // Java line 84" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            },
            "importance" : "essential"
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 85,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = DateTime.now();    // Java line 85\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = staticinvoke <org.joda.time.DateTime: org.joda.time.DateTime now()>();    // Java line 85", "$stack2 = <org.owasp.webgoat.csrf.ForgedReviews:org.joda.time.format.DateTimeFormatter fmt>;    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 85", "$stack1 = virtualinvoke $stack1.<org.joda.time.DateTime: java.lang.String toString(org.joda.time.format.DateTimeFormatter)>($stack2);    // Java line 85", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setDateTime(String dateTime) {\n  ...\n  this.dateTime = dateTime;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String dateTime> = dateTime;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setDateTime()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setDateTime(java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 85,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setDateTime($stack1);    // Java line 85\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setDateTime(java.lang.String)>($stack1);    // Java line 85" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 86,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack1 = this.webSession;    // Java line 86\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 86", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 86", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 86", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setUser(String user) {\n  ...\n  this.user = user;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.String user> = user;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setUser()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setUser(java.lang.String)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 86,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setUser($stack1);    // Java line 86\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setUser(java.lang.String)>($stack1);    // Java line 86" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 87,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setStars(stars);    // Java line 87\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87", "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "Review.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 37,
                  "snippet" : {
                    "rendered" : {
                      "text" : "public void setStars(Integer stars) {\n  ...\n  this.stars = stars;    // Java line 37\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "this.<org.owasp.webgoat.csrf.Review:java.lang.Integer stars> = stars;    // Java line 37", "return;    // Java line 37" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "Review.setStars()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.Review.setStars(java.lang.Integer)"
              } ]
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 87,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.setStars(stars);    // Java line 87\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "virtualinvoke $stack0.<org.owasp.webgoat.csrf.Review: void setStars(java.lang.Integer)>(stars);    // Java line 87" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 88,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = userReviews;    // Java line 88\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.csrf.ForgedReviews:java.util.Map userReviews>;    // Java line 88", "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 88", "$stack2 = new java.util.ArrayList;    // Java line 88", "    // Java line 88", "$stack0 = $stack2;    // Java line 88", "reviews = $stack0;    // Java line 88" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviewText"
              }
            },
            "state" : {
              "reviewText" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 89,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0.add(review);    // Java line 89\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "interfaceinvoke $stack0.<java.util.List: boolean add(java.lang.Object)>(review);    // Java line 89" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "reviews"
              }
            },
            "state" : {
              "reviews" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          }, {
            "location" : {
              "physicalLocation" : {
                "artifactLocation" : {
                  "uri" : "ForgedReviews.java",
                  "uriBaseId" : "%SRCROOT%"
                },
                "region" : {
                  "startLine" : 90,
                  "snippet" : {
                    "rendered" : {
                      "text" : "@PostMapping(value={\"/csrf/review\"})\n@ResponseBody\npublic AttackResult createNewReview(String reviewText, Integer stars, String validateReq, HttpServletRequest request) {\n  ...\n  $stack0 = userReviews;    // Java line 90\n  ...\n}"
                    }
                  },
                  "properties" : {
                    "ir" : [ "$stack0 = <org.owasp.webgoat.csrf.ForgedReviews:java.util.Map userReviews>;    // Java line 90", "$stack1 = this.<org.owasp.webgoat.csrf.ForgedReviews:org.owasp.webgoat.session.WebSession webSession>;    // Java line 90", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 90", "$stack1 = virtualinvoke $stack1.<org.owasp.webgoat.session.WebSession: java.lang.String getUserName()>();    // Java line 90", "    // Java line 90" ]
                  }
                }
              },
              "logicalLocations" : [ {
                "name" : "ForgedReviews.createNewReview()",
                "fullyQualifiedName" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String, java.lang.Integer, java.lang.String, javax.servlet.http.HttpServletRequest)"
              } ],
              "message" : {
                "text" : "org.owasp.webgoat.csrf.ForgedReviews.userReviews"
              }
            },
            "state" : {
              "org.owasp.webgoat.csrf.ForgedReviews.userReviews" : {
                "text" : "tainted",
                "properties" : {
                  "taintTags" : [ "cross-site", "untrusted" ]
                }
              }
            }
          } ]
        } ],
        "properties" : {
          "routeSignature" : "org.owasp.webgoat.csrf.ForgedReviews.createNewReview(java.lang.String,java.lang.Integer,java.lang.String,javax.servlet.http.HttpServletRequest)"
        }
      } ]
    } ],
    "invocations" : [ {
      "commandLine" : "java -XX:MaxRAMPercentage=80 -jar /app/contrast-scan-java-cli.jar -o /tmp/results.sarif.json /tmp/1411f46c-7f57-426e-be61-82d583722c7f_5d4402b2-ef15-4228-b708-05979d8bcd06_webgoat-server-8.1.0.jar",
      "executionSuccessful" : true
    } ]
  } ]
}